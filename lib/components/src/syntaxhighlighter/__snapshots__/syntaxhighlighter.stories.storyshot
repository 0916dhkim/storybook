// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Storyshots Components|SyntaxHighlighter bash 1`] = `
.emotion-6 {
  position: relative;
  overflow: hidden;
}

.emotion-4 {
  position: relative;
  overflow: auto;
}

.emotion-4 code {
  padding-right: 10px;
  opacity: 0.7;
}

.emotion-4 * .token {
  font-family: "Operator Mono","Fira Code Retina","Fira Code","FiraCode-Retina","Andale Mono","Lucida Console",Consolas,Monaco,monospace;
  -webkit-font-smoothing: antialiased;
}

.emotion-4 * .token.comment {
  color: #008000;
  font-style: italic;
}

.emotion-4 * .token.prolog {
  color: #008000;
  font-style: italic;
}

.emotion-4 * .token.doctype {
  color: #008000;
  font-style: italic;
}

.emotion-4 * .token.cdata {
  color: #008000;
  font-style: italic;
}

.emotion-4 * .token.string {
  color: #A31515;
}

.emotion-4 * .token.punctuation {
  color: #393A34;
}

.emotion-4 * .token.operator {
  color: #393A34;
}

.emotion-4 * .token.url {
  color: #36acaa;
}

.emotion-4 * .token.symbol {
  color: #36acaa;
}

.emotion-4 * .token.number {
  color: #36acaa;
}

.emotion-4 * .token.boolean {
  color: #36acaa;
}

.emotion-4 * .token.variable {
  color: #36acaa;
}

.emotion-4 * .token.constant {
  color: #36acaa;
}

.emotion-4 * .token.inserted {
  color: #36acaa;
}

.emotion-4 * .token.atrule {
  color: #0000ff;
}

.emotion-4 * .token.keyword {
  color: #0000ff;
}

.emotion-4 * .token.attr-value {
  color: #0000ff;
}

.emotion-4 * .token.function {
  color: #393A34;
}

.emotion-4 * .token.deleted {
  color: #9a050f;
}

.emotion-4 * .token.important {
  font-weight: bold;
}

.emotion-4 * .token.bold {
  font-weight: bold;
}

.emotion-4 * .token.italic {
  font-style: italic;
}

.emotion-4 * .token.class-name {
  color: #2B91AF;
}

.emotion-4 * .token.tag {
  color: #800000;
}

.emotion-4 * .token.selector {
  color: #800000;
}

.emotion-4 * .token.attr-name {
  color: #ff0000;
}

.emotion-4 * .token.property {
  color: #ff0000;
}

.emotion-4 * .token.regex {
  color: #ff0000;
}

.emotion-4 * .token.entity {
  color: #ff0000;
}

.emotion-4 * .token.directive.tag .tag {
  background: #ffff00;
  color: #393A34;
}

.emotion-4 * .language-json .token.boolean {
  color: #0000ff;
}

.emotion-4 * .language-json .token.number {
  color: #0000ff;
}

.emotion-4 * .language-json .token.property {
  color: #2B91AF;
}

.emotion-4 * .namespace {
  opacity: 0.7;
}

.emotion-2 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: start;
  -webkit-justify-content: flex-start;
  -ms-flex-pack: start;
  justify-content: flex-start;
  margin: 0;
  padding: 0;
}

.emotion-0 {
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
  padding-right: 0;
  opacity: 1;
}

<div
  class="emotion-6 emotion-7"
>
  <div
    class="emotion-4 emotion-5"
  >
    <pre
      class="hljs emotion-2 emotion-3"
    >
      <code
        class="emotion-0 emotion-1"
      >
        npx npm-check-updates 
        <span
          class="token string"
        >
          '/storybook/'
        </span>
         -u 
        <span
          class="token operator"
        >
          &&
        </span>
         yarn
      </code>
    </pre>
  </div>
</div>
`;

exports[`Storyshots Components|SyntaxHighlighter bordered & copy-able 1`] = `
.emotion-10 {
  position: absolute;
  bottom: 0;
  right: 0;
  max-width: 100%;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  list-style: none;
  margin: 0;
  padding: 0;
  border-top: 1px solid rgba(0,0,0,0.1);
  border-left: 1px solid rgba(0,0,0,0.1);
  background: rgba(255,255,255,1);
  border-radius: 4px 0 0 0;
}

.emotion-8 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  position: relative;
  list-style: none;
  padding: 0;
  height: 26px;
  font-size: 11px;
  -webkit-letter-spacing: 1px;
  -moz-letter-spacing: 1px;
  -ms-letter-spacing: 1px;
  letter-spacing: 1px;
  text-transform: uppercase;
  border-left: 0 none;
}

.emotion-6 {
  border: 0 none;
  display: block;
  background: none;
  padding: 0 10px;
  cursor: pointer;
  text-transform: inherit;
  -webkit-letter-spacing: inherit;
  -moz-letter-spacing: inherit;
  -ms-letter-spacing: inherit;
  letter-spacing: inherit;
  font-size: inherit;
  color: inherit;
  border-top: 2px solid transparent;
  border-bottom: 2px solid transparent;
}

.emotion-6:focus {
  border-bottom: 2px solid #9fdaff;
  outline: 0 none;
}

.emotion-4 {
  position: relative;
  overflow: auto;
}

.emotion-4 code {
  padding-right: 10px;
  opacity: 0.7;
}

.emotion-4 * .token {
  font-family: "Operator Mono","Fira Code Retina","Fira Code","FiraCode-Retina","Andale Mono","Lucida Console",Consolas,Monaco,monospace;
  -webkit-font-smoothing: antialiased;
}

.emotion-4 * .token.comment {
  color: #008000;
  font-style: italic;
}

.emotion-4 * .token.prolog {
  color: #008000;
  font-style: italic;
}

.emotion-4 * .token.doctype {
  color: #008000;
  font-style: italic;
}

.emotion-4 * .token.cdata {
  color: #008000;
  font-style: italic;
}

.emotion-4 * .token.string {
  color: #A31515;
}

.emotion-4 * .token.punctuation {
  color: #393A34;
}

.emotion-4 * .token.operator {
  color: #393A34;
}

.emotion-4 * .token.url {
  color: #36acaa;
}

.emotion-4 * .token.symbol {
  color: #36acaa;
}

.emotion-4 * .token.number {
  color: #36acaa;
}

.emotion-4 * .token.boolean {
  color: #36acaa;
}

.emotion-4 * .token.variable {
  color: #36acaa;
}

.emotion-4 * .token.constant {
  color: #36acaa;
}

.emotion-4 * .token.inserted {
  color: #36acaa;
}

.emotion-4 * .token.atrule {
  color: #0000ff;
}

.emotion-4 * .token.keyword {
  color: #0000ff;
}

.emotion-4 * .token.attr-value {
  color: #0000ff;
}

.emotion-4 * .token.function {
  color: #393A34;
}

.emotion-4 * .token.deleted {
  color: #9a050f;
}

.emotion-4 * .token.important {
  font-weight: bold;
}

.emotion-4 * .token.bold {
  font-weight: bold;
}

.emotion-4 * .token.italic {
  font-style: italic;
}

.emotion-4 * .token.class-name {
  color: #2B91AF;
}

.emotion-4 * .token.tag {
  color: #800000;
}

.emotion-4 * .token.selector {
  color: #800000;
}

.emotion-4 * .token.attr-name {
  color: #ff0000;
}

.emotion-4 * .token.property {
  color: #ff0000;
}

.emotion-4 * .token.regex {
  color: #ff0000;
}

.emotion-4 * .token.entity {
  color: #ff0000;
}

.emotion-4 * .token.directive.tag .tag {
  background: #ffff00;
  color: #393A34;
}

.emotion-4 * .language-json .token.boolean {
  color: #0000ff;
}

.emotion-4 * .language-json .token.number {
  color: #0000ff;
}

.emotion-4 * .language-json .token.property {
  color: #2B91AF;
}

.emotion-4 * .namespace {
  opacity: 0.7;
}

.emotion-0 {
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
  padding-right: 0;
  opacity: 1;
}

.emotion-12 {
  position: relative;
  overflow: hidden;
  border: 1px solid rgba(0,0,0,0.1);
  border-radius: 4px;
  background: rgba(255,255,255,1);
}

.emotion-2 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: start;
  -webkit-justify-content: flex-start;
  -ms-flex-pack: start;
  justify-content: flex-start;
  margin: 0;
  padding: 10px;
}

<div
  class="emotion-12 emotion-13"
>
  <div
    class="emotion-4 emotion-5"
  >
    <pre
      class="hljs emotion-2 emotion-3"
    >
      <code
        class="emotion-0 emotion-1"
      >
        <span
          class="token keyword"
        >
          import
        </span>
         
        <span
          class="token punctuation"
        >
          {
        </span>
         Good
        <span
          class="token punctuation"
        >
          ,
        </span>
         Things 
        <span
          class="token punctuation"
        >
          }
        </span>
         
        <span
          class="token keyword"
        >
          from
        </span>
         
        <span
          class="token string"
        >
          'life'
        </span>
        <span
          class="token punctuation"
        >
          ;
        </span>
        


        <span
          class="token keyword"
        >
          const
        </span>
         
        <span
          class="token function-variable function"
        >
          result
        </span>
         
        <span
          class="token operator"
        >
          =
        </span>
         
        <span
          class="token punctuation"
        >
          (
        </span>
        <span
          class="token punctuation"
        >
          )
        </span>
         
        <span
          class="token operator"
        >
          =&gt;
        </span>
         
        <span
          class="token tag"
        >
          <span
            class="token tag"
          >
            <span
              class="token punctuation"
            >
              &lt;
            </span>
            Good
          </span>
          <span
            class="token punctuation"
          >
            &gt;
          </span>
        </span>
        <span
          class="token tag"
        >
          <span
            class="token tag"
          >
            <span
              class="token punctuation"
            >
              &lt;
            </span>
            Things
          </span>
           
          <span
            class="token punctuation"
          >
            /&gt;
          </span>
        </span>
        <span
          class="token tag"
        >
          <span
            class="token tag"
          >
            <span
              class="token punctuation"
            >
              &lt;/
            </span>
            Good
          </span>
          <span
            class="token punctuation"
          >
            &gt;
          </span>
        </span>
        <span
          class="token punctuation"
        >
          ;
        </span>
        


        <span
          class="token keyword"
        >
          export
        </span>
         
        <span
          class="token punctuation"
        >
          {
        </span>
         result 
        <span
          class="token keyword"
        >
          as
        </span>
         
        <span
          class="token keyword"
        >
          default
        </span>
         
        <span
          class="token punctuation"
        >
          }
        </span>
        <span
          class="token punctuation"
        >
          ;
        </span>
        

      </code>
    </pre>
  </div>
  <ul
    class="emotion-10 emotion-11"
  >
    <li
      class="emotion-8 emotion-9"
    >
      <button
        class="emotion-6 emotion-7"
      >
        copy
      </button>
    </li>
  </ul>
</div>
`;

exports[`Storyshots Components|SyntaxHighlighter jsx 1`] = `
.emotion-6 {
  position: relative;
  overflow: hidden;
}

.emotion-4 {
  position: relative;
  overflow: auto;
}

.emotion-4 code {
  padding-right: 10px;
  opacity: 0.7;
}

.emotion-4 * .token {
  font-family: "Operator Mono","Fira Code Retina","Fira Code","FiraCode-Retina","Andale Mono","Lucida Console",Consolas,Monaco,monospace;
  -webkit-font-smoothing: antialiased;
}

.emotion-4 * .token.comment {
  color: #008000;
  font-style: italic;
}

.emotion-4 * .token.prolog {
  color: #008000;
  font-style: italic;
}

.emotion-4 * .token.doctype {
  color: #008000;
  font-style: italic;
}

.emotion-4 * .token.cdata {
  color: #008000;
  font-style: italic;
}

.emotion-4 * .token.string {
  color: #A31515;
}

.emotion-4 * .token.punctuation {
  color: #393A34;
}

.emotion-4 * .token.operator {
  color: #393A34;
}

.emotion-4 * .token.url {
  color: #36acaa;
}

.emotion-4 * .token.symbol {
  color: #36acaa;
}

.emotion-4 * .token.number {
  color: #36acaa;
}

.emotion-4 * .token.boolean {
  color: #36acaa;
}

.emotion-4 * .token.variable {
  color: #36acaa;
}

.emotion-4 * .token.constant {
  color: #36acaa;
}

.emotion-4 * .token.inserted {
  color: #36acaa;
}

.emotion-4 * .token.atrule {
  color: #0000ff;
}

.emotion-4 * .token.keyword {
  color: #0000ff;
}

.emotion-4 * .token.attr-value {
  color: #0000ff;
}

.emotion-4 * .token.function {
  color: #393A34;
}

.emotion-4 * .token.deleted {
  color: #9a050f;
}

.emotion-4 * .token.important {
  font-weight: bold;
}

.emotion-4 * .token.bold {
  font-weight: bold;
}

.emotion-4 * .token.italic {
  font-style: italic;
}

.emotion-4 * .token.class-name {
  color: #2B91AF;
}

.emotion-4 * .token.tag {
  color: #800000;
}

.emotion-4 * .token.selector {
  color: #800000;
}

.emotion-4 * .token.attr-name {
  color: #ff0000;
}

.emotion-4 * .token.property {
  color: #ff0000;
}

.emotion-4 * .token.regex {
  color: #ff0000;
}

.emotion-4 * .token.entity {
  color: #ff0000;
}

.emotion-4 * .token.directive.tag .tag {
  background: #ffff00;
  color: #393A34;
}

.emotion-4 * .language-json .token.boolean {
  color: #0000ff;
}

.emotion-4 * .language-json .token.number {
  color: #0000ff;
}

.emotion-4 * .language-json .token.property {
  color: #2B91AF;
}

.emotion-4 * .namespace {
  opacity: 0.7;
}

.emotion-2 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: start;
  -webkit-justify-content: flex-start;
  -ms-flex-pack: start;
  justify-content: flex-start;
  margin: 0;
  padding: 0;
}

.emotion-0 {
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
  padding-right: 0;
  opacity: 1;
}

<div
  class="emotion-6 emotion-7"
>
  <div
    class="emotion-4 emotion-5"
  >
    <pre
      class="hljs emotion-2 emotion-3"
    >
      <code
        class="emotion-0 emotion-1"
      >
        <span
          class="token keyword"
        >
          import
        </span>
         
        <span
          class="token punctuation"
        >
          {
        </span>
         Good
        <span
          class="token punctuation"
        >
          ,
        </span>
         Things 
        <span
          class="token punctuation"
        >
          }
        </span>
         
        <span
          class="token keyword"
        >
          from
        </span>
         
        <span
          class="token string"
        >
          'life'
        </span>
        <span
          class="token punctuation"
        >
          ;
        </span>
        


        <span
          class="token keyword"
        >
          const
        </span>
         
        <span
          class="token function-variable function"
        >
          result
        </span>
         
        <span
          class="token operator"
        >
          =
        </span>
         
        <span
          class="token punctuation"
        >
          (
        </span>
        <span
          class="token punctuation"
        >
          )
        </span>
         
        <span
          class="token operator"
        >
          =&gt;
        </span>
         
        <span
          class="token tag"
        >
          <span
            class="token tag"
          >
            <span
              class="token punctuation"
            >
              &lt;
            </span>
            Good
          </span>
          <span
            class="token punctuation"
          >
            &gt;
          </span>
        </span>
        <span
          class="token tag"
        >
          <span
            class="token tag"
          >
            <span
              class="token punctuation"
            >
              &lt;
            </span>
            Things
          </span>
           
          <span
            class="token attr-name"
          >
            all
          </span>
          <span
            class="token script language-javascript"
          >
            <span
              class="token script-punctuation punctuation"
            >
              =
            </span>
            <span
              class="token punctuation"
            >
              {
            </span>
            <span
              class="token boolean"
            >
              true
            </span>
            <span
              class="token punctuation"
            >
              }
            </span>
          </span>
           
          <span
            class="token punctuation"
          >
            /&gt;
          </span>
        </span>
        <span
          class="token tag"
        >
          <span
            class="token tag"
          >
            <span
              class="token punctuation"
            >
              &lt;/
            </span>
            Good
          </span>
          <span
            class="token punctuation"
          >
            &gt;
          </span>
        </span>
        <span
          class="token punctuation"
        >
          ;
        </span>
        


        <span
          class="token keyword"
        >
          export
        </span>
         
        <span
          class="token punctuation"
        >
          {
        </span>
         result 
        <span
          class="token keyword"
        >
          as
        </span>
         
        <span
          class="token keyword"
        >
          default
        </span>
         
        <span
          class="token punctuation"
        >
          }
        </span>
        <span
          class="token punctuation"
        >
          ;
        </span>
        

      </code>
    </pre>
  </div>
</div>
`;

exports[`Storyshots Components|SyntaxHighlighter showLineNumbers 1`] = `
.emotion-6 {
  position: relative;
  overflow: hidden;
}

.emotion-4 {
  position: relative;
  overflow: auto;
}

.emotion-4 code {
  padding-right: 10px;
  opacity: 0.7;
}

.emotion-4 * .token {
  font-family: "Operator Mono","Fira Code Retina","Fira Code","FiraCode-Retina","Andale Mono","Lucida Console",Consolas,Monaco,monospace;
  -webkit-font-smoothing: antialiased;
}

.emotion-4 * .token.comment {
  color: #008000;
  font-style: italic;
}

.emotion-4 * .token.prolog {
  color: #008000;
  font-style: italic;
}

.emotion-4 * .token.doctype {
  color: #008000;
  font-style: italic;
}

.emotion-4 * .token.cdata {
  color: #008000;
  font-style: italic;
}

.emotion-4 * .token.string {
  color: #A31515;
}

.emotion-4 * .token.punctuation {
  color: #393A34;
}

.emotion-4 * .token.operator {
  color: #393A34;
}

.emotion-4 * .token.url {
  color: #36acaa;
}

.emotion-4 * .token.symbol {
  color: #36acaa;
}

.emotion-4 * .token.number {
  color: #36acaa;
}

.emotion-4 * .token.boolean {
  color: #36acaa;
}

.emotion-4 * .token.variable {
  color: #36acaa;
}

.emotion-4 * .token.constant {
  color: #36acaa;
}

.emotion-4 * .token.inserted {
  color: #36acaa;
}

.emotion-4 * .token.atrule {
  color: #0000ff;
}

.emotion-4 * .token.keyword {
  color: #0000ff;
}

.emotion-4 * .token.attr-value {
  color: #0000ff;
}

.emotion-4 * .token.function {
  color: #393A34;
}

.emotion-4 * .token.deleted {
  color: #9a050f;
}

.emotion-4 * .token.important {
  font-weight: bold;
}

.emotion-4 * .token.bold {
  font-weight: bold;
}

.emotion-4 * .token.italic {
  font-style: italic;
}

.emotion-4 * .token.class-name {
  color: #2B91AF;
}

.emotion-4 * .token.tag {
  color: #800000;
}

.emotion-4 * .token.selector {
  color: #800000;
}

.emotion-4 * .token.attr-name {
  color: #ff0000;
}

.emotion-4 * .token.property {
  color: #ff0000;
}

.emotion-4 * .token.regex {
  color: #ff0000;
}

.emotion-4 * .token.entity {
  color: #ff0000;
}

.emotion-4 * .token.directive.tag .tag {
  background: #ffff00;
  color: #393A34;
}

.emotion-4 * .language-json .token.boolean {
  color: #0000ff;
}

.emotion-4 * .language-json .token.number {
  color: #0000ff;
}

.emotion-4 * .language-json .token.property {
  color: #2B91AF;
}

.emotion-4 * .namespace {
  opacity: 0.7;
}

.emotion-2 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: start;
  -webkit-justify-content: flex-start;
  -ms-flex-pack: start;
  justify-content: flex-start;
  margin: 0;
  padding: 0;
}

.emotion-0 {
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
  padding-right: 0;
  opacity: 1;
}

<div
  class="emotion-6 emotion-7"
>
  <div
    class="emotion-4 emotion-5"
  >
    <pre
      class="hljs emotion-2 emotion-3"
    >
      <code>
        <span
          class="react-syntax-highlighter-line-number"
        >
          1

        </span>
        <span
          class="react-syntax-highlighter-line-number"
        >
          2

        </span>
        <span
          class="react-syntax-highlighter-line-number"
        >
          3

        </span>
        <span
          class="react-syntax-highlighter-line-number"
        >
          4

        </span>
        <span
          class="react-syntax-highlighter-line-number"
        >
          5

        </span>
      </code>
      <code
        class="emotion-0 emotion-1"
      >
        <span
          class="token keyword"
        >
          import
        </span>
         
        <span
          class="token punctuation"
        >
          {
        </span>
         Good
        <span
          class="token punctuation"
        >
          ,
        </span>
         Things 
        <span
          class="token punctuation"
        >
          }
        </span>
         
        <span
          class="token keyword"
        >
          from
        </span>
         
        <span
          class="token string"
        >
          'life'
        </span>
        <span
          class="token punctuation"
        >
          ;
        </span>
        


        <span
          class="token keyword"
        >
          const
        </span>
         
        <span
          class="token function-variable function"
        >
          result
        </span>
         
        <span
          class="token operator"
        >
          =
        </span>
         
        <span
          class="token punctuation"
        >
          (
        </span>
        <span
          class="token punctuation"
        >
          )
        </span>
         
        <span
          class="token operator"
        >
          =&gt;
        </span>
         
        <span
          class="token tag"
        >
          <span
            class="token tag"
          >
            <span
              class="token punctuation"
            >
              &lt;
            </span>
            Good
          </span>
          <span
            class="token punctuation"
          >
            &gt;
          </span>
        </span>
        <span
          class="token tag"
        >
          <span
            class="token tag"
          >
            <span
              class="token punctuation"
            >
              &lt;
            </span>
            Things
          </span>
           
          <span
            class="token punctuation"
          >
            /&gt;
          </span>
        </span>
        <span
          class="token tag"
        >
          <span
            class="token tag"
          >
            <span
              class="token punctuation"
            >
              &lt;/
            </span>
            Good
          </span>
          <span
            class="token punctuation"
          >
            &gt;
          </span>
        </span>
        <span
          class="token punctuation"
        >
          ;
        </span>
        


        <span
          class="token keyword"
        >
          export
        </span>
         
        <span
          class="token punctuation"
        >
          {
        </span>
         result 
        <span
          class="token keyword"
        >
          as
        </span>
         
        <span
          class="token keyword"
        >
          default
        </span>
         
        <span
          class="token punctuation"
        >
          }
        </span>
        <span
          class="token punctuation"
        >
          ;
        </span>
        

      </code>
    </pre>
  </div>
</div>
`;

exports[`Storyshots Components|SyntaxHighlighter story 1`] = `
.emotion-6 {
  position: relative;
  overflow: hidden;
}

.emotion-4 {
  position: relative;
  overflow: auto;
}

.emotion-4 code {
  padding-right: 10px;
  opacity: 0.7;
}

.emotion-4 * .token {
  font-family: "Operator Mono","Fira Code Retina","Fira Code","FiraCode-Retina","Andale Mono","Lucida Console",Consolas,Monaco,monospace;
  -webkit-font-smoothing: antialiased;
}

.emotion-4 * .token.comment {
  color: #008000;
  font-style: italic;
}

.emotion-4 * .token.prolog {
  color: #008000;
  font-style: italic;
}

.emotion-4 * .token.doctype {
  color: #008000;
  font-style: italic;
}

.emotion-4 * .token.cdata {
  color: #008000;
  font-style: italic;
}

.emotion-4 * .token.string {
  color: #A31515;
}

.emotion-4 * .token.punctuation {
  color: #393A34;
}

.emotion-4 * .token.operator {
  color: #393A34;
}

.emotion-4 * .token.url {
  color: #36acaa;
}

.emotion-4 * .token.symbol {
  color: #36acaa;
}

.emotion-4 * .token.number {
  color: #36acaa;
}

.emotion-4 * .token.boolean {
  color: #36acaa;
}

.emotion-4 * .token.variable {
  color: #36acaa;
}

.emotion-4 * .token.constant {
  color: #36acaa;
}

.emotion-4 * .token.inserted {
  color: #36acaa;
}

.emotion-4 * .token.atrule {
  color: #0000ff;
}

.emotion-4 * .token.keyword {
  color: #0000ff;
}

.emotion-4 * .token.attr-value {
  color: #0000ff;
}

.emotion-4 * .token.function {
  color: #393A34;
}

.emotion-4 * .token.deleted {
  color: #9a050f;
}

.emotion-4 * .token.important {
  font-weight: bold;
}

.emotion-4 * .token.bold {
  font-weight: bold;
}

.emotion-4 * .token.italic {
  font-style: italic;
}

.emotion-4 * .token.class-name {
  color: #2B91AF;
}

.emotion-4 * .token.tag {
  color: #800000;
}

.emotion-4 * .token.selector {
  color: #800000;
}

.emotion-4 * .token.attr-name {
  color: #ff0000;
}

.emotion-4 * .token.property {
  color: #ff0000;
}

.emotion-4 * .token.regex {
  color: #ff0000;
}

.emotion-4 * .token.entity {
  color: #ff0000;
}

.emotion-4 * .token.directive.tag .tag {
  background: #ffff00;
  color: #393A34;
}

.emotion-4 * .language-json .token.boolean {
  color: #0000ff;
}

.emotion-4 * .language-json .token.number {
  color: #0000ff;
}

.emotion-4 * .language-json .token.property {
  color: #2B91AF;
}

.emotion-4 * .namespace {
  opacity: 0.7;
}

.emotion-2 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: start;
  -webkit-justify-content: flex-start;
  -ms-flex-pack: start;
  justify-content: flex-start;
  margin: 0;
  padding: 0;
}

.emotion-0 {
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
  padding-right: 0;
  opacity: 1;
}

<div
  class="emotion-6 emotion-7"
>
  <div
    class="emotion-4 emotion-5"
  >
    <pre
      class="hljs emotion-2 emotion-3"
    >
      <code
        class="emotion-0 emotion-1"
      >
        <span
          class="token keyword"
        >
          import
        </span>
         React 
        <span
          class="token keyword"
        >
          from
        </span>
         
        <span
          class="token string"
        >
          'react'
        </span>
        <span
          class="token punctuation"
        >
          ;
        </span>
        

        <span
          class="token keyword"
        >
          import
        </span>
         
        <span
          class="token punctuation"
        >
          {
        </span>
         storiesOf 
        <span
          class="token punctuation"
        >
          }
        </span>
         
        <span
          class="token keyword"
        >
          from
        </span>
         
        <span
          class="token string"
        >
          '@storybook/react'
        </span>
        <span
          class="token punctuation"
        >
          ;
        </span>
        

        <span
          class="token keyword"
        >
          import
        </span>
         styled 
        <span
          class="token keyword"
        >
          from
        </span>
         
        <span
          class="token string"
        >
          '@emotion/styled'
        </span>
        <span
          class="token punctuation"
        >
          ;
        </span>
        


        <span
          class="token keyword"
        >
          import
        </span>
         Heading 
        <span
          class="token keyword"
        >
          from
        </span>
         
        <span
          class="token string"
        >
          './heading'
        </span>
        <span
          class="token punctuation"
        >
          ;
        </span>
        


        <span
          class="token keyword"
        >
          const
        </span>
         Holder 
        <span
          class="token operator"
        >
          =
        </span>
         styled
        <span
          class="token punctuation"
        >
          .
        </span>
        <span
          class="token function"
        >
          div
        </span>
        <span
          class="token punctuation"
        >
          (
        </span>
        <span
          class="token punctuation"
        >
          {
        </span>
        
  margin
        <span
          class="token punctuation"
        >
          :
        </span>
         
        <span
          class="token number"
        >
          10
        </span>
        <span
          class="token punctuation"
        >
          ,
        </span>
        
  border
        <span
          class="token punctuation"
        >
          :
        </span>
         
        <span
          class="token string"
        >
          '1px dashed deepskyblue'
        </span>
        <span
          class="token punctuation"
        >
          ,
        </span>
        
  
        <span
          class="token comment"
        >
          // overflow: 'hidden',
        </span>
        

        <span
          class="token punctuation"
        >
          }
        </span>
        <span
          class="token punctuation"
        >
          )
        </span>
        <span
          class="token punctuation"
        >
          ;
        </span>
        


        <span
          class="token function"
        >
          storiesOf
        </span>
        <span
          class="token punctuation"
        >
          (
        </span>
        <span
          class="token string"
        >
          'Components|Heading'
        </span>
        <span
          class="token punctuation"
        >
          ,
        </span>
         module
        <span
          class="token punctuation"
        >
          )
        </span>
        <span
          class="token punctuation"
        >
          .
        </span>
        <span
          class="token function"
        >
          add
        </span>
        <span
          class="token punctuation"
        >
          (
        </span>
        <span
          class="token string"
        >
          'types'
        </span>
        <span
          class="token punctuation"
        >
          ,
        </span>
         
        <span
          class="token punctuation"
        >
          (
        </span>
        <span
          class="token punctuation"
        >
          )
        </span>
         
        <span
          class="token operator"
        >
          =&gt;
        </span>
         
        <span
          class="token punctuation"
        >
          (
        </span>
        
  
        <span
          class="token tag"
        >
          <span
            class="token tag"
          >
            <span
              class="token punctuation"
            >
              &lt;
            </span>
            div
          </span>
          <span
            class="token punctuation"
          >
            &gt;
          </span>
        </span>
        <span
          class="token plain-text"
        >
          
            
        </span>
        <span
          class="token tag"
        >
          <span
            class="token tag"
          >
            <span
              class="token punctuation"
            >
              &lt;
            </span>
            Holder
          </span>
          <span
            class="token punctuation"
          >
            &gt;
          </span>
        </span>
        <span
          class="token plain-text"
        >
          
              
        </span>
        <span
          class="token tag"
        >
          <span
            class="token tag"
          >
            <span
              class="token punctuation"
            >
              &lt;
            </span>
            Heading
          </span>
          <span
            class="token punctuation"
          >
            &gt;
          </span>
        </span>
        <span
          class="token plain-text"
        >
          DEFAULT WITH ALL CAPS
        </span>
        <span
          class="token tag"
        >
          <span
            class="token tag"
          >
            <span
              class="token punctuation"
            >
              &lt;/
            </span>
            Heading
          </span>
          <span
            class="token punctuation"
          >
            &gt;
          </span>
        </span>
        <span
          class="token plain-text"
        >
          
            
        </span>
        <span
          class="token tag"
        >
          <span
            class="token tag"
          >
            <span
              class="token punctuation"
            >
              &lt;/
            </span>
            Holder
          </span>
          <span
            class="token punctuation"
          >
            &gt;
          </span>
        </span>
        <span
          class="token plain-text"
        >
          
            
        </span>
        <span
          class="token tag"
        >
          <span
            class="token tag"
          >
            <span
              class="token punctuation"
            >
              &lt;
            </span>
            Holder
          </span>
          <span
            class="token punctuation"
          >
            &gt;
          </span>
        </span>
        <span
          class="token plain-text"
        >
          
              
        </span>
        <span
          class="token tag"
        >
          <span
            class="token tag"
          >
            <span
              class="token punctuation"
            >
              &lt;
            </span>
            Heading
          </span>
           
          <span
            class="token attr-name"
          >
            sub
          </span>
          <span
            class="token attr-value"
          >
            <span
              class="token punctuation"
            >
              =
            </span>
            <span
              class="token punctuation"
            >
              "
            </span>
            With a great sub
            <span
              class="token punctuation"
            >
              "
            </span>
          </span>
          <span
            class="token punctuation"
          >
            &gt;
          </span>
        </span>
        <span
          class="token plain-text"
        >
          THIS LONG DEFAULT WITH ALL CAPS & SUB
        </span>
        <span
          class="token tag"
        >
          <span
            class="token tag"
          >
            <span
              class="token punctuation"
            >
              &lt;/
            </span>
            Heading
          </span>
          <span
            class="token punctuation"
          >
            &gt;
          </span>
        </span>
        <span
          class="token plain-text"
        >
          
            
        </span>
        <span
          class="token tag"
        >
          <span
            class="token tag"
          >
            <span
              class="token punctuation"
            >
              &lt;/
            </span>
            Holder
          </span>
          <span
            class="token punctuation"
          >
            &gt;
          </span>
        </span>
        <span
          class="token plain-text"
        >
          
            
        </span>
        <span
          class="token tag"
        >
          <span
            class="token tag"
          >
            <span
              class="token punctuation"
            >
              &lt;
            </span>
            Holder
          </span>
          <span
            class="token punctuation"
          >
            &gt;
          </span>
        </span>
        <span
          class="token plain-text"
        >
          
              
        </span>
        <span
          class="token tag"
        >
          <span
            class="token tag"
          >
            <span
              class="token punctuation"
            >
              &lt;
            </span>
            Heading
          </span>
           
          <span
            class="token attr-name"
          >
            type
          </span>
          <span
            class="token attr-value"
          >
            <span
              class="token punctuation"
            >
              =
            </span>
            <span
              class="token punctuation"
            >
              "
            </span>
            page
            <span
              class="token punctuation"
            >
              "
            </span>
          </span>
          <span
            class="token punctuation"
          >
            &gt;
          </span>
        </span>
        <span
          class="token plain-text"
        >
          page type
        </span>
        <span
          class="token tag"
        >
          <span
            class="token tag"
          >
            <span
              class="token punctuation"
            >
              &lt;/
            </span>
            Heading
          </span>
          <span
            class="token punctuation"
          >
            &gt;
          </span>
        </span>
        <span
          class="token plain-text"
        >
          
            
        </span>
        <span
          class="token tag"
        >
          <span
            class="token tag"
          >
            <span
              class="token punctuation"
            >
              &lt;/
            </span>
            Holder
          </span>
          <span
            class="token punctuation"
          >
            &gt;
          </span>
        </span>
        <span
          class="token plain-text"
        >
          
            
        </span>
        <span
          class="token tag"
        >
          <span
            class="token tag"
          >
            <span
              class="token punctuation"
            >
              &lt;
            </span>
            Holder
          </span>
          <span
            class="token punctuation"
          >
            &gt;
          </span>
        </span>
        <span
          class="token plain-text"
        >
          
              
        </span>
        <span
          class="token tag"
        >
          <span
            class="token tag"
          >
            <span
              class="token punctuation"
            >
              &lt;
            </span>
            Heading
          </span>
           
          <span
            class="token attr-name"
          >
            type
          </span>
          <span
            class="token attr-value"
          >
            <span
              class="token punctuation"
            >
              =
            </span>
            <span
              class="token punctuation"
            >
              "
            </span>
            page
            <span
              class="token punctuation"
            >
              "
            </span>
          </span>
           
          <span
            class="token attr-name"
          >
            sub
          </span>
          <span
            class="token attr-value"
          >
            <span
              class="token punctuation"
            >
              =
            </span>
            <span
              class="token punctuation"
            >
              "
            </span>
            With a sub
            <span
              class="token punctuation"
            >
              "
            </span>
          </span>
          <span
            class="token punctuation"
          >
            &gt;
          </span>
        </span>
        <span
          class="token plain-text"
        >
          
                page type
              
        </span>
        <span
          class="token tag"
        >
          <span
            class="token tag"
          >
            <span
              class="token punctuation"
            >
              &lt;/
            </span>
            Heading
          </span>
          <span
            class="token punctuation"
          >
            &gt;
          </span>
        </span>
        <span
          class="token plain-text"
        >
          
            
        </span>
        <span
          class="token tag"
        >
          <span
            class="token tag"
          >
            <span
              class="token punctuation"
            >
              &lt;/
            </span>
            Holder
          </span>
          <span
            class="token punctuation"
          >
            &gt;
          </span>
        </span>
        <span
          class="token plain-text"
        >
          
          
        </span>
        <span
          class="token tag"
        >
          <span
            class="token tag"
          >
            <span
              class="token punctuation"
            >
              &lt;/
            </span>
            div
          </span>
          <span
            class="token punctuation"
          >
            &gt;
          </span>
        </span>
        

        <span
          class="token punctuation"
        >
          )
        </span>
        <span
          class="token punctuation"
        >
          )
        </span>
        <span
          class="token punctuation"
        >
          ;
        </span>
        

      </code>
    </pre>
  </div>
</div>
`;
