import fetch from 'unfetch';

import { composeConfigs, PreviewWeb } from '@storybook/preview-web';    
import { ClientApi } from '@storybook/client-api';    
import { addons } from '@storybook/addons';
import createPostMessageChannel from '@storybook/channel-postmessage';
import createWebSocketChannel from '@storybook/channel-websocket';

import { importFn } from './{{storiesFilename}}';

const getProjectAnnotations = () =>
  composeConfigs([
    {{#each configs}}
    require('{{this}}'),
    {{/each}}
  ]);

const channel = createPostMessageChannel({ page: 'preview' });
addons.setChannel(channel);

// TODO--how to construct URL?
const serverChannel = createWebSocketChannel({
  url: `ws://${document.location.hostname}:${document.location.port}/`,
  async: false,
  onError: console.error.bind(console),
});
addons.setServerChannel(serverChannel);

const preview = new PreviewWeb();

window.__STORYBOOK_PREVIEW__ = preview;
window.__STORYBOOK_STORY_STORE__ = preview.storyStore;
window.__STORYBOOK_ADDONS_CHANNEL__ = channel;
window.__STORYBOOK_SERVER_CHANNEL__ = serverChannel;
window.__STORYBOOK_CLIENT_API__ = new ClientApi({ storyStore: preview.storyStore });

preview.initialize({ importFn, getProjectAnnotations });

if (module.hot) {
  module.hot.accept('./{{storiesFilename}}', () => {
    // importFn has changed so we need to patch the new one in
    preview.onStoriesChanged({ importFn });
  });

  module.hot.accept([{{#each configs}}'{{this}}',{{/each}}], () => {
    // getProjectAnnotations has changed so we need to patch the new one in
    preview.onGetProjectAnnotationsChanged({ getProjectAnnotations });
  });
}
