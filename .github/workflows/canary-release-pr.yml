name: Publish canary release of PR
run-name: 'Canary release: PR #${{ inputs.pr }}, triggered by ${{ github.triggering_actor }}'

on:
  workflow_dispatch:
    inputs:
      pr:
        description: 'Which pull request number to create a canary release for'
        required: true
        type: number

env:
  PLAYWRIGHT_SKIP_BROWSER_DOWNLOAD: 1
  PUPPETEER_SKIP_CHROMIUM_DOWNLOAD: 1

concurrency:
  group: ${{ github.workflow }}-${{ inputs.pr }}
  cancel-in-progress: true

permissions:
  pull-requests: write

jobs:
  release-canary:
    name: Release canary version
    runs-on: ubuntu-latest
    environment: release
    steps:
      - name: Fail if triggerer is not administrator
        uses: prince-chrismc/check-actor-permissions-action@v2.0.4
        with:
          permission: admin

      - name: Get pull request information
        id: info
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          PR_INFO=$(gh pr view ${{ inputs.pr }} --repo ${{ github.repository }} --json isCrossRepository,headRefOid,headRefName,headRepository,headRepositoryOwner --jq '{isFork: .isCrossRepository, owner: .headRepositoryOwner.login, repoName: .headRepository.name, branch: .headRefName, sha: .headRefOid}')
          echo $PR_INFO
          # Loop through each key-value pair in PR_INFO and set as step output
          for key in $(echo "$PR_INFO" | jq -r 'keys[]'); do
            value=$(echo "$PR_INFO" | jq -r ".$key")
            echo "$key=$value" >> "$GITHUB_OUTPUT"
          done
          echo "repository=$(echo "$PR_INFO" | jq -r ".owner")/$(echo "$PR_INFO" | jq -r ".repoName")" >> $GITHUB_OUTPUT
          echo "distTag=pr-${{ inputs.pr }}" >> $GITHUB_OUTPUT
          echo "shortSha=$(git rev-parse --short $(echo "$PR_INFO" | jq -r ".sha"))" >> $GITHUB_OUTPUT
          echo "date=$(date)" >> $GITHUB_OUTPUT
          echo "timestamp=$(date +%s)" >> $GITHUB_OUTPUT

      - name: Checkout
        uses: actions/checkout@v3
        with:
          repository: ${{ steps.info.outputs.isFork == 'true' && steps.info.outputs.repository || null }}
          ref: ${{ steps.info.outputs.sha }}
          token: ${{ secrets.GH_TOKEN }}

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'

      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.yarn/berry/cache
          key: yarn-v1-${{ hashFiles('scripts/yarn.lock') }}-${{ hashFiles('code/yarn.lock') }}
          restore-keys: |
            yarn-v1-${{ hashFiles('scripts/yarn.lock') }}-${{ hashFiles('code/yarn.lock') }}
            yarn-v1-${{ hashFiles('scripts/yarn.lock') }}
            yarn-v1

      - name: Install dependencies
        run: yarn task --task=install --start-from=install

      - name: Set version
        id: version
        working-directory: scripts
        run: |
          yarn release:version --release-type prerelease --pre-id ${{ steps.info.outputs.distTag }}-${{ steps.info.outputs.shortSha }}-${{ steps.info.outputs.timestamp }} --verbose

      - name: Write Summary
        id: summary
        run: |
          echo "This PR has been released at the npm dist tag \`${{ steps.info.outputs.distTag }}\`. Install it by pinning all your Storybook dependencies to that tag." >> $GITHUB_STEP_SUMMARY
          echo "<details>" >> $GITHUB_STEP_SUMMARY
          echo "<summary>More information</summary>" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "| | |" >> $GITHUB_STEP_SUMMARY
          echo "| --- | --- |" >> $GITHUB_STEP_SUMMARY
          echo "| **Triggered by** | @${{ github.triggering_actor }} |" >> $GITHUB_STEP_SUMMARY
          echo "| **Pull request** | [#${{ inputs.pr }}](https://github.com/storybookjs/storybook/pull/${{ inputs.pr }}) |" >> $GITHUB_STEP_SUMMARY
          echo "| **Repository** | [${{ steps.info.outputs.repository }}](https://github.com/${{ steps.info.outputs.repository }}) |" >> $GITHUB_STEP_SUMMARY
          echo "| **Branch** | [\`${{ steps.info.outputs.branch }}\`](https://github.com/${{ steps.info.outputs.repository }}/tree/${{ steps.info.outputs.branch }}) |" >> $GITHUB_STEP_SUMMARY
          echo "| **Commit** | [\`${{ steps.info.outputs.shortSha }}\`](https://github.com/${{ steps.info.outputs.repository }}/commit/${{ steps.info.outputs.sha }}) |" >> $GITHUB_STEP_SUMMARY
          echo "| **Date** | ${{ steps.info.outputs.date }} (\`${{ steps.info.outputs.timestamp }}\`) |" >> $GITHUB_STEP_SUMMARY
          echo "| **Workflow run** | [${{ github.run_id }}](https://github.com/storybookjs/storybook/actions/runs/${{ github.run_id }}) |" >> $GITHUB_STEP_SUMMARY
          echo "| **Published version** | [\`${{ steps.version.outputs.next-version }}\`](https://npmjs.com/package/@storybook/cli/v/${{ steps.version.outputs.next-version }}) |" >> $GITHUB_STEP_SUMMARY
          echo "| **npm dist tag** | \`@storybook/cli@${{ steps.info.outputs.distTag }}\` |" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "To request a new release of this PR ping the \`@storybookjs/core\` team." >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "_core team members can create a canary release [here](https://github.com/storybookjs/storybook/actions/workflows/canary-release-pr.yml) or locally with \`gh workflow run --repo storybookjs/storybook canary-release-pr.yml --field pr=<PR_NUMBER>\`_" >> $GITHUB_STEP_SUMMARY
          echo "</details>" >> $GITHUB_STEP_SUMMARY
          echo "summary='$(cat $GITHUB_STEP_SUMMARY)'" >> $GITHUB_OUTPUT

      - name: Replace Pull Request Body
        uses: mcky/find-and-replace-pull-request-body@v1.1.6-mcky
        with:
          githubToken: ${{ secrets.GITHUB_TOKEN }}
          prNumber: ${{ inputs.pr }}
          find: 'CANARY_RELEASE_SECTION'
          isHtmlCommentTag: true
          replace: ${{ steps.summary.outputs.summary }}

      - name: Publish v${{ steps.version.outputs.next-version }}
        env:
          YARN_NPM_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        working-directory: scripts
        run: yarn release:publish --tag ${{ steps.info.outputs.distTag }} --verbose

      - name: Create failing comment on PR
        if: failure()
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh pr comment ${{ inputs.pr }}\
            --repo "${{github.repository }}"\
            --body "Failed to publish canary version of this pull request at commit \`${{ steps.info.outputs.sha }}\`. See the failed workflow run at: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}"
