// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`storybook type system proptypes all 1`] = `
"import React from 'react';

function concat(a, b) {
  return a + b;
}

var DefaultEnum;

(function (DefaultEnum) {
  DefaultEnum[DefaultEnum[\\"TopLeft\\"] = 0] = \\"TopLeft\\";
  DefaultEnum[DefaultEnum[\\"TopRight\\"] = 1] = \\"TopRight\\";
  DefaultEnum[DefaultEnum[\\"TopCenter\\"] = 2] = \\"TopCenter\\";
})(DefaultEnum || (DefaultEnum = {}));

var NumericEnum;

(function (NumericEnum) {
  NumericEnum[NumericEnum[\\"TopLeft\\"] = 0] = \\"TopLeft\\";
  NumericEnum[NumericEnum[\\"TopRight\\"] = 1] = \\"TopRight\\";
  NumericEnum[NumericEnum[\\"TopCenter\\"] = 2] = \\"TopCenter\\";
})(NumericEnum || (NumericEnum = {}));

var StringEnum;

(function (StringEnum) {
  StringEnum[\\"TopLeft\\"] = \\"top-left\\";
  StringEnum[\\"TopRight\\"] = \\"top-right\\";
  StringEnum[\\"TopCenter\\"] = \\"top-center\\";
})(StringEnum || (StringEnum = {}));

export const Component = props => /*#__PURE__*/React.createElement(React.Fragment, null, \\"JSON.stringify(props)\\");
Component.__docgenInfo = {
  \\"description\\": \\"\\",
  \\"methods\\": [],
  \\"displayName\\": \\"Component\\",
  \\"props\\": {
    \\"onClick\\": {
      \\"required\\": false,
      \\"tsType\\": {
        \\"name\\": \\"signature\\",
        \\"type\\": \\"function\\",
        \\"raw\\": \\"() => void\\",
        \\"signature\\": {
          \\"arguments\\": [],
          \\"return\\": {
            \\"name\\": \\"void\\"
          }
        }
      },
      \\"description\\": \\"Click event handler\\\\n@default null\\"
    },
    \\"kind\\": {
      \\"required\\": false,
      \\"tsType\\": {
        \\"name\\": \\"union\\",
        \\"raw\\": \\"'default' | 'action'\\",
        \\"elements\\": [{
          \\"name\\": \\"literal\\",
          \\"value\\": \\"'default'\\"
        }, {
          \\"name\\": \\"literal\\",
          \\"value\\": \\"'action'\\"
        }]
      },
      \\"description\\": \\"Button type yo\\"
    },
    \\"arrayOfPoints\\": {
      \\"required\\": true,
      \\"tsType\\": {
        \\"name\\": \\"Array\\",
        \\"elements\\": [{
          \\"name\\": \\"Point\\"
        }],
        \\"raw\\": \\"Point[]\\"
      },
      \\"description\\": \\"\\"
    },
    \\"arrayOfInlineObjects\\": {
      \\"required\\": true,
      \\"tsType\\": {
        \\"name\\": \\"Array\\",
        \\"elements\\": [{
          \\"name\\": \\"signature\\",
          \\"type\\": \\"object\\",
          \\"raw\\": \\"{ w: number; h: number }\\",
          \\"signature\\": {
            \\"properties\\": [{
              \\"key\\": \\"w\\",
              \\"value\\": {
                \\"name\\": \\"number\\",
                \\"required\\": true
              }
            }, {
              \\"key\\": \\"h\\",
              \\"value\\": {
                \\"name\\": \\"number\\",
                \\"required\\": true
              }
            }]
          }
        }],
        \\"raw\\": \\"{ w: number; h: number }[]\\"
      },
      \\"description\\": \\"\\"
    },
    \\"any\\": {
      \\"required\\": true,
      \\"tsType\\": {
        \\"name\\": \\"any\\"
      },
      \\"description\\": \\"\\"
    },
    \\"string\\": {
      \\"required\\": true,
      \\"tsType\\": {
        \\"name\\": \\"string\\"
      },
      \\"description\\": \\"\\"
    },
    \\"bool\\": {
      \\"required\\": true,
      \\"tsType\\": {
        \\"name\\": \\"boolean\\"
      },
      \\"description\\": \\"\\"
    },
    \\"number\\": {
      \\"required\\": true,
      \\"tsType\\": {
        \\"name\\": \\"number\\"
      },
      \\"description\\": \\"\\"
    },
    \\"voidFunc\\": {
      \\"required\\": true,
      \\"tsType\\": {
        \\"name\\": \\"signature\\",
        \\"type\\": \\"function\\",
        \\"raw\\": \\"() => void\\",
        \\"signature\\": {
          \\"arguments\\": [],
          \\"return\\": {
            \\"name\\": \\"void\\"
          }
        }
      },
      \\"description\\": \\"\\"
    },
    \\"funcWithArgsAndReturns\\": {
      \\"required\\": true,
      \\"tsType\\": {
        \\"name\\": \\"signature\\",
        \\"type\\": \\"function\\",
        \\"raw\\": \\"(a: string, b: string) => string\\",
        \\"signature\\": {
          \\"arguments\\": [{
            \\"name\\": \\"a\\",
            \\"type\\": {
              \\"name\\": \\"string\\"
            }
          }, {
            \\"name\\": \\"b\\",
            \\"type\\": {
              \\"name\\": \\"string\\"
            }
          }],
          \\"return\\": {
            \\"name\\": \\"string\\"
          }
        }
      },
      \\"description\\": \\"\\"
    },
    \\"funcWithunionArg\\": {
      \\"required\\": true,
      \\"tsType\\": {
        \\"name\\": \\"signature\\",
        \\"type\\": \\"function\\",
        \\"raw\\": \\"(a: string | number) => string\\",
        \\"signature\\": {
          \\"arguments\\": [{
            \\"name\\": \\"a\\",
            \\"type\\": {
              \\"name\\": \\"union\\",
              \\"raw\\": \\"string | number\\",
              \\"elements\\": [{
                \\"name\\": \\"string\\"
              }, {
                \\"name\\": \\"number\\"
              }]
            }
          }],
          \\"return\\": {
            \\"name\\": \\"string\\"
          }
        }
      },
      \\"description\\": \\"\\"
    },
    \\"funcWithMultipleUnionReturns\\": {
      \\"required\\": true,
      \\"tsType\\": {
        \\"name\\": \\"signature\\",
        \\"type\\": \\"function\\",
        \\"raw\\": \\"() => string | ItemInterface\\",
        \\"signature\\": {
          \\"arguments\\": [],
          \\"return\\": {
            \\"name\\": \\"union\\",
            \\"raw\\": \\"string | ItemInterface\\",
            \\"elements\\": [{
              \\"name\\": \\"string\\"
            }, {
              \\"name\\": \\"ItemInterface\\"
            }]
          }
        }
      },
      \\"description\\": \\"\\"
    },
    \\"symbol\\": {
      \\"required\\": true,
      \\"tsType\\": {
        \\"name\\": \\"symbol\\"
      },
      \\"description\\": \\"\\"
    },
    \\"interface\\": {
      \\"required\\": true,
      \\"tsType\\": {
        \\"name\\": \\"ItemInterface\\"
      },
      \\"description\\": \\"\\"
    },
    \\"genericInterface\\": {
      \\"required\\": true,
      \\"tsType\\": {
        \\"name\\": \\"GenericInterface\\",
        \\"elements\\": [{
          \\"name\\": \\"string\\"
        }],
        \\"raw\\": \\"GenericInterface<string>\\"
      },
      \\"description\\": \\"\\"
    },
    \\"arrayOfPrimitive\\": {
      \\"required\\": true,
      \\"tsType\\": {
        \\"name\\": \\"Array\\",
        \\"elements\\": [{
          \\"name\\": \\"string\\"
        }],
        \\"raw\\": \\"string[]\\"
      },
      \\"description\\": \\"\\"
    },
    \\"arrayOfComplexObject\\": {
      \\"required\\": true,
      \\"tsType\\": {
        \\"name\\": \\"Array\\",
        \\"elements\\": [{
          \\"name\\": \\"ItemInterface\\"
        }],
        \\"raw\\": \\"ItemInterface[]\\"
      },
      \\"description\\": \\"\\"
    },
    \\"tupleOfPrimitive\\": {
      \\"required\\": true,
      \\"tsType\\": {
        \\"name\\": \\"tuple\\",
        \\"raw\\": \\"[string, number]\\",
        \\"elements\\": [{
          \\"name\\": \\"string\\"
        }, {
          \\"name\\": \\"number\\"
        }]
      },
      \\"description\\": \\"\\"
    },
    \\"tupleWithComplexType\\": {
      \\"required\\": true,
      \\"tsType\\": {
        \\"name\\": \\"tuple\\",
        \\"raw\\": \\"[string, ItemInterface]\\",
        \\"elements\\": [{
          \\"name\\": \\"string\\"
        }, {
          \\"name\\": \\"ItemInterface\\"
        }]
      },
      \\"description\\": \\"\\"
    },
    \\"defaultEnum\\": {
      \\"required\\": true,
      \\"tsType\\": {
        \\"name\\": \\"DefaultEnum\\"
      },
      \\"description\\": \\"\\"
    },
    \\"numericEnum\\": {
      \\"required\\": true,
      \\"tsType\\": {
        \\"name\\": \\"NumericEnum\\"
      },
      \\"description\\": \\"\\"
    },
    \\"stringEnum\\": {
      \\"required\\": true,
      \\"tsType\\": {
        \\"name\\": \\"StringEnum\\"
      },
      \\"description\\": \\"\\"
    },
    \\"enumUnion\\": {
      \\"required\\": true,
      \\"tsType\\": {
        \\"name\\": \\"union\\",
        \\"raw\\": \\"DefaultEnum | NumericEnum\\",
        \\"elements\\": [{
          \\"name\\": \\"DefaultEnum\\"
        }, {
          \\"name\\": \\"NumericEnum\\"
        }]
      },
      \\"description\\": \\"\\"
    },
    \\"recordOfPrimitive\\": {
      \\"required\\": true,
      \\"tsType\\": {
        \\"name\\": \\"Record\\",
        \\"elements\\": [{
          \\"name\\": \\"string\\"
        }, {
          \\"name\\": \\"number\\"
        }],
        \\"raw\\": \\"Record<string, number>\\"
      },
      \\"description\\": \\"\\"
    },
    \\"recordOfComplexObject\\": {
      \\"required\\": true,
      \\"tsType\\": {
        \\"name\\": \\"Record\\",
        \\"elements\\": [{
          \\"name\\": \\"string\\"
        }, {
          \\"name\\": \\"ItemInterface\\"
        }],
        \\"raw\\": \\"Record<string, ItemInterface>\\"
      },
      \\"description\\": \\"\\"
    },
    \\"intersectionType\\": {
      \\"required\\": true,
      \\"tsType\\": {
        \\"name\\": \\"intersection\\",
        \\"raw\\": \\"ItemInterface & PersonInterface\\",
        \\"elements\\": [{
          \\"name\\": \\"ItemInterface\\"
        }, {
          \\"name\\": \\"PersonInterface\\"
        }]
      },
      \\"description\\": \\"\\"
    },
    \\"intersectionWithInlineType\\": {
      \\"required\\": true,
      \\"tsType\\": {
        \\"name\\": \\"intersection\\",
        \\"raw\\": \\"ItemInterface & { inlineValue: string }\\",
        \\"elements\\": [{
          \\"name\\": \\"ItemInterface\\"
        }, {
          \\"name\\": \\"signature\\",
          \\"type\\": \\"object\\",
          \\"raw\\": \\"{ inlineValue: string }\\",
          \\"signature\\": {
            \\"properties\\": [{
              \\"key\\": \\"inlineValue\\",
              \\"value\\": {
                \\"name\\": \\"string\\",
                \\"required\\": true
              }
            }]
          }
        }]
      },
      \\"description\\": \\"\\"
    },
    \\"unionOfPrimitive\\": {
      \\"required\\": true,
      \\"tsType\\": {
        \\"name\\": \\"union\\",
        \\"raw\\": \\"string | number\\",
        \\"elements\\": [{
          \\"name\\": \\"string\\"
        }, {
          \\"name\\": \\"number\\"
        }]
      },
      \\"description\\": \\"\\"
    },
    \\"unionOfComplexType\\": {
      \\"required\\": true,
      \\"tsType\\": {
        \\"name\\": \\"union\\",
        \\"raw\\": \\"ItemInterface | InterfaceIntersection\\",
        \\"elements\\": [{
          \\"name\\": \\"ItemInterface\\"
        }, {
          \\"name\\": \\"intersection\\",
          \\"raw\\": \\"ItemInterface & PersonInterface\\",
          \\"elements\\": [{
            \\"name\\": \\"ItemInterface\\"
          }, {
            \\"name\\": \\"PersonInterface\\"
          }]
        }]
      },
      \\"description\\": \\"\\"
    },
    \\"nullablePrimitive\\": {
      \\"required\\": false,
      \\"tsType\\": {
        \\"name\\": \\"string\\"
      },
      \\"description\\": \\"\\"
    },
    \\"nullableComplexType\\": {
      \\"required\\": false,
      \\"tsType\\": {
        \\"name\\": \\"ItemInterface\\"
      },
      \\"description\\": \\"\\"
    },
    \\"nullableComplexTypeUndefinedDefaultValue\\": {
      \\"required\\": false,
      \\"tsType\\": {
        \\"name\\": \\"ItemInterface\\"
      },
      \\"description\\": \\"\\"
    },
    \\"readonlyPrimitive\\": {
      \\"required\\": true,
      \\"tsType\\": {
        \\"name\\": \\"string\\"
      },
      \\"description\\": \\"\\"
    },
    \\"typeAlias\\": {
      \\"required\\": true,
      \\"tsType\\": {
        \\"name\\": \\"string\\"
      },
      \\"description\\": \\"\\"
    },
    \\"aliasesIntersection\\": {
      \\"required\\": true,
      \\"tsType\\": {
        \\"name\\": \\"intersection\\",
        \\"raw\\": \\"StringAlias & NumberAlias\\",
        \\"elements\\": [{
          \\"name\\": \\"string\\"
        }, {
          \\"name\\": \\"number\\"
        }]
      },
      \\"description\\": \\"\\"
    },
    \\"aliasesUnion\\": {
      \\"required\\": true,
      \\"tsType\\": {
        \\"name\\": \\"union\\",
        \\"raw\\": \\"StringAlias | NumberAlias\\",
        \\"elements\\": [{
          \\"name\\": \\"string\\"
        }, {
          \\"name\\": \\"number\\"
        }]
      },
      \\"description\\": \\"\\"
    },
    \\"genericAlias\\": {
      \\"required\\": true,
      \\"tsType\\": {
        \\"name\\": \\"signature\\",
        \\"type\\": \\"object\\",
        \\"raw\\": \\"{ value: T }\\",
        \\"signature\\": {
          \\"properties\\": [{
            \\"key\\": \\"value\\",
            \\"value\\": {
              \\"name\\": \\"string\\",
              \\"required\\": true
            }
          }]
        }
      },
      \\"description\\": \\"\\"
    },
    \\"namedStringLiteralUnion\\": {
      \\"required\\": true,
      \\"tsType\\": {
        \\"name\\": \\"union\\",
        \\"raw\\": \\"'top-left' | 'top-right' | 'top-center'\\",
        \\"elements\\": [{
          \\"name\\": \\"literal\\",
          \\"value\\": \\"'top-left'\\"
        }, {
          \\"name\\": \\"literal\\",
          \\"value\\": \\"'top-right'\\"
        }, {
          \\"name\\": \\"literal\\",
          \\"value\\": \\"'top-center'\\"
        }]
      },
      \\"description\\": \\"\\"
    },
    \\"inlinedStringLiteralUnion\\": {
      \\"required\\": true,
      \\"tsType\\": {
        \\"name\\": \\"union\\",
        \\"raw\\": \\"'bottom-left' | 'bottom-right' | 'bottom-center'\\",
        \\"elements\\": [{
          \\"name\\": \\"literal\\",
          \\"value\\": \\"'bottom-left'\\"
        }, {
          \\"name\\": \\"literal\\",
          \\"value\\": \\"'bottom-right'\\"
        }, {
          \\"name\\": \\"literal\\",
          \\"value\\": \\"'bottom-center'\\"
        }]
      },
      \\"description\\": \\"\\"
    },
    \\"namedNumericLiteralUnion\\": {
      \\"required\\": true,
      \\"tsType\\": {
        \\"name\\": \\"union\\",
        \\"raw\\": \\"0 | 1 | 2\\",
        \\"elements\\": [{
          \\"name\\": \\"literal\\",
          \\"value\\": \\"0\\"
        }, {
          \\"name\\": \\"literal\\",
          \\"value\\": \\"1\\"
        }, {
          \\"name\\": \\"literal\\",
          \\"value\\": \\"2\\"
        }]
      },
      \\"description\\": \\"\\"
    },
    \\"inlinedNumericLiteralUnion\\": {
      \\"required\\": true,
      \\"tsType\\": {
        \\"name\\": \\"union\\",
        \\"raw\\": \\"0 | 1 | 2\\",
        \\"elements\\": [{
          \\"name\\": \\"literal\\",
          \\"value\\": \\"0\\"
        }, {
          \\"name\\": \\"literal\\",
          \\"value\\": \\"1\\"
        }, {
          \\"name\\": \\"literal\\",
          \\"value\\": \\"2\\"
        }]
      },
      \\"description\\": \\"\\"
    }
  }
};"
`;
