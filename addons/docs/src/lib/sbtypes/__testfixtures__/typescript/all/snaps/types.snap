// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`storybook type system proptypes all 1`] = `
Object {
  "aliasesIntersection": Object {
    "name": "intersection",
    "raw": "StringAlias & NumberAlias",
    "value": Array [
      Object {
        "name": "string",
      },
      Object {
        "name": "number",
      },
    ],
  },
  "aliasesUnion": Object {
    "name": "union",
    "raw": "StringAlias | NumberAlias",
    "value": Array [
      Object {
        "name": "string",
      },
      Object {
        "name": "number",
      },
    ],
  },
  "any": Object {
    "name": "other",
    "value": "any",
  },
  "arrayOfComplexObject": Object {
    "name": "array",
    "raw": "ItemInterface[]",
    "value": Array [
      Object {
        "name": "other",
        "value": "ItemInterface",
      },
    ],
  },
  "arrayOfInlineObjects": Object {
    "name": "array",
    "raw": "{ w: number; h: number }[]",
    "value": Array [
      Object {
        "name": "object",
        "raw": "{ w: number; h: number }",
        "value": Object {
          "h": Object {
            "name": "number",
          },
          "w": Object {
            "name": "number",
          },
        },
      },
    ],
  },
  "arrayOfPoints": Object {
    "name": "array",
    "raw": "Point[]",
    "value": Array [
      Object {
        "name": "other",
        "value": "Point",
      },
    ],
  },
  "arrayOfPrimitive": Object {
    "name": "array",
    "raw": "string[]",
    "value": Array [
      Object {
        "name": "string",
      },
    ],
  },
  "bool": Object {
    "name": "boolean",
  },
  "defaultEnum": Object {
    "name": "other",
    "value": "DefaultEnum",
  },
  "enumUnion": Object {
    "name": "union",
    "raw": "DefaultEnum | NumericEnum",
    "value": Array [
      Object {
        "name": "other",
        "value": "DefaultEnum",
      },
      Object {
        "name": "other",
        "value": "NumericEnum",
      },
    ],
  },
  "funcWithArgsAndReturns": Object {
    "name": "function",
    "raw": "(a: string, b: string) => string",
  },
  "funcWithMultipleUnionReturns": Object {
    "name": "function",
    "raw": "() => string | ItemInterface",
  },
  "funcWithunionArg": Object {
    "name": "function",
    "raw": "(a: string | number) => string",
  },
  "genericAlias": Object {
    "name": "object",
    "raw": "{ value: T }",
    "value": Object {
      "value": Object {
        "name": "string",
      },
    },
  },
  "genericInterface": Object {
    "name": "other",
    "raw": "GenericInterface<string>",
    "value": "GenericInterface",
  },
  "inlinedNumericLiteralUnion": Object {
    "name": "union",
    "raw": "0 | 1 | 2",
    "value": Array [
      Object {
        "name": "other",
        "value": "literal",
      },
      Object {
        "name": "other",
        "value": "literal",
      },
      Object {
        "name": "other",
        "value": "literal",
      },
    ],
  },
  "inlinedStringLiteralUnion": Object {
    "name": "union",
    "raw": "'bottom-left' | 'bottom-right' | 'bottom-center'",
    "value": Array [
      Object {
        "name": "other",
        "value": "literal",
      },
      Object {
        "name": "other",
        "value": "literal",
      },
      Object {
        "name": "other",
        "value": "literal",
      },
    ],
  },
  "interface": Object {
    "name": "other",
    "value": "ItemInterface",
  },
  "intersectionType": Object {
    "name": "intersection",
    "raw": "ItemInterface & PersonInterface",
    "value": Array [
      Object {
        "name": "other",
        "value": "ItemInterface",
      },
      Object {
        "name": "other",
        "value": "PersonInterface",
      },
    ],
  },
  "intersectionWithInlineType": Object {
    "name": "intersection",
    "raw": "ItemInterface & { inlineValue: string }",
    "value": Array [
      Object {
        "name": "other",
        "value": "ItemInterface",
      },
      Object {
        "name": "object",
        "raw": "{ inlineValue: string }",
        "value": Object {
          "inlineValue": Object {
            "name": "string",
          },
        },
      },
    ],
  },
  "kind": Object {
    "name": "union",
    "raw": "'default' | 'action'",
    "value": Array [
      Object {
        "name": "other",
        "value": "literal",
      },
      Object {
        "name": "other",
        "value": "literal",
      },
    ],
  },
  "namedNumericLiteralUnion": Object {
    "name": "union",
    "raw": "0 | 1 | 2",
    "value": Array [
      Object {
        "name": "other",
        "value": "literal",
      },
      Object {
        "name": "other",
        "value": "literal",
      },
      Object {
        "name": "other",
        "value": "literal",
      },
    ],
  },
  "namedStringLiteralUnion": Object {
    "name": "union",
    "raw": "'top-left' | 'top-right' | 'top-center'",
    "value": Array [
      Object {
        "name": "other",
        "value": "literal",
      },
      Object {
        "name": "other",
        "value": "literal",
      },
      Object {
        "name": "other",
        "value": "literal",
      },
    ],
  },
  "nullableComplexType": Object {
    "name": "other",
    "value": "ItemInterface",
  },
  "nullableComplexTypeUndefinedDefaultValue": Object {
    "name": "other",
    "value": "ItemInterface",
  },
  "nullablePrimitive": Object {
    "name": "string",
  },
  "number": Object {
    "name": "number",
  },
  "numericEnum": Object {
    "name": "other",
    "value": "NumericEnum",
  },
  "onClick": Object {
    "name": "function",
    "raw": "() => void",
  },
  "readonlyPrimitive": Object {
    "name": "string",
  },
  "recordOfComplexObject": Object {
    "name": "other",
    "raw": "Record<string, ItemInterface>",
    "value": "Record",
  },
  "recordOfPrimitive": Object {
    "name": "other",
    "raw": "Record<string, number>",
    "value": "Record",
  },
  "string": Object {
    "name": "string",
  },
  "stringEnum": Object {
    "name": "other",
    "value": "StringEnum",
  },
  "symbol": Object {
    "name": "symbol",
  },
  "tupleOfPrimitive": Object {
    "name": "other",
    "raw": "[string, number]",
    "value": "tuple",
  },
  "tupleWithComplexType": Object {
    "name": "other",
    "raw": "[string, ItemInterface]",
    "value": "tuple",
  },
  "typeAlias": Object {
    "name": "string",
  },
  "unionOfComplexType": Object {
    "name": "union",
    "raw": "ItemInterface | InterfaceIntersection",
    "value": Array [
      Object {
        "name": "other",
        "value": "ItemInterface",
      },
      Object {
        "name": "intersection",
        "raw": "ItemInterface & PersonInterface",
        "value": Array [
          Object {
            "name": "other",
            "value": "ItemInterface",
          },
          Object {
            "name": "other",
            "value": "PersonInterface",
          },
        ],
      },
    ],
  },
  "unionOfPrimitive": Object {
    "name": "union",
    "raw": "string | number",
    "value": Array [
      Object {
        "name": "string",
      },
      Object {
        "name": "number",
      },
    ],
  },
  "voidFunc": Object {
    "name": "function",
    "raw": "() => void",
  },
}
`;
