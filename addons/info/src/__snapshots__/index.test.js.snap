// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`addon Info should render <Info /> and external markdown 1`] = `
.emotion-12 {
  position: relative;
  overflow: hidden;
}

.emotion-4 {
  position: relative;
  overflow: auto;
}

.emotion-4 code {
  opacity: 0.7;
}

.emotion-2 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: start;
  -webkit-justify-content: flex-start;
  -ms-flex-pack: start;
  justify-content: flex-start;
  margin: 0;
  padding: 0;
}

.emotion-0 {
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
  padding-right: 0;
  opacity: 1;
}

.emotion-10 {
  position: absolute;
  bottom: 0;
  right: 0;
  max-width: 100%;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  list-style: none;
  margin: 0;
  padding: 0;
  border-radius: undefinedpx 0 0 0;
}

.emotion-8 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  position: relative;
  list-style: none;
  padding: 0;
  height: 26px;
  font-size: 11px;
  -webkit-letter-spacing: 1px;
  -moz-letter-spacing: 1px;
  -ms-letter-spacing: 1px;
  letter-spacing: 1px;
  text-transform: uppercase;
  border-left: 0 none;
}

.emotion-6 {
  border: 0 none;
  display: block;
  background: none;
  padding: 0 10px;
  cursor: pointer;
  text-transform: inherit;
  -webkit-letter-spacing: inherit;
  -moz-letter-spacing: inherit;
  -ms-letter-spacing: inherit;
  letter-spacing: inherit;
  font-size: inherit;
  color: inherit;
  border-top: 2px solid transparent;
  border-bottom: 2px solid transparent;
}

.emotion-6:focus {
  border-bottom: 2px solid undefined;
  outline: 0 none;
}

<deprecated>
  <Story
    PropTable={[Function]}
    components={
      Object {
        "a": [Function],
        "code": [Function],
        "h1": [Function],
        "h2": [Function],
        "h3": [Function],
        "h4": [Function],
        "h5": [Function],
        "h6": [Function],
        "li": [Function],
        "p": [Function],
        "ul": [Function],
      }
    }
    context={Object {}}
    excludedPropTypes={Array []}
    info="<h1>HTML Mock</h1>"
    maxPropArrayLength={3}
    maxPropObjectKeys={3}
    maxPropStringLength={50}
    maxPropsIntoLine={3}
    propTables={Array []}
    propTablesExclude={Array []}
    showHeader={true}
    showInline={false}
    showSource={true}
    styles={[Function]}
  >
    <div>
      <div
        style={
          Object {
            "position": "relative",
            "zIndex": 0,
          }
        }
      >
        <div>
          It's a 
           story:
          <TestComponent
            array={
              Array [
                1,
                2,
                3,
              ]
            }
            bool={true}
            func={[Function]}
            number={7}
            obj={
              Object {
                "a": "a",
                "b": "b",
              }
            }
            string="seven"
          >
            <div>
              <h1>
                function func(x) {
        return x + 1;
      }
              </h1>
              <h2>
                [object Object]
              </h2>
              <h3>
                1,2,3
              </h3>
              <h4>
                7
              </h4>
              <h5>
                seven
              </h5>
              <h6>
                true
              </h6>
              <p>
                undefined
              </p>
              <a
                href="#"
              >
                test
              </a>
              <code>
                storiesOf
              </code>
              <ul>
                <li>
                  1
                </li>
                <li>
                  2
                </li>
              </ul>
            </div>
          </TestComponent>
        </div>
      </div>
      <button
        className="info__show-button"
        onClick={[Function]}
        style={
          Object {
            "background": "#28c",
            "border": "none",
            "borderRadius": "0 0 0 5px",
            "color": "#fff",
            "cursor": "pointer",
            "display": "block",
            "fontFamily": "sans-serif",
            "fontSize": "12px",
            "padding": "5px 15px",
            "position": "fixed",
            "right": 0,
            "top": 0,
          }
        }
        type="button"
      >
        Show Info
      </button>
      <div
        className="info__overlay"
        style={
          Object {
            "background": "white",
            "bottom": 0,
            "display": "none",
            "left": 0,
            "overflow": "auto",
            "padding": "0 40px",
            "position": "fixed",
            "right": 0,
            "top": 0,
            "zIndex": 99999,
          }
        }
      >
        <button
          className="info__close-button"
          onClick={[Function]}
          style={
            Object {
              "background": "#28c",
              "border": "none",
              "borderRadius": "0 0 0 5px",
              "color": "#fff",
              "cursor": "pointer",
              "display": "block",
              "fontFamily": "sans-serif",
              "fontSize": "12px",
              "padding": "5px 15px",
              "position": "fixed",
              "right": 0,
              "top": 0,
            }
          }
          type="button"
        >
          Ã—
        </button>
        <div>
          <div
            style={
              Object {
                "WebkitFontSmoothing": "antialiased",
                "backgroundColor": "#fff",
                "border": "1px solid #eee",
                "borderRadius": "2px",
                "color": "#444",
                "fontFamily": "-apple-system, \\".SFNSText-Regular\\", \\"San Francisco\\", BlinkMacSystemFont, \\"Segoe UI\\", \\"Roboto\\", \\"Oxygen\\", \\"Ubuntu\\", \\"Cantarell\\", \\"Fira Sans\\", \\"Droid Sans\\", \\"Helvetica Neue\\", \\"Lucida Grande\\", \\"Arial\\", sans-serif",
                "fontSize": "15px",
                "fontWeight": 300,
                "lineHeight": 1.45,
                "marginBottom": "20px",
                "marginTop": "20px",
                "padding": "20px 40px 40px",
              }
            }
          >
            <div
              style={
                Object {
                  "borderBottom": "1px solid #eee",
                  "marginBottom": 10,
                  "paddingTop": 10,
                }
              }
            >
              <h1
                style={
                  Object {
                    "fontSize": "35px",
                    "margin": 0,
                    "padding": 0,
                  }
                }
              />
              <h2
                style={
                  Object {
                    "fontSize": "22px",
                    "fontWeight": 400,
                    "margin": "0 0 10px 0",
                    "padding": 0,
                  }
                }
              />
            </div>
            <div
              style={
                Object {
                  "marginBottom": 0,
                }
              }
            >
              <div
                dangerouslySetInnerHTML={
                  Object {
                    "__html": "<h1>HTML Mock</h1>",
                  }
                }
                key="0"
              />
            </div>
            <div>
              <h1
                style={
                  Object {
                    "borderBottom": "1px solid #EEE",
                    "fontSize": "25px",
                    "margin": "20px 0 0 0",
                    "padding": "0 0 5px 0",
                  }
                }
              >
                Story Source
              </h1>
              <Copyable
                language="jsx"
              >
                <Wrapper>
                  <div
                    className="emotion-12 emotion-13"
                  >
                    <Scroller>
                      <div
                        className="emotion-4 emotion-5"
                      >
                        <SyntaxHighlighter
                          CodeTag={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "__emotion_base": "code",
                              "__emotion_forwardProp": undefined,
                              "__emotion_real": [Circular],
                              "__emotion_styles": Array [
                                "label:Code;",
                                Object {
                                  "map": "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9zeW50YXhoaWdobGlnaHRlci9zeW50YXhoaWdobGlnaHRlci5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUEyRGEiLCJmaWxlIjoiLi4vLi4vc3JjL3N5bnRheGhpZ2hsaWdodGVyL3N5bnRheGhpZ2hsaWdodGVyLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0LCB7IFB1cmVDb21wb25lbnQgfSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgc3R5bGVkIGZyb20gJ0BlbW90aW9uL3N0eWxlZCc7XG5pbXBvcnQgeyBkb2N1bWVudCwgd2luZG93IH0gZnJvbSAnZ2xvYmFsJztcbmltcG9ydCBtZW1vaXplIGZyb20gJ21lbW9pemVyaWZpYyc7XG5cbmltcG9ydCBqc3ggZnJvbSAncmVhY3Qtc3ludGF4LWhpZ2hsaWdodGVyL2xhbmd1YWdlcy9wcmlzbS9qc3gnO1xuaW1wb3J0IGJhc2ggZnJvbSAncmVhY3Qtc3ludGF4LWhpZ2hsaWdodGVyL2xhbmd1YWdlcy9wcmlzbS9iYXNoJztcbmltcG9ydCBjc3MgZnJvbSAncmVhY3Qtc3ludGF4LWhpZ2hsaWdodGVyL2xhbmd1YWdlcy9wcmlzbS9jc3MnO1xuaW1wb3J0IGh0bWwgZnJvbSAncmVhY3Qtc3ludGF4LWhpZ2hsaWdodGVyL2xhbmd1YWdlcy9wcmlzbS9tYXJrdXAnO1xuXG5pbXBvcnQgU3ludGF4SGlnaGxpZ2h0ZXIsIHsgcmVnaXN0ZXJMYW5ndWFnZSB9IGZyb20gJ3JlYWN0LXN5bnRheC1oaWdobGlnaHRlci9wcmlzbS1saWdodCc7XG5pbXBvcnQgeyBqcyBhcyBiZWF1dGlmeSB9IGZyb20gJ2pzLWJlYXV0aWZ5JztcbmltcG9ydCB7IEFjdGlvbkJhciwgQWN0aW9uQnV0dG9uIH0gZnJvbSAnLi4vcGFuZWxfYWN0aW9uYmFyL3BhbmVsX2FjdGlvbmJhcic7XG5cbnJlZ2lzdGVyTGFuZ3VhZ2UoJ2pzeCcsIGpzeCk7XG5yZWdpc3Rlckxhbmd1YWdlKCdiYXNoJywgYmFzaCk7XG5yZWdpc3Rlckxhbmd1YWdlKCdjc3MnLCBjc3MpO1xucmVnaXN0ZXJMYW5ndWFnZSgnaHRtbCcsIGh0bWwpO1xuXG5jb25zdCB0aGVtZWRTeW50YXggPSBtZW1vaXplKDIpKHRoZW1lID0+XG4gIE9iamVjdC5lbnRyaWVzKHRoZW1lLmNvZGUgfHwge30pLnJlZHVjZSgoYWNjLCBba2V5LCB2YWxdKSA9PiAoeyAuLi5hY2MsIFtgKiAuJHtrZXl9YF06IHZhbCB9KSwge30pXG4pO1xuXG5jb25zdCBXcmFwcGVyID0gc3R5bGVkLmRpdihcbiAge1xuICAgIHBvc2l0aW9uOiAncmVsYXRpdmUnLFxuICAgIG92ZXJmbG93OiAnaGlkZGVuJyxcbiAgfSxcbiAgKHsgdGhlbWUsIGJvcmRlcmVkIH0pID0+XG4gICAgYm9yZGVyZWRcbiAgICAgID8ge1xuICAgICAgICAgIGJvcmRlcjogdGhlbWUubWFpbkJvcmRlcixcbiAgICAgICAgICBib3JkZXJSYWRpdXM6IHRoZW1lLm1haW5Cb3JkZXJSYWRpdXMsXG4gICAgICAgICAgYmFja2dyb3VuZDogdGhlbWUuYmFyRmlsbCxcbiAgICAgICAgfVxuICAgICAgOiB7fVxuKTtcblxuY29uc3QgU2Nyb2xsZXIgPSBzdHlsZWQuZGl2KFxuICB7XG4gICAgcG9zaXRpb246ICdyZWxhdGl2ZScsXG4gICAgb3ZlcmZsb3c6ICdhdXRvJyxcbiAgfSxcbiAgKHsgdGhlbWUgfSkgPT4gKHtcbiAgICAnJiBjb2RlJzoge1xuICAgICAgcGFkZGluZ1JpZ2h0OiB0aGVtZS5sYXlvdXRNYXJnaW4sXG4gICAgICBvcGFjaXR5OiAwLjcsXG4gICAgfSxcbiAgfSksXG4gICh7IHRoZW1lIH0pID0+IHRoZW1lZFN5bnRheCh0aGVtZSlcbik7XG5cbmNvbnN0IFByZSA9IHN0eWxlZC5wcmUoKHsgdGhlbWUsIHBhZGRlZCB9KSA9PiAoe1xuICBkaXNwbGF5OiAnZmxleCcsXG4gIGp1c3RpZnlDb250ZW50OiAnZmxleC1zdGFydCcsXG4gIG1hcmdpbjogMCxcbiAgcGFkZGluZzogcGFkZGVkID8gdGhlbWUubGF5b3V0TWFyZ2luIDogMCxcbn0pKTtcblxuY29uc3QgQ29kZSA9IHN0eWxlZC5jb2RlKHtcbiAgZmxleDogMSxcbiAgcGFkZGluZ1JpZ2h0OiAwLFxuICBvcGFjaXR5OiAxLFxufSk7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIENvcHlhYmxlIGV4dGVuZHMgUHVyZUNvbXBvbmVudCB7XG4gIHN0YXRlID0geyBjb3BpZWQ6IGZhbHNlIH07XG5cbiAgZm9ybWF0Q29kZSA9IG1lbW9pemUoMikoKGxhbmd1YWdlLCBjb2RlKSA9PiB7XG4gICAgbGV0IGZvcm1hdHRlZENvZGUgPSBjb2RlO1xuICAgIGlmIChsYW5ndWFnZSA9PT0gJ2pzeCcpIHtcbiAgICAgIHRyeSB7XG4gICAgICAgIGZvcm1hdHRlZENvZGUgPSBiZWF1dGlmeShjb2RlLCB7XG4gICAgICAgICAgaW5kZW50X3NpemU6IDIsXG4gICAgICAgICAgYnJhY2Vfc3R5bGU6ICdjb2xsYXBzZSxwcmVzZXJ2ZS1pbmxpbmUnLFxuICAgICAgICAgIGVuZF93aXRoX25ld2xpbmU6IHRydWUsXG4gICAgICAgICAgd3JhcF9saW5lX2xlbmd0aDogODAsXG4gICAgICAgICAgZTR4OiB0cnVlLFxuICAgICAgICB9KTtcbiAgICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICAgIGNvbnNvbGUud2FybihcIkNvdWxkbid0IGZvcm1hdCBjb2RlXCIsIGZvcm1hdHRlZENvZGUpOyAvLyBlc2xpbnQtZGlzYWJsZS1saW5lIG5vLWNvbnNvbGVcbiAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIGZvcm1hdHRlZENvZGU7XG4gIH0pO1xuXG4gIG9uQ2xpY2sgPSBlID0+IHtcbiAgICBjb25zdCB7IGNoaWxkcmVuIH0gPSB0aGlzLnByb3BzO1xuXG4gICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xuICAgIGNvbnN0IHRtcCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ1RFWFRBUkVBJyk7XG4gICAgY29uc3QgZm9jdXMgPSBkb2N1bWVudC5hY3RpdmVFbGVtZW50O1xuXG4gICAgdG1wLnZhbHVlID0gY2hpbGRyZW47XG5cbiAgICBkb2N1bWVudC5ib2R5LmFwcGVuZENoaWxkKHRtcCk7XG4gICAgdG1wLnNlbGVjdCgpO1xuICAgIGRvY3VtZW50LmV4ZWNDb21tYW5kKCdjb3B5Jyk7XG4gICAgZG9jdW1lbnQuYm9keS5yZW1vdmVDaGlsZCh0bXApO1xuICAgIGZvY3VzLmZvY3VzKCk7XG5cbiAgICB0aGlzLnNldFN0YXRlKHsgY29waWVkOiB0cnVlIH0sICgpID0+IHtcbiAgICAgIHdpbmRvdy5zZXRUaW1lb3V0KCgpID0+IHRoaXMuc2V0U3RhdGUoeyBjb3BpZWQ6IGZhbHNlIH0pLCAxNTAwKTtcbiAgICB9KTtcbiAgfTtcblxuICByZW5kZXIoKSB7XG4gICAgY29uc3QgeyBjaGlsZHJlbiwgbGFuZ3VhZ2UgPSAnanN4JywgY29weWFibGUgPSB0cnVlLCBib3JkZXJlZCwgcGFkZGVkLCAuLi5yZXN0IH0gPSB0aGlzLnByb3BzO1xuICAgIGNvbnN0IHsgY29waWVkIH0gPSB0aGlzLnN0YXRlO1xuXG4gICAgcmV0dXJuIGNoaWxkcmVuID8gKFxuICAgICAgPFdyYXBwZXIgYm9yZGVyZWQ9e2JvcmRlcmVkfSBwYWRkZWQ9e3BhZGRlZH0+XG4gICAgICAgIDxTY3JvbGxlcj5cbiAgICAgICAgICA8U3ludGF4SGlnaGxpZ2h0ZXJcbiAgICAgICAgICAgIHBhZGRlZD17cGFkZGVkIHx8IGJvcmRlcmVkfVxuICAgICAgICAgICAgbGFuZ3VhZ2U9e2xhbmd1YWdlfVxuICAgICAgICAgICAgdXNlSW5saW5lU3R5bGVzPXtmYWxzZX1cbiAgICAgICAgICAgIFByZVRhZz17UHJlfVxuICAgICAgICAgICAgQ29kZVRhZz17Q29kZX1cbiAgICAgICAgICAgIGxpbmVOdW1iZXJDb250YWluZXJTdHlsZT17e319XG4gICAgICAgICAgICB7Li4ucmVzdH1cbiAgICAgICAgICA+XG4gICAgICAgICAgICB7dGhpcy5mb3JtYXRDb2RlKGxhbmd1YWdlLCBjaGlsZHJlbi50cmltKCkpfVxuICAgICAgICAgIDwvU3ludGF4SGlnaGxpZ2h0ZXI+XG4gICAgICAgIDwvU2Nyb2xsZXI+XG4gICAgICAgIHtjb3B5YWJsZSA/IChcbiAgICAgICAgICA8QWN0aW9uQmFyPlxuICAgICAgICAgICAgPEFjdGlvbkJ1dHRvbiBvbkNsaWNrPXt0aGlzLm9uQ2xpY2t9Pntjb3BpZWQgPyAnY29waWVkJyA6ICdjb3B5J308L0FjdGlvbkJ1dHRvbj5cbiAgICAgICAgICA8L0FjdGlvbkJhcj5cbiAgICAgICAgKSA6IG51bGx9XG4gICAgICA8L1dyYXBwZXI+XG4gICAgKSA6IG51bGw7XG4gIH1cbn1cbiJdfQ== */",
                                  "name": "1maezg8",
                                  "styles": "flex:1;padding-right:0;opacity:1;",
                                },
                              ],
                              "defaultProps": undefined,
                              "displayName": "Code",
                              "render": [Function],
                              "withComponent": [Function],
                            }
                          }
                          PreTag={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "__emotion_base": "pre",
                              "__emotion_forwardProp": undefined,
                              "__emotion_real": [Circular],
                              "__emotion_styles": Array [
                                "label:Pre;",
                                [Function],
                                "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9zeW50YXhoaWdobGlnaHRlci9zeW50YXhoaWdobGlnaHRlci5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFvRFkiLCJmaWxlIjoiLi4vLi4vc3JjL3N5bnRheGhpZ2hsaWdodGVyL3N5bnRheGhpZ2hsaWdodGVyLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0LCB7IFB1cmVDb21wb25lbnQgfSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgc3R5bGVkIGZyb20gJ0BlbW90aW9uL3N0eWxlZCc7XG5pbXBvcnQgeyBkb2N1bWVudCwgd2luZG93IH0gZnJvbSAnZ2xvYmFsJztcbmltcG9ydCBtZW1vaXplIGZyb20gJ21lbW9pemVyaWZpYyc7XG5cbmltcG9ydCBqc3ggZnJvbSAncmVhY3Qtc3ludGF4LWhpZ2hsaWdodGVyL2xhbmd1YWdlcy9wcmlzbS9qc3gnO1xuaW1wb3J0IGJhc2ggZnJvbSAncmVhY3Qtc3ludGF4LWhpZ2hsaWdodGVyL2xhbmd1YWdlcy9wcmlzbS9iYXNoJztcbmltcG9ydCBjc3MgZnJvbSAncmVhY3Qtc3ludGF4LWhpZ2hsaWdodGVyL2xhbmd1YWdlcy9wcmlzbS9jc3MnO1xuaW1wb3J0IGh0bWwgZnJvbSAncmVhY3Qtc3ludGF4LWhpZ2hsaWdodGVyL2xhbmd1YWdlcy9wcmlzbS9tYXJrdXAnO1xuXG5pbXBvcnQgU3ludGF4SGlnaGxpZ2h0ZXIsIHsgcmVnaXN0ZXJMYW5ndWFnZSB9IGZyb20gJ3JlYWN0LXN5bnRheC1oaWdobGlnaHRlci9wcmlzbS1saWdodCc7XG5pbXBvcnQgeyBqcyBhcyBiZWF1dGlmeSB9IGZyb20gJ2pzLWJlYXV0aWZ5JztcbmltcG9ydCB7IEFjdGlvbkJhciwgQWN0aW9uQnV0dG9uIH0gZnJvbSAnLi4vcGFuZWxfYWN0aW9uYmFyL3BhbmVsX2FjdGlvbmJhcic7XG5cbnJlZ2lzdGVyTGFuZ3VhZ2UoJ2pzeCcsIGpzeCk7XG5yZWdpc3Rlckxhbmd1YWdlKCdiYXNoJywgYmFzaCk7XG5yZWdpc3Rlckxhbmd1YWdlKCdjc3MnLCBjc3MpO1xucmVnaXN0ZXJMYW5ndWFnZSgnaHRtbCcsIGh0bWwpO1xuXG5jb25zdCB0aGVtZWRTeW50YXggPSBtZW1vaXplKDIpKHRoZW1lID0+XG4gIE9iamVjdC5lbnRyaWVzKHRoZW1lLmNvZGUgfHwge30pLnJlZHVjZSgoYWNjLCBba2V5LCB2YWxdKSA9PiAoeyAuLi5hY2MsIFtgKiAuJHtrZXl9YF06IHZhbCB9KSwge30pXG4pO1xuXG5jb25zdCBXcmFwcGVyID0gc3R5bGVkLmRpdihcbiAge1xuICAgIHBvc2l0aW9uOiAncmVsYXRpdmUnLFxuICAgIG92ZXJmbG93OiAnaGlkZGVuJyxcbiAgfSxcbiAgKHsgdGhlbWUsIGJvcmRlcmVkIH0pID0+XG4gICAgYm9yZGVyZWRcbiAgICAgID8ge1xuICAgICAgICAgIGJvcmRlcjogdGhlbWUubWFpbkJvcmRlcixcbiAgICAgICAgICBib3JkZXJSYWRpdXM6IHRoZW1lLm1haW5Cb3JkZXJSYWRpdXMsXG4gICAgICAgICAgYmFja2dyb3VuZDogdGhlbWUuYmFyRmlsbCxcbiAgICAgICAgfVxuICAgICAgOiB7fVxuKTtcblxuY29uc3QgU2Nyb2xsZXIgPSBzdHlsZWQuZGl2KFxuICB7XG4gICAgcG9zaXRpb246ICdyZWxhdGl2ZScsXG4gICAgb3ZlcmZsb3c6ICdhdXRvJyxcbiAgfSxcbiAgKHsgdGhlbWUgfSkgPT4gKHtcbiAgICAnJiBjb2RlJzoge1xuICAgICAgcGFkZGluZ1JpZ2h0OiB0aGVtZS5sYXlvdXRNYXJnaW4sXG4gICAgICBvcGFjaXR5OiAwLjcsXG4gICAgfSxcbiAgfSksXG4gICh7IHRoZW1lIH0pID0+IHRoZW1lZFN5bnRheCh0aGVtZSlcbik7XG5cbmNvbnN0IFByZSA9IHN0eWxlZC5wcmUoKHsgdGhlbWUsIHBhZGRlZCB9KSA9PiAoe1xuICBkaXNwbGF5OiAnZmxleCcsXG4gIGp1c3RpZnlDb250ZW50OiAnZmxleC1zdGFydCcsXG4gIG1hcmdpbjogMCxcbiAgcGFkZGluZzogcGFkZGVkID8gdGhlbWUubGF5b3V0TWFyZ2luIDogMCxcbn0pKTtcblxuY29uc3QgQ29kZSA9IHN0eWxlZC5jb2RlKHtcbiAgZmxleDogMSxcbiAgcGFkZGluZ1JpZ2h0OiAwLFxuICBvcGFjaXR5OiAxLFxufSk7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIENvcHlhYmxlIGV4dGVuZHMgUHVyZUNvbXBvbmVudCB7XG4gIHN0YXRlID0geyBjb3BpZWQ6IGZhbHNlIH07XG5cbiAgZm9ybWF0Q29kZSA9IG1lbW9pemUoMikoKGxhbmd1YWdlLCBjb2RlKSA9PiB7XG4gICAgbGV0IGZvcm1hdHRlZENvZGUgPSBjb2RlO1xuICAgIGlmIChsYW5ndWFnZSA9PT0gJ2pzeCcpIHtcbiAgICAgIHRyeSB7XG4gICAgICAgIGZvcm1hdHRlZENvZGUgPSBiZWF1dGlmeShjb2RlLCB7XG4gICAgICAgICAgaW5kZW50X3NpemU6IDIsXG4gICAgICAgICAgYnJhY2Vfc3R5bGU6ICdjb2xsYXBzZSxwcmVzZXJ2ZS1pbmxpbmUnLFxuICAgICAgICAgIGVuZF93aXRoX25ld2xpbmU6IHRydWUsXG4gICAgICAgICAgd3JhcF9saW5lX2xlbmd0aDogODAsXG4gICAgICAgICAgZTR4OiB0cnVlLFxuICAgICAgICB9KTtcbiAgICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICAgIGNvbnNvbGUud2FybihcIkNvdWxkbid0IGZvcm1hdCBjb2RlXCIsIGZvcm1hdHRlZENvZGUpOyAvLyBlc2xpbnQtZGlzYWJsZS1saW5lIG5vLWNvbnNvbGVcbiAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIGZvcm1hdHRlZENvZGU7XG4gIH0pO1xuXG4gIG9uQ2xpY2sgPSBlID0+IHtcbiAgICBjb25zdCB7IGNoaWxkcmVuIH0gPSB0aGlzLnByb3BzO1xuXG4gICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xuICAgIGNvbnN0IHRtcCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ1RFWFRBUkVBJyk7XG4gICAgY29uc3QgZm9jdXMgPSBkb2N1bWVudC5hY3RpdmVFbGVtZW50O1xuXG4gICAgdG1wLnZhbHVlID0gY2hpbGRyZW47XG5cbiAgICBkb2N1bWVudC5ib2R5LmFwcGVuZENoaWxkKHRtcCk7XG4gICAgdG1wLnNlbGVjdCgpO1xuICAgIGRvY3VtZW50LmV4ZWNDb21tYW5kKCdjb3B5Jyk7XG4gICAgZG9jdW1lbnQuYm9keS5yZW1vdmVDaGlsZCh0bXApO1xuICAgIGZvY3VzLmZvY3VzKCk7XG5cbiAgICB0aGlzLnNldFN0YXRlKHsgY29waWVkOiB0cnVlIH0sICgpID0+IHtcbiAgICAgIHdpbmRvdy5zZXRUaW1lb3V0KCgpID0+IHRoaXMuc2V0U3RhdGUoeyBjb3BpZWQ6IGZhbHNlIH0pLCAxNTAwKTtcbiAgICB9KTtcbiAgfTtcblxuICByZW5kZXIoKSB7XG4gICAgY29uc3QgeyBjaGlsZHJlbiwgbGFuZ3VhZ2UgPSAnanN4JywgY29weWFibGUgPSB0cnVlLCBib3JkZXJlZCwgcGFkZGVkLCAuLi5yZXN0IH0gPSB0aGlzLnByb3BzO1xuICAgIGNvbnN0IHsgY29waWVkIH0gPSB0aGlzLnN0YXRlO1xuXG4gICAgcmV0dXJuIGNoaWxkcmVuID8gKFxuICAgICAgPFdyYXBwZXIgYm9yZGVyZWQ9e2JvcmRlcmVkfSBwYWRkZWQ9e3BhZGRlZH0+XG4gICAgICAgIDxTY3JvbGxlcj5cbiAgICAgICAgICA8U3ludGF4SGlnaGxpZ2h0ZXJcbiAgICAgICAgICAgIHBhZGRlZD17cGFkZGVkIHx8IGJvcmRlcmVkfVxuICAgICAgICAgICAgbGFuZ3VhZ2U9e2xhbmd1YWdlfVxuICAgICAgICAgICAgdXNlSW5saW5lU3R5bGVzPXtmYWxzZX1cbiAgICAgICAgICAgIFByZVRhZz17UHJlfVxuICAgICAgICAgICAgQ29kZVRhZz17Q29kZX1cbiAgICAgICAgICAgIGxpbmVOdW1iZXJDb250YWluZXJTdHlsZT17e319XG4gICAgICAgICAgICB7Li4ucmVzdH1cbiAgICAgICAgICA+XG4gICAgICAgICAgICB7dGhpcy5mb3JtYXRDb2RlKGxhbmd1YWdlLCBjaGlsZHJlbi50cmltKCkpfVxuICAgICAgICAgIDwvU3ludGF4SGlnaGxpZ2h0ZXI+XG4gICAgICAgIDwvU2Nyb2xsZXI+XG4gICAgICAgIHtjb3B5YWJsZSA/IChcbiAgICAgICAgICA8QWN0aW9uQmFyPlxuICAgICAgICAgICAgPEFjdGlvbkJ1dHRvbiBvbkNsaWNrPXt0aGlzLm9uQ2xpY2t9Pntjb3BpZWQgPyAnY29waWVkJyA6ICdjb3B5J308L0FjdGlvbkJ1dHRvbj5cbiAgICAgICAgICA8L0FjdGlvbkJhcj5cbiAgICAgICAgKSA6IG51bGx9XG4gICAgICA8L1dyYXBwZXI+XG4gICAgKSA6IG51bGw7XG4gIH1cbn1cbiJdfQ== */",
                              ],
                              "defaultProps": undefined,
                              "displayName": "Pre",
                              "render": [Function],
                              "withComponent": [Function],
                            }
                          }
                          language="jsx"
                          lineNumberContainerStyle={Object {}}
                          useInlineStyles={false}
                        >
                          <Pre
                            className="hljs"
                          >
                            <pre
                              className="hljs emotion-2 emotion-3"
                            >
                              <Code>
                                <code
                                  className="emotion-0 emotion-1"
                                >
                                  <span
                                    className="token tag"
                                    key="code-segement0"
                                  >
                                    <span
                                      className="token tag"
                                      key="code-segment-1-0"
                                    >
                                      <span
                                        className="token punctuation"
                                        key="code-segment-1-0"
                                      >
                                        &lt;
                                      </span>
                                      div
                                    </span>
                                    <span
                                      className="token punctuation"
                                      key="code-segment-1-1"
                                    >
                                      &gt;
                                    </span>
                                  </span>
                                  <span
                                    className="token plain-text"
                                    key="code-segement1"
                                  >
                                    
  It's a  story:
  
                                  </span>
                                  <span
                                    className="token tag"
                                    key="code-segement2"
                                  >
                                    <span
                                      className="token tag"
                                      key="code-segment-1-0"
                                    >
                                      <span
                                        className="token punctuation"
                                        key="code-segment-1-0"
                                      >
                                        &lt;
                                      </span>
                                      TestComponent
                                    </span>
                                    
    
                                    <span
                                      className="token attr-name"
                                      key="code-segment-1-2"
                                    >
                                      func
                                    </span>
                                    <span
                                      className="token script language-javascript"
                                      key="code-segment-1-3"
                                    >
                                      <span
                                        className="token script-punctuation punctuation"
                                        key="code-segment-1-0"
                                      >
                                        =
                                      </span>
                                      <span
                                        className="token punctuation"
                                        key="code-segment-1-1"
                                      >
                                        {
                                      </span>
                                      <span
                                        className="token keyword"
                                        key="code-segment-1-2"
                                      >
                                        function
                                      </span>
                                       
                                      <span
                                        className="token function"
                                        key="code-segment-1-4"
                                      >
                                        noRefCheck
                                      </span>
                                      <span
                                        className="token punctuation"
                                        key="code-segment-1-5"
                                      >
                                        (
                                      </span>
                                      <span
                                        className="token punctuation"
                                        key="code-segment-1-6"
                                      >
                                        )
                                      </span>
                                       
                                      <span
                                        className="token punctuation"
                                        key="code-segment-1-8"
                                      >
                                        {
                                      </span>
                                      <span
                                        className="token punctuation"
                                        key="code-segment-1-9"
                                      >
                                        }
                                      </span>
                                      <span
                                        className="token punctuation"
                                        key="code-segment-1-10"
                                      >
                                        }
                                      </span>
                                    </span>
                                    
    
                                    <span
                                      className="token attr-name"
                                      key="code-segment-1-5"
                                    >
                                      obj
                                    </span>
                                    <span
                                      className="token script language-javascript"
                                      key="code-segment-1-6"
                                    >
                                      <span
                                        className="token script-punctuation punctuation"
                                        key="code-segment-1-0"
                                      >
                                        =
                                      </span>
                                      <span
                                        className="token punctuation"
                                        key="code-segment-1-1"
                                      >
                                        {
                                      </span>
                                      <span
                                        className="token punctuation"
                                        key="code-segment-1-2"
                                      >
                                        {
                                      </span>
                                      
      a
                                      <span
                                        className="token punctuation"
                                        key="code-segment-1-4"
                                      >
                                        :
                                      </span>
                                       
                                      <span
                                        className="token string"
                                        key="code-segment-1-6"
                                      >
                                        'a'
                                      </span>
                                      <span
                                        className="token punctuation"
                                        key="code-segment-1-7"
                                      >
                                        ,
                                      </span>
                                      
      b
                                      <span
                                        className="token punctuation"
                                        key="code-segment-1-9"
                                      >
                                        :
                                      </span>
                                       
                                      <span
                                        className="token string"
                                        key="code-segment-1-11"
                                      >
                                        'b'
                                      </span>
                                      
    
                                      <span
                                        className="token punctuation"
                                        key="code-segment-1-13"
                                      >
                                        }
                                      </span>
                                      <span
                                        className="token punctuation"
                                        key="code-segment-1-14"
                                      >
                                        }
                                      </span>
                                    </span>
                                    
    
                                    <span
                                      className="token attr-name"
                                      key="code-segment-1-8"
                                    >
                                      array
                                    </span>
                                    <span
                                      className="token script language-javascript"
                                      key="code-segment-1-9"
                                    >
                                      <span
                                        className="token script-punctuation punctuation"
                                        key="code-segment-1-0"
                                      >
                                        =
                                      </span>
                                      <span
                                        className="token punctuation"
                                        key="code-segment-1-1"
                                      >
                                        {
                                      </span>
                                      <span
                                        className="token punctuation"
                                        key="code-segment-1-2"
                                      >
                                        [
                                      </span>
                                      
      
                                      <span
                                        className="token number"
                                        key="code-segment-1-4"
                                      >
                                        1
                                      </span>
                                      <span
                                        className="token punctuation"
                                        key="code-segment-1-5"
                                      >
                                        ,
                                      </span>
                                      
      
                                      <span
                                        className="token number"
                                        key="code-segment-1-7"
                                      >
                                        2
                                      </span>
                                      <span
                                        className="token punctuation"
                                        key="code-segment-1-8"
                                      >
                                        ,
                                      </span>
                                      
      
                                      <span
                                        className="token number"
                                        key="code-segment-1-10"
                                      >
                                        3
                                      </span>
                                      
    
                                      <span
                                        className="token punctuation"
                                        key="code-segment-1-12"
                                      >
                                        ]
                                      </span>
                                      <span
                                        className="token punctuation"
                                        key="code-segment-1-13"
                                      >
                                        }
                                      </span>
                                    </span>
                                    
    
                                    <span
                                      className="token attr-name"
                                      key="code-segment-1-11"
                                    >
                                      number
                                    </span>
                                    <span
                                      className="token script language-javascript"
                                      key="code-segment-1-12"
                                    >
                                      <span
                                        className="token script-punctuation punctuation"
                                        key="code-segment-1-0"
                                      >
                                        =
                                      </span>
                                      <span
                                        className="token punctuation"
                                        key="code-segment-1-1"
                                      >
                                        {
                                      </span>
                                      <span
                                        className="token number"
                                        key="code-segment-1-2"
                                      >
                                        7
                                      </span>
                                      <span
                                        className="token punctuation"
                                        key="code-segment-1-3"
                                      >
                                        }
                                      </span>
                                    </span>
                                    
    
                                    <span
                                      className="token attr-name"
                                      key="code-segment-1-14"
                                    >
                                      string
                                    </span>
                                    <span
                                      className="token attr-value"
                                      key="code-segment-1-15"
                                    >
                                      <span
                                        className="token punctuation"
                                        key="code-segment-1-0"
                                      >
                                        =
                                      </span>
                                      <span
                                        className="token punctuation"
                                        key="code-segment-1-1"
                                      >
                                        "
                                      </span>
                                      seven
                                      <span
                                        className="token punctuation"
                                        key="code-segment-1-3"
                                      >
                                        "
                                      </span>
                                    </span>
                                    
    
                                    <span
                                      className="token attr-name"
                                      key="code-segment-1-17"
                                    >
                                      bool
                                    </span>
                                    
  
                                    <span
                                      className="token punctuation"
                                      key="code-segment-1-19"
                                    >
                                      /&gt;
                                    </span>
                                  </span>
                                  <span
                                    className="token plain-text"
                                    key="code-segement3"
                                  >
                                    

                                  </span>
                                  <span
                                    className="token tag"
                                    key="code-segement4"
                                  >
                                    <span
                                      className="token tag"
                                      key="code-segment-1-0"
                                    >
                                      <span
                                        className="token punctuation"
                                        key="code-segment-1-0"
                                      >
                                        &lt;/
                                      </span>
                                      div
                                    </span>
                                    <span
                                      className="token punctuation"
                                      key="code-segment-1-1"
                                    >
                                      &gt;
                                    </span>
                                  </span>
                                  

                                </code>
                              </Code>
                            </pre>
                          </Pre>
                        </SyntaxHighlighter>
                      </div>
                    </Scroller>
                    <ActionBar>
                      <Container>
                        <ul
                          className="emotion-10 emotion-11"
                        >
                          <ActionItem
                            first={true}
                            key="0"
                          >
                            <li
                              className="emotion-8 emotion-9"
                            >
                              <ActionButton
                                key=".0"
                                onClick={[Function]}
                              >
                                <button
                                  className="emotion-6 emotion-7"
                                  onClick={[Function]}
                                >
                                  copy
                                </button>
                              </ActionButton>
                            </li>
                          </ActionItem>
                        </ul>
                      </Container>
                    </ActionBar>
                  </div>
                </Wrapper>
              </Copyable>
            </div>
            <div>
              <h1
                style={
                  Object {
                    "borderBottom": "1px solid #EEE",
                    "fontSize": "25px",
                    "margin": "20px 0 0 0",
                    "padding": "0 0 5px 0",
                  }
                }
              >
                Prop Types
              </h1>
              <div
                key="TestComponent_0"
              >
                <h3
                  style={
                    Object {
                      "margin": "20px 0 0 0",
                    }
                  }
                >
                  "
                  TestComponent
                  " Component
                </h3>
                <Component
                  excludedPropTypes={Array []}
                  maxPropArrayLength={3}
                  maxPropObjectKeys={3}
                  maxPropStringLength={50}
                  type={[Function]}
                >
                  <PropTable
                    excludedPropTypes={Array []}
                    maxPropArrayLength={3}
                    maxPropObjectKeys={3}
                    maxPropStringLength={50}
                    propDefinitions={Array []}
                    type={[Function]}
                  >
                    <small>
                      No propTypes defined!
                    </small>
                  </PropTable>
                </Component>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </Story>
</deprecated>
`;

exports[`addon Info should render <Info /> and markdown 1`] = `
.emotion-12 {
  position: relative;
  overflow: hidden;
}

.emotion-4 {
  position: relative;
  overflow: auto;
}

.emotion-4 code {
  opacity: 0.7;
}

.emotion-2 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: start;
  -webkit-justify-content: flex-start;
  -ms-flex-pack: start;
  justify-content: flex-start;
  margin: 0;
  padding: 0;
}

.emotion-0 {
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
  padding-right: 0;
  opacity: 1;
}

.emotion-10 {
  position: absolute;
  bottom: 0;
  right: 0;
  max-width: 100%;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  list-style: none;
  margin: 0;
  padding: 0;
  border-radius: undefinedpx 0 0 0;
}

.emotion-8 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  position: relative;
  list-style: none;
  padding: 0;
  height: 26px;
  font-size: 11px;
  -webkit-letter-spacing: 1px;
  -moz-letter-spacing: 1px;
  -ms-letter-spacing: 1px;
  letter-spacing: 1px;
  text-transform: uppercase;
  border-left: 0 none;
}

.emotion-6 {
  border: 0 none;
  display: block;
  background: none;
  padding: 0 10px;
  cursor: pointer;
  text-transform: inherit;
  -webkit-letter-spacing: inherit;
  -moz-letter-spacing: inherit;
  -ms-letter-spacing: inherit;
  letter-spacing: inherit;
  font-size: inherit;
  color: inherit;
  border-top: 2px solid transparent;
  border-bottom: 2px solid transparent;
}

.emotion-6:focus {
  border-bottom: 2px solid undefined;
  outline: 0 none;
}

<deprecated>
  <Story
    PropTable={[Function]}
    components={
      Object {
        "a": [Function],
        "code": [Function],
        "h1": [Function],
        "h2": [Function],
        "h3": [Function],
        "h4": [Function],
        "h5": [Function],
        "h6": [Function],
        "li": [Function],
        "p": [Function],
        "ul": [Function],
      }
    }
    context={Object {}}
    excludedPropTypes={Array []}
    info="# Test story
## with markdown info
containing **bold**, *cursive* text, \`code\` and [a link](https://github.com)"
    maxPropArrayLength={3}
    maxPropObjectKeys={3}
    maxPropStringLength={50}
    maxPropsIntoLine={3}
    propTables={Array []}
    propTablesExclude={Array []}
    showHeader={true}
    showInline={false}
    showSource={true}
    styles={[Function]}
  >
    <div>
      <div
        style={
          Object {
            "position": "relative",
            "zIndex": 0,
          }
        }
      >
        <div>
          It's a 
           story:
          <TestComponent
            array={
              Array [
                1,
                2,
                3,
              ]
            }
            bool={true}
            func={[Function]}
            number={7}
            obj={
              Object {
                "a": "a",
                "b": "b",
              }
            }
            string="seven"
          >
            <div>
              <h1>
                function func(x) {
        return x + 1;
      }
              </h1>
              <h2>
                [object Object]
              </h2>
              <h3>
                1,2,3
              </h3>
              <h4>
                7
              </h4>
              <h5>
                seven
              </h5>
              <h6>
                true
              </h6>
              <p>
                undefined
              </p>
              <a
                href="#"
              >
                test
              </a>
              <code>
                storiesOf
              </code>
              <ul>
                <li>
                  1
                </li>
                <li>
                  2
                </li>
              </ul>
            </div>
          </TestComponent>
        </div>
      </div>
      <button
        className="info__show-button"
        onClick={[Function]}
        style={
          Object {
            "background": "#28c",
            "border": "none",
            "borderRadius": "0 0 0 5px",
            "color": "#fff",
            "cursor": "pointer",
            "display": "block",
            "fontFamily": "sans-serif",
            "fontSize": "12px",
            "padding": "5px 15px",
            "position": "fixed",
            "right": 0,
            "top": 0,
          }
        }
        type="button"
      >
        Show Info
      </button>
      <div
        className="info__overlay"
        style={
          Object {
            "background": "white",
            "bottom": 0,
            "display": "none",
            "left": 0,
            "overflow": "auto",
            "padding": "0 40px",
            "position": "fixed",
            "right": 0,
            "top": 0,
            "zIndex": 99999,
          }
        }
      >
        <button
          className="info__close-button"
          onClick={[Function]}
          style={
            Object {
              "background": "#28c",
              "border": "none",
              "borderRadius": "0 0 0 5px",
              "color": "#fff",
              "cursor": "pointer",
              "display": "block",
              "fontFamily": "sans-serif",
              "fontSize": "12px",
              "padding": "5px 15px",
              "position": "fixed",
              "right": 0,
              "top": 0,
            }
          }
          type="button"
        >
          Ã—
        </button>
        <div>
          <div
            style={
              Object {
                "WebkitFontSmoothing": "antialiased",
                "backgroundColor": "#fff",
                "border": "1px solid #eee",
                "borderRadius": "2px",
                "color": "#444",
                "fontFamily": "-apple-system, \\".SFNSText-Regular\\", \\"San Francisco\\", BlinkMacSystemFont, \\"Segoe UI\\", \\"Roboto\\", \\"Oxygen\\", \\"Ubuntu\\", \\"Cantarell\\", \\"Fira Sans\\", \\"Droid Sans\\", \\"Helvetica Neue\\", \\"Lucida Grande\\", \\"Arial\\", sans-serif",
                "fontSize": "15px",
                "fontWeight": 300,
                "lineHeight": 1.45,
                "marginBottom": "20px",
                "marginTop": "20px",
                "padding": "20px 40px 40px",
              }
            }
          >
            <div
              style={
                Object {
                  "borderBottom": "1px solid #eee",
                  "marginBottom": 10,
                  "paddingTop": 10,
                }
              }
            >
              <h1
                style={
                  Object {
                    "fontSize": "35px",
                    "margin": 0,
                    "padding": 0,
                  }
                }
              />
              <h2
                style={
                  Object {
                    "fontSize": "22px",
                    "fontWeight": 400,
                    "margin": "0 0 10px 0",
                    "padding": 0,
                  }
                }
              />
            </div>
            <div
              style={
                Object {
                  "marginBottom": 0,
                }
              }
            >
              <H1
                context={Object {}}
                id="test-story"
                key="0"
              >
                <h1
                  id="test-story"
                  style={
                    Object {
                      "WebkitFontSmoothing": "antialiased",
                      "borderBottom": "1px solid #eee",
                      "color": "#444",
                      "fontFamily": "-apple-system, \\".SFNSText-Regular\\", \\"San Francisco\\", BlinkMacSystemFont, \\"Segoe UI\\", \\"Roboto\\", \\"Oxygen\\", \\"Ubuntu\\", \\"Cantarell\\", \\"Fira Sans\\", \\"Droid Sans\\", \\"Helvetica Neue\\", \\"Lucida Grande\\", \\"Arial\\", sans-serif",
                      "fontSize": "40px",
                      "fontWeight": 600,
                      "margin": 0,
                      "padding": 0,
                    }
                  }
                >
                  Test story
                </h1>
              </H1>
              <H2
                context={Object {}}
                id="test-story-with-markdown-info"
                key="1"
              >
                <h2
                  id="test-story-with-markdown-info"
                  style={
                    Object {
                      "WebkitFontSmoothing": "antialiased",
                      "color": "#444",
                      "fontFamily": "-apple-system, \\".SFNSText-Regular\\", \\"San Francisco\\", BlinkMacSystemFont, \\"Segoe UI\\", \\"Roboto\\", \\"Oxygen\\", \\"Ubuntu\\", \\"Cantarell\\", \\"Fira Sans\\", \\"Droid Sans\\", \\"Helvetica Neue\\", \\"Lucida Grande\\", \\"Arial\\", sans-serif",
                      "fontSize": "30px",
                      "fontWeight": 600,
                      "margin": 0,
                      "padding": 0,
                    }
                  }
                >
                  with markdown info
                </h2>
              </H2>
              <P
                context={Object {}}
                key="6"
              >
                <div
                  style={
                    Object {
                      "WebkitFontSmoothing": "antialiased",
                      "color": "#444",
                      "fontFamily": "-apple-system, \\".SFNSText-Regular\\", \\"San Francisco\\", BlinkMacSystemFont, \\"Segoe UI\\", \\"Roboto\\", \\"Oxygen\\", \\"Ubuntu\\", \\"Cantarell\\", \\"Fira Sans\\", \\"Droid Sans\\", \\"Helvetica Neue\\", \\"Lucida Grande\\", \\"Arial\\", sans-serif",
                      "fontSize": "15px",
                    }
                  }
                >
                  containing 
                  <strong
                    key="2"
                  >
                    bold
                  </strong>
                  , 
                  <em
                    key="3"
                  >
                    cursive
                  </em>
                   text, 
                  <code
                    key="4"
                  >
                    code
                  </code>
                   and 
                  <A
                    context={Object {}}
                    href="https://github.com"
                    key="5"
                    title={null}
                  >
                    <a
                      href="https://github.com"
                      rel="noopener noreferrer"
                      style={
                        Object {
                          "color": "#3498db",
                        }
                      }
                      target="_blank"
                    >
                      a link
                    </a>
                  </A>
                </div>
              </P>
            </div>
            <div>
              <h1
                style={
                  Object {
                    "borderBottom": "1px solid #EEE",
                    "fontSize": "25px",
                    "margin": "20px 0 0 0",
                    "padding": "0 0 5px 0",
                  }
                }
              >
                Story Source
              </h1>
              <Copyable
                language="jsx"
              >
                <Wrapper>
                  <div
                    className="emotion-12 emotion-13"
                  >
                    <Scroller>
                      <div
                        className="emotion-4 emotion-5"
                      >
                        <SyntaxHighlighter
                          CodeTag={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "__emotion_base": "code",
                              "__emotion_forwardProp": undefined,
                              "__emotion_real": [Circular],
                              "__emotion_styles": Array [
                                "label:Code;",
                                Object {
                                  "map": "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9zeW50YXhoaWdobGlnaHRlci9zeW50YXhoaWdobGlnaHRlci5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUEyRGEiLCJmaWxlIjoiLi4vLi4vc3JjL3N5bnRheGhpZ2hsaWdodGVyL3N5bnRheGhpZ2hsaWdodGVyLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0LCB7IFB1cmVDb21wb25lbnQgfSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgc3R5bGVkIGZyb20gJ0BlbW90aW9uL3N0eWxlZCc7XG5pbXBvcnQgeyBkb2N1bWVudCwgd2luZG93IH0gZnJvbSAnZ2xvYmFsJztcbmltcG9ydCBtZW1vaXplIGZyb20gJ21lbW9pemVyaWZpYyc7XG5cbmltcG9ydCBqc3ggZnJvbSAncmVhY3Qtc3ludGF4LWhpZ2hsaWdodGVyL2xhbmd1YWdlcy9wcmlzbS9qc3gnO1xuaW1wb3J0IGJhc2ggZnJvbSAncmVhY3Qtc3ludGF4LWhpZ2hsaWdodGVyL2xhbmd1YWdlcy9wcmlzbS9iYXNoJztcbmltcG9ydCBjc3MgZnJvbSAncmVhY3Qtc3ludGF4LWhpZ2hsaWdodGVyL2xhbmd1YWdlcy9wcmlzbS9jc3MnO1xuaW1wb3J0IGh0bWwgZnJvbSAncmVhY3Qtc3ludGF4LWhpZ2hsaWdodGVyL2xhbmd1YWdlcy9wcmlzbS9tYXJrdXAnO1xuXG5pbXBvcnQgU3ludGF4SGlnaGxpZ2h0ZXIsIHsgcmVnaXN0ZXJMYW5ndWFnZSB9IGZyb20gJ3JlYWN0LXN5bnRheC1oaWdobGlnaHRlci9wcmlzbS1saWdodCc7XG5pbXBvcnQgeyBqcyBhcyBiZWF1dGlmeSB9IGZyb20gJ2pzLWJlYXV0aWZ5JztcbmltcG9ydCB7IEFjdGlvbkJhciwgQWN0aW9uQnV0dG9uIH0gZnJvbSAnLi4vcGFuZWxfYWN0aW9uYmFyL3BhbmVsX2FjdGlvbmJhcic7XG5cbnJlZ2lzdGVyTGFuZ3VhZ2UoJ2pzeCcsIGpzeCk7XG5yZWdpc3Rlckxhbmd1YWdlKCdiYXNoJywgYmFzaCk7XG5yZWdpc3Rlckxhbmd1YWdlKCdjc3MnLCBjc3MpO1xucmVnaXN0ZXJMYW5ndWFnZSgnaHRtbCcsIGh0bWwpO1xuXG5jb25zdCB0aGVtZWRTeW50YXggPSBtZW1vaXplKDIpKHRoZW1lID0+XG4gIE9iamVjdC5lbnRyaWVzKHRoZW1lLmNvZGUgfHwge30pLnJlZHVjZSgoYWNjLCBba2V5LCB2YWxdKSA9PiAoeyAuLi5hY2MsIFtgKiAuJHtrZXl9YF06IHZhbCB9KSwge30pXG4pO1xuXG5jb25zdCBXcmFwcGVyID0gc3R5bGVkLmRpdihcbiAge1xuICAgIHBvc2l0aW9uOiAncmVsYXRpdmUnLFxuICAgIG92ZXJmbG93OiAnaGlkZGVuJyxcbiAgfSxcbiAgKHsgdGhlbWUsIGJvcmRlcmVkIH0pID0+XG4gICAgYm9yZGVyZWRcbiAgICAgID8ge1xuICAgICAgICAgIGJvcmRlcjogdGhlbWUubWFpbkJvcmRlcixcbiAgICAgICAgICBib3JkZXJSYWRpdXM6IHRoZW1lLm1haW5Cb3JkZXJSYWRpdXMsXG4gICAgICAgICAgYmFja2dyb3VuZDogdGhlbWUuYmFyRmlsbCxcbiAgICAgICAgfVxuICAgICAgOiB7fVxuKTtcblxuY29uc3QgU2Nyb2xsZXIgPSBzdHlsZWQuZGl2KFxuICB7XG4gICAgcG9zaXRpb246ICdyZWxhdGl2ZScsXG4gICAgb3ZlcmZsb3c6ICdhdXRvJyxcbiAgfSxcbiAgKHsgdGhlbWUgfSkgPT4gKHtcbiAgICAnJiBjb2RlJzoge1xuICAgICAgcGFkZGluZ1JpZ2h0OiB0aGVtZS5sYXlvdXRNYXJnaW4sXG4gICAgICBvcGFjaXR5OiAwLjcsXG4gICAgfSxcbiAgfSksXG4gICh7IHRoZW1lIH0pID0+IHRoZW1lZFN5bnRheCh0aGVtZSlcbik7XG5cbmNvbnN0IFByZSA9IHN0eWxlZC5wcmUoKHsgdGhlbWUsIHBhZGRlZCB9KSA9PiAoe1xuICBkaXNwbGF5OiAnZmxleCcsXG4gIGp1c3RpZnlDb250ZW50OiAnZmxleC1zdGFydCcsXG4gIG1hcmdpbjogMCxcbiAgcGFkZGluZzogcGFkZGVkID8gdGhlbWUubGF5b3V0TWFyZ2luIDogMCxcbn0pKTtcblxuY29uc3QgQ29kZSA9IHN0eWxlZC5jb2RlKHtcbiAgZmxleDogMSxcbiAgcGFkZGluZ1JpZ2h0OiAwLFxuICBvcGFjaXR5OiAxLFxufSk7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIENvcHlhYmxlIGV4dGVuZHMgUHVyZUNvbXBvbmVudCB7XG4gIHN0YXRlID0geyBjb3BpZWQ6IGZhbHNlIH07XG5cbiAgZm9ybWF0Q29kZSA9IG1lbW9pemUoMikoKGxhbmd1YWdlLCBjb2RlKSA9PiB7XG4gICAgbGV0IGZvcm1hdHRlZENvZGUgPSBjb2RlO1xuICAgIGlmIChsYW5ndWFnZSA9PT0gJ2pzeCcpIHtcbiAgICAgIHRyeSB7XG4gICAgICAgIGZvcm1hdHRlZENvZGUgPSBiZWF1dGlmeShjb2RlLCB7XG4gICAgICAgICAgaW5kZW50X3NpemU6IDIsXG4gICAgICAgICAgYnJhY2Vfc3R5bGU6ICdjb2xsYXBzZSxwcmVzZXJ2ZS1pbmxpbmUnLFxuICAgICAgICAgIGVuZF93aXRoX25ld2xpbmU6IHRydWUsXG4gICAgICAgICAgd3JhcF9saW5lX2xlbmd0aDogODAsXG4gICAgICAgICAgZTR4OiB0cnVlLFxuICAgICAgICB9KTtcbiAgICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICAgIGNvbnNvbGUud2FybihcIkNvdWxkbid0IGZvcm1hdCBjb2RlXCIsIGZvcm1hdHRlZENvZGUpOyAvLyBlc2xpbnQtZGlzYWJsZS1saW5lIG5vLWNvbnNvbGVcbiAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIGZvcm1hdHRlZENvZGU7XG4gIH0pO1xuXG4gIG9uQ2xpY2sgPSBlID0+IHtcbiAgICBjb25zdCB7IGNoaWxkcmVuIH0gPSB0aGlzLnByb3BzO1xuXG4gICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xuICAgIGNvbnN0IHRtcCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ1RFWFRBUkVBJyk7XG4gICAgY29uc3QgZm9jdXMgPSBkb2N1bWVudC5hY3RpdmVFbGVtZW50O1xuXG4gICAgdG1wLnZhbHVlID0gY2hpbGRyZW47XG5cbiAgICBkb2N1bWVudC5ib2R5LmFwcGVuZENoaWxkKHRtcCk7XG4gICAgdG1wLnNlbGVjdCgpO1xuICAgIGRvY3VtZW50LmV4ZWNDb21tYW5kKCdjb3B5Jyk7XG4gICAgZG9jdW1lbnQuYm9keS5yZW1vdmVDaGlsZCh0bXApO1xuICAgIGZvY3VzLmZvY3VzKCk7XG5cbiAgICB0aGlzLnNldFN0YXRlKHsgY29waWVkOiB0cnVlIH0sICgpID0+IHtcbiAgICAgIHdpbmRvdy5zZXRUaW1lb3V0KCgpID0+IHRoaXMuc2V0U3RhdGUoeyBjb3BpZWQ6IGZhbHNlIH0pLCAxNTAwKTtcbiAgICB9KTtcbiAgfTtcblxuICByZW5kZXIoKSB7XG4gICAgY29uc3QgeyBjaGlsZHJlbiwgbGFuZ3VhZ2UgPSAnanN4JywgY29weWFibGUgPSB0cnVlLCBib3JkZXJlZCwgcGFkZGVkLCAuLi5yZXN0IH0gPSB0aGlzLnByb3BzO1xuICAgIGNvbnN0IHsgY29waWVkIH0gPSB0aGlzLnN0YXRlO1xuXG4gICAgcmV0dXJuIGNoaWxkcmVuID8gKFxuICAgICAgPFdyYXBwZXIgYm9yZGVyZWQ9e2JvcmRlcmVkfSBwYWRkZWQ9e3BhZGRlZH0+XG4gICAgICAgIDxTY3JvbGxlcj5cbiAgICAgICAgICA8U3ludGF4SGlnaGxpZ2h0ZXJcbiAgICAgICAgICAgIHBhZGRlZD17cGFkZGVkIHx8IGJvcmRlcmVkfVxuICAgICAgICAgICAgbGFuZ3VhZ2U9e2xhbmd1YWdlfVxuICAgICAgICAgICAgdXNlSW5saW5lU3R5bGVzPXtmYWxzZX1cbiAgICAgICAgICAgIFByZVRhZz17UHJlfVxuICAgICAgICAgICAgQ29kZVRhZz17Q29kZX1cbiAgICAgICAgICAgIGxpbmVOdW1iZXJDb250YWluZXJTdHlsZT17e319XG4gICAgICAgICAgICB7Li4ucmVzdH1cbiAgICAgICAgICA+XG4gICAgICAgICAgICB7dGhpcy5mb3JtYXRDb2RlKGxhbmd1YWdlLCBjaGlsZHJlbi50cmltKCkpfVxuICAgICAgICAgIDwvU3ludGF4SGlnaGxpZ2h0ZXI+XG4gICAgICAgIDwvU2Nyb2xsZXI+XG4gICAgICAgIHtjb3B5YWJsZSA/IChcbiAgICAgICAgICA8QWN0aW9uQmFyPlxuICAgICAgICAgICAgPEFjdGlvbkJ1dHRvbiBvbkNsaWNrPXt0aGlzLm9uQ2xpY2t9Pntjb3BpZWQgPyAnY29waWVkJyA6ICdjb3B5J308L0FjdGlvbkJ1dHRvbj5cbiAgICAgICAgICA8L0FjdGlvbkJhcj5cbiAgICAgICAgKSA6IG51bGx9XG4gICAgICA8L1dyYXBwZXI+XG4gICAgKSA6IG51bGw7XG4gIH1cbn1cbiJdfQ== */",
                                  "name": "1maezg8",
                                  "styles": "flex:1;padding-right:0;opacity:1;",
                                },
                              ],
                              "defaultProps": undefined,
                              "displayName": "Code",
                              "render": [Function],
                              "withComponent": [Function],
                            }
                          }
                          PreTag={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "__emotion_base": "pre",
                              "__emotion_forwardProp": undefined,
                              "__emotion_real": [Circular],
                              "__emotion_styles": Array [
                                "label:Pre;",
                                [Function],
                                "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9zeW50YXhoaWdobGlnaHRlci9zeW50YXhoaWdobGlnaHRlci5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFvRFkiLCJmaWxlIjoiLi4vLi4vc3JjL3N5bnRheGhpZ2hsaWdodGVyL3N5bnRheGhpZ2hsaWdodGVyLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0LCB7IFB1cmVDb21wb25lbnQgfSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgc3R5bGVkIGZyb20gJ0BlbW90aW9uL3N0eWxlZCc7XG5pbXBvcnQgeyBkb2N1bWVudCwgd2luZG93IH0gZnJvbSAnZ2xvYmFsJztcbmltcG9ydCBtZW1vaXplIGZyb20gJ21lbW9pemVyaWZpYyc7XG5cbmltcG9ydCBqc3ggZnJvbSAncmVhY3Qtc3ludGF4LWhpZ2hsaWdodGVyL2xhbmd1YWdlcy9wcmlzbS9qc3gnO1xuaW1wb3J0IGJhc2ggZnJvbSAncmVhY3Qtc3ludGF4LWhpZ2hsaWdodGVyL2xhbmd1YWdlcy9wcmlzbS9iYXNoJztcbmltcG9ydCBjc3MgZnJvbSAncmVhY3Qtc3ludGF4LWhpZ2hsaWdodGVyL2xhbmd1YWdlcy9wcmlzbS9jc3MnO1xuaW1wb3J0IGh0bWwgZnJvbSAncmVhY3Qtc3ludGF4LWhpZ2hsaWdodGVyL2xhbmd1YWdlcy9wcmlzbS9tYXJrdXAnO1xuXG5pbXBvcnQgU3ludGF4SGlnaGxpZ2h0ZXIsIHsgcmVnaXN0ZXJMYW5ndWFnZSB9IGZyb20gJ3JlYWN0LXN5bnRheC1oaWdobGlnaHRlci9wcmlzbS1saWdodCc7XG5pbXBvcnQgeyBqcyBhcyBiZWF1dGlmeSB9IGZyb20gJ2pzLWJlYXV0aWZ5JztcbmltcG9ydCB7IEFjdGlvbkJhciwgQWN0aW9uQnV0dG9uIH0gZnJvbSAnLi4vcGFuZWxfYWN0aW9uYmFyL3BhbmVsX2FjdGlvbmJhcic7XG5cbnJlZ2lzdGVyTGFuZ3VhZ2UoJ2pzeCcsIGpzeCk7XG5yZWdpc3Rlckxhbmd1YWdlKCdiYXNoJywgYmFzaCk7XG5yZWdpc3Rlckxhbmd1YWdlKCdjc3MnLCBjc3MpO1xucmVnaXN0ZXJMYW5ndWFnZSgnaHRtbCcsIGh0bWwpO1xuXG5jb25zdCB0aGVtZWRTeW50YXggPSBtZW1vaXplKDIpKHRoZW1lID0+XG4gIE9iamVjdC5lbnRyaWVzKHRoZW1lLmNvZGUgfHwge30pLnJlZHVjZSgoYWNjLCBba2V5LCB2YWxdKSA9PiAoeyAuLi5hY2MsIFtgKiAuJHtrZXl9YF06IHZhbCB9KSwge30pXG4pO1xuXG5jb25zdCBXcmFwcGVyID0gc3R5bGVkLmRpdihcbiAge1xuICAgIHBvc2l0aW9uOiAncmVsYXRpdmUnLFxuICAgIG92ZXJmbG93OiAnaGlkZGVuJyxcbiAgfSxcbiAgKHsgdGhlbWUsIGJvcmRlcmVkIH0pID0+XG4gICAgYm9yZGVyZWRcbiAgICAgID8ge1xuICAgICAgICAgIGJvcmRlcjogdGhlbWUubWFpbkJvcmRlcixcbiAgICAgICAgICBib3JkZXJSYWRpdXM6IHRoZW1lLm1haW5Cb3JkZXJSYWRpdXMsXG4gICAgICAgICAgYmFja2dyb3VuZDogdGhlbWUuYmFyRmlsbCxcbiAgICAgICAgfVxuICAgICAgOiB7fVxuKTtcblxuY29uc3QgU2Nyb2xsZXIgPSBzdHlsZWQuZGl2KFxuICB7XG4gICAgcG9zaXRpb246ICdyZWxhdGl2ZScsXG4gICAgb3ZlcmZsb3c6ICdhdXRvJyxcbiAgfSxcbiAgKHsgdGhlbWUgfSkgPT4gKHtcbiAgICAnJiBjb2RlJzoge1xuICAgICAgcGFkZGluZ1JpZ2h0OiB0aGVtZS5sYXlvdXRNYXJnaW4sXG4gICAgICBvcGFjaXR5OiAwLjcsXG4gICAgfSxcbiAgfSksXG4gICh7IHRoZW1lIH0pID0+IHRoZW1lZFN5bnRheCh0aGVtZSlcbik7XG5cbmNvbnN0IFByZSA9IHN0eWxlZC5wcmUoKHsgdGhlbWUsIHBhZGRlZCB9KSA9PiAoe1xuICBkaXNwbGF5OiAnZmxleCcsXG4gIGp1c3RpZnlDb250ZW50OiAnZmxleC1zdGFydCcsXG4gIG1hcmdpbjogMCxcbiAgcGFkZGluZzogcGFkZGVkID8gdGhlbWUubGF5b3V0TWFyZ2luIDogMCxcbn0pKTtcblxuY29uc3QgQ29kZSA9IHN0eWxlZC5jb2RlKHtcbiAgZmxleDogMSxcbiAgcGFkZGluZ1JpZ2h0OiAwLFxuICBvcGFjaXR5OiAxLFxufSk7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIENvcHlhYmxlIGV4dGVuZHMgUHVyZUNvbXBvbmVudCB7XG4gIHN0YXRlID0geyBjb3BpZWQ6IGZhbHNlIH07XG5cbiAgZm9ybWF0Q29kZSA9IG1lbW9pemUoMikoKGxhbmd1YWdlLCBjb2RlKSA9PiB7XG4gICAgbGV0IGZvcm1hdHRlZENvZGUgPSBjb2RlO1xuICAgIGlmIChsYW5ndWFnZSA9PT0gJ2pzeCcpIHtcbiAgICAgIHRyeSB7XG4gICAgICAgIGZvcm1hdHRlZENvZGUgPSBiZWF1dGlmeShjb2RlLCB7XG4gICAgICAgICAgaW5kZW50X3NpemU6IDIsXG4gICAgICAgICAgYnJhY2Vfc3R5bGU6ICdjb2xsYXBzZSxwcmVzZXJ2ZS1pbmxpbmUnLFxuICAgICAgICAgIGVuZF93aXRoX25ld2xpbmU6IHRydWUsXG4gICAgICAgICAgd3JhcF9saW5lX2xlbmd0aDogODAsXG4gICAgICAgICAgZTR4OiB0cnVlLFxuICAgICAgICB9KTtcbiAgICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICAgIGNvbnNvbGUud2FybihcIkNvdWxkbid0IGZvcm1hdCBjb2RlXCIsIGZvcm1hdHRlZENvZGUpOyAvLyBlc2xpbnQtZGlzYWJsZS1saW5lIG5vLWNvbnNvbGVcbiAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIGZvcm1hdHRlZENvZGU7XG4gIH0pO1xuXG4gIG9uQ2xpY2sgPSBlID0+IHtcbiAgICBjb25zdCB7IGNoaWxkcmVuIH0gPSB0aGlzLnByb3BzO1xuXG4gICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xuICAgIGNvbnN0IHRtcCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ1RFWFRBUkVBJyk7XG4gICAgY29uc3QgZm9jdXMgPSBkb2N1bWVudC5hY3RpdmVFbGVtZW50O1xuXG4gICAgdG1wLnZhbHVlID0gY2hpbGRyZW47XG5cbiAgICBkb2N1bWVudC5ib2R5LmFwcGVuZENoaWxkKHRtcCk7XG4gICAgdG1wLnNlbGVjdCgpO1xuICAgIGRvY3VtZW50LmV4ZWNDb21tYW5kKCdjb3B5Jyk7XG4gICAgZG9jdW1lbnQuYm9keS5yZW1vdmVDaGlsZCh0bXApO1xuICAgIGZvY3VzLmZvY3VzKCk7XG5cbiAgICB0aGlzLnNldFN0YXRlKHsgY29waWVkOiB0cnVlIH0sICgpID0+IHtcbiAgICAgIHdpbmRvdy5zZXRUaW1lb3V0KCgpID0+IHRoaXMuc2V0U3RhdGUoeyBjb3BpZWQ6IGZhbHNlIH0pLCAxNTAwKTtcbiAgICB9KTtcbiAgfTtcblxuICByZW5kZXIoKSB7XG4gICAgY29uc3QgeyBjaGlsZHJlbiwgbGFuZ3VhZ2UgPSAnanN4JywgY29weWFibGUgPSB0cnVlLCBib3JkZXJlZCwgcGFkZGVkLCAuLi5yZXN0IH0gPSB0aGlzLnByb3BzO1xuICAgIGNvbnN0IHsgY29waWVkIH0gPSB0aGlzLnN0YXRlO1xuXG4gICAgcmV0dXJuIGNoaWxkcmVuID8gKFxuICAgICAgPFdyYXBwZXIgYm9yZGVyZWQ9e2JvcmRlcmVkfSBwYWRkZWQ9e3BhZGRlZH0+XG4gICAgICAgIDxTY3JvbGxlcj5cbiAgICAgICAgICA8U3ludGF4SGlnaGxpZ2h0ZXJcbiAgICAgICAgICAgIHBhZGRlZD17cGFkZGVkIHx8IGJvcmRlcmVkfVxuICAgICAgICAgICAgbGFuZ3VhZ2U9e2xhbmd1YWdlfVxuICAgICAgICAgICAgdXNlSW5saW5lU3R5bGVzPXtmYWxzZX1cbiAgICAgICAgICAgIFByZVRhZz17UHJlfVxuICAgICAgICAgICAgQ29kZVRhZz17Q29kZX1cbiAgICAgICAgICAgIGxpbmVOdW1iZXJDb250YWluZXJTdHlsZT17e319XG4gICAgICAgICAgICB7Li4ucmVzdH1cbiAgICAgICAgICA+XG4gICAgICAgICAgICB7dGhpcy5mb3JtYXRDb2RlKGxhbmd1YWdlLCBjaGlsZHJlbi50cmltKCkpfVxuICAgICAgICAgIDwvU3ludGF4SGlnaGxpZ2h0ZXI+XG4gICAgICAgIDwvU2Nyb2xsZXI+XG4gICAgICAgIHtjb3B5YWJsZSA/IChcbiAgICAgICAgICA8QWN0aW9uQmFyPlxuICAgICAgICAgICAgPEFjdGlvbkJ1dHRvbiBvbkNsaWNrPXt0aGlzLm9uQ2xpY2t9Pntjb3BpZWQgPyAnY29waWVkJyA6ICdjb3B5J308L0FjdGlvbkJ1dHRvbj5cbiAgICAgICAgICA8L0FjdGlvbkJhcj5cbiAgICAgICAgKSA6IG51bGx9XG4gICAgICA8L1dyYXBwZXI+XG4gICAgKSA6IG51bGw7XG4gIH1cbn1cbiJdfQ== */",
                              ],
                              "defaultProps": undefined,
                              "displayName": "Pre",
                              "render": [Function],
                              "withComponent": [Function],
                            }
                          }
                          language="jsx"
                          lineNumberContainerStyle={Object {}}
                          useInlineStyles={false}
                        >
                          <Pre
                            className="hljs"
                          >
                            <pre
                              className="hljs emotion-2 emotion-3"
                            >
                              <Code>
                                <code
                                  className="emotion-0 emotion-1"
                                >
                                  <span
                                    className="token tag"
                                    key="code-segement0"
                                  >
                                    <span
                                      className="token tag"
                                      key="code-segment-1-0"
                                    >
                                      <span
                                        className="token punctuation"
                                        key="code-segment-1-0"
                                      >
                                        &lt;
                                      </span>
                                      div
                                    </span>
                                    <span
                                      className="token punctuation"
                                      key="code-segment-1-1"
                                    >
                                      &gt;
                                    </span>
                                  </span>
                                  <span
                                    className="token plain-text"
                                    key="code-segement1"
                                  >
                                    
  It's a  story:
  
                                  </span>
                                  <span
                                    className="token tag"
                                    key="code-segement2"
                                  >
                                    <span
                                      className="token tag"
                                      key="code-segment-1-0"
                                    >
                                      <span
                                        className="token punctuation"
                                        key="code-segment-1-0"
                                      >
                                        &lt;
                                      </span>
                                      TestComponent
                                    </span>
                                    
    
                                    <span
                                      className="token attr-name"
                                      key="code-segment-1-2"
                                    >
                                      func
                                    </span>
                                    <span
                                      className="token script language-javascript"
                                      key="code-segment-1-3"
                                    >
                                      <span
                                        className="token script-punctuation punctuation"
                                        key="code-segment-1-0"
                                      >
                                        =
                                      </span>
                                      <span
                                        className="token punctuation"
                                        key="code-segment-1-1"
                                      >
                                        {
                                      </span>
                                      <span
                                        className="token keyword"
                                        key="code-segment-1-2"
                                      >
                                        function
                                      </span>
                                       
                                      <span
                                        className="token function"
                                        key="code-segment-1-4"
                                      >
                                        noRefCheck
                                      </span>
                                      <span
                                        className="token punctuation"
                                        key="code-segment-1-5"
                                      >
                                        (
                                      </span>
                                      <span
                                        className="token punctuation"
                                        key="code-segment-1-6"
                                      >
                                        )
                                      </span>
                                       
                                      <span
                                        className="token punctuation"
                                        key="code-segment-1-8"
                                      >
                                        {
                                      </span>
                                      <span
                                        className="token punctuation"
                                        key="code-segment-1-9"
                                      >
                                        }
                                      </span>
                                      <span
                                        className="token punctuation"
                                        key="code-segment-1-10"
                                      >
                                        }
                                      </span>
                                    </span>
                                    
    
                                    <span
                                      className="token attr-name"
                                      key="code-segment-1-5"
                                    >
                                      obj
                                    </span>
                                    <span
                                      className="token script language-javascript"
                                      key="code-segment-1-6"
                                    >
                                      <span
                                        className="token script-punctuation punctuation"
                                        key="code-segment-1-0"
                                      >
                                        =
                                      </span>
                                      <span
                                        className="token punctuation"
                                        key="code-segment-1-1"
                                      >
                                        {
                                      </span>
                                      <span
                                        className="token punctuation"
                                        key="code-segment-1-2"
                                      >
                                        {
                                      </span>
                                      
      a
                                      <span
                                        className="token punctuation"
                                        key="code-segment-1-4"
                                      >
                                        :
                                      </span>
                                       
                                      <span
                                        className="token string"
                                        key="code-segment-1-6"
                                      >
                                        'a'
                                      </span>
                                      <span
                                        className="token punctuation"
                                        key="code-segment-1-7"
                                      >
                                        ,
                                      </span>
                                      
      b
                                      <span
                                        className="token punctuation"
                                        key="code-segment-1-9"
                                      >
                                        :
                                      </span>
                                       
                                      <span
                                        className="token string"
                                        key="code-segment-1-11"
                                      >
                                        'b'
                                      </span>
                                      
    
                                      <span
                                        className="token punctuation"
                                        key="code-segment-1-13"
                                      >
                                        }
                                      </span>
                                      <span
                                        className="token punctuation"
                                        key="code-segment-1-14"
                                      >
                                        }
                                      </span>
                                    </span>
                                    
    
                                    <span
                                      className="token attr-name"
                                      key="code-segment-1-8"
                                    >
                                      array
                                    </span>
                                    <span
                                      className="token script language-javascript"
                                      key="code-segment-1-9"
                                    >
                                      <span
                                        className="token script-punctuation punctuation"
                                        key="code-segment-1-0"
                                      >
                                        =
                                      </span>
                                      <span
                                        className="token punctuation"
                                        key="code-segment-1-1"
                                      >
                                        {
                                      </span>
                                      <span
                                        className="token punctuation"
                                        key="code-segment-1-2"
                                      >
                                        [
                                      </span>
                                      
      
                                      <span
                                        className="token number"
                                        key="code-segment-1-4"
                                      >
                                        1
                                      </span>
                                      <span
                                        className="token punctuation"
                                        key="code-segment-1-5"
                                      >
                                        ,
                                      </span>
                                      
      
                                      <span
                                        className="token number"
                                        key="code-segment-1-7"
                                      >
                                        2
                                      </span>
                                      <span
                                        className="token punctuation"
                                        key="code-segment-1-8"
                                      >
                                        ,
                                      </span>
                                      
      
                                      <span
                                        className="token number"
                                        key="code-segment-1-10"
                                      >
                                        3
                                      </span>
                                      
    
                                      <span
                                        className="token punctuation"
                                        key="code-segment-1-12"
                                      >
                                        ]
                                      </span>
                                      <span
                                        className="token punctuation"
                                        key="code-segment-1-13"
                                      >
                                        }
                                      </span>
                                    </span>
                                    
    
                                    <span
                                      className="token attr-name"
                                      key="code-segment-1-11"
                                    >
                                      number
                                    </span>
                                    <span
                                      className="token script language-javascript"
                                      key="code-segment-1-12"
                                    >
                                      <span
                                        className="token script-punctuation punctuation"
                                        key="code-segment-1-0"
                                      >
                                        =
                                      </span>
                                      <span
                                        className="token punctuation"
                                        key="code-segment-1-1"
                                      >
                                        {
                                      </span>
                                      <span
                                        className="token number"
                                        key="code-segment-1-2"
                                      >
                                        7
                                      </span>
                                      <span
                                        className="token punctuation"
                                        key="code-segment-1-3"
                                      >
                                        }
                                      </span>
                                    </span>
                                    
    
                                    <span
                                      className="token attr-name"
                                      key="code-segment-1-14"
                                    >
                                      string
                                    </span>
                                    <span
                                      className="token attr-value"
                                      key="code-segment-1-15"
                                    >
                                      <span
                                        className="token punctuation"
                                        key="code-segment-1-0"
                                      >
                                        =
                                      </span>
                                      <span
                                        className="token punctuation"
                                        key="code-segment-1-1"
                                      >
                                        "
                                      </span>
                                      seven
                                      <span
                                        className="token punctuation"
                                        key="code-segment-1-3"
                                      >
                                        "
                                      </span>
                                    </span>
                                    
    
                                    <span
                                      className="token attr-name"
                                      key="code-segment-1-17"
                                    >
                                      bool
                                    </span>
                                    
  
                                    <span
                                      className="token punctuation"
                                      key="code-segment-1-19"
                                    >
                                      /&gt;
                                    </span>
                                  </span>
                                  <span
                                    className="token plain-text"
                                    key="code-segement3"
                                  >
                                    

                                  </span>
                                  <span
                                    className="token tag"
                                    key="code-segement4"
                                  >
                                    <span
                                      className="token tag"
                                      key="code-segment-1-0"
                                    >
                                      <span
                                        className="token punctuation"
                                        key="code-segment-1-0"
                                      >
                                        &lt;/
                                      </span>
                                      div
                                    </span>
                                    <span
                                      className="token punctuation"
                                      key="code-segment-1-1"
                                    >
                                      &gt;
                                    </span>
                                  </span>
                                  

                                </code>
                              </Code>
                            </pre>
                          </Pre>
                        </SyntaxHighlighter>
                      </div>
                    </Scroller>
                    <ActionBar>
                      <Container>
                        <ul
                          className="emotion-10 emotion-11"
                        >
                          <ActionItem
                            first={true}
                            key="0"
                          >
                            <li
                              className="emotion-8 emotion-9"
                            >
                              <ActionButton
                                key=".0"
                                onClick={[Function]}
                              >
                                <button
                                  className="emotion-6 emotion-7"
                                  onClick={[Function]}
                                >
                                  copy
                                </button>
                              </ActionButton>
                            </li>
                          </ActionItem>
                        </ul>
                      </Container>
                    </ActionBar>
                  </div>
                </Wrapper>
              </Copyable>
            </div>
            <div>
              <h1
                style={
                  Object {
                    "borderBottom": "1px solid #EEE",
                    "fontSize": "25px",
                    "margin": "20px 0 0 0",
                    "padding": "0 0 5px 0",
                  }
                }
              >
                Prop Types
              </h1>
              <div
                key="TestComponent_0"
              >
                <h3
                  style={
                    Object {
                      "margin": "20px 0 0 0",
                    }
                  }
                >
                  "
                  TestComponent
                  " Component
                </h3>
                <Component
                  excludedPropTypes={Array []}
                  maxPropArrayLength={3}
                  maxPropObjectKeys={3}
                  maxPropStringLength={50}
                  type={[Function]}
                >
                  <PropTable
                    excludedPropTypes={Array []}
                    maxPropArrayLength={3}
                    maxPropObjectKeys={3}
                    maxPropStringLength={50}
                    propDefinitions={Array []}
                    type={[Function]}
                  >
                    <small>
                      No propTypes defined!
                    </small>
                  </PropTable>
                </Component>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </Story>
</deprecated>
`;

exports[`addon Info should render component description 1`] = `
.emotion-12 {
  position: relative;
  overflow: hidden;
}

.emotion-4 {
  position: relative;
  overflow: auto;
}

.emotion-4 code {
  opacity: 0.7;
}

.emotion-2 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: start;
  -webkit-justify-content: flex-start;
  -ms-flex-pack: start;
  justify-content: flex-start;
  margin: 0;
  padding: 0;
}

.emotion-0 {
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
  padding-right: 0;
  opacity: 1;
}

.emotion-10 {
  position: absolute;
  bottom: 0;
  right: 0;
  max-width: 100%;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  list-style: none;
  margin: 0;
  padding: 0;
  border-radius: undefinedpx 0 0 0;
}

.emotion-8 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  position: relative;
  list-style: none;
  padding: 0;
  height: 26px;
  font-size: 11px;
  -webkit-letter-spacing: 1px;
  -moz-letter-spacing: 1px;
  -ms-letter-spacing: 1px;
  letter-spacing: 1px;
  text-transform: uppercase;
  border-left: 0 none;
}

.emotion-6 {
  border: 0 none;
  display: block;
  background: none;
  padding: 0 10px;
  cursor: pointer;
  text-transform: inherit;
  -webkit-letter-spacing: inherit;
  -moz-letter-spacing: inherit;
  -ms-letter-spacing: inherit;
  letter-spacing: inherit;
  font-size: inherit;
  color: inherit;
  border-top: 2px solid transparent;
  border-bottom: 2px solid transparent;
}

.emotion-6:focus {
  border-bottom: 2px solid undefined;
  outline: 0 none;
}

<Info>
  <Story
    PropTable={[Function]}
    components={
      Object {
        "a": [Function],
        "code": [Function],
        "h1": [Function],
        "h2": [Function],
        "h3": [Function],
        "h4": [Function],
        "h5": [Function],
        "h6": [Function],
        "li": [Function],
        "p": [Function],
        "ul": [Function],
      }
    }
    context={
      Object {
        "kind": "TestComponent",
        "story": "Basic test",
      }
    }
    excludedPropTypes={Array []}
    info=""
    maxPropArrayLength={3}
    maxPropObjectKeys={3}
    maxPropStringLength={50}
    maxPropsIntoLine={3}
    propTables={null}
    propTablesExclude={Array []}
    showHeader={true}
    showInline={true}
    showSource={true}
    styles={[Function]}
  >
    <div>
      <div>
        <div
          style={
            Object {
              "WebkitFontSmoothing": "antialiased",
              "backgroundColor": "#fff",
              "border": "1px solid #eee",
              "borderRadius": "2px",
              "color": "#444",
              "fontFamily": "-apple-system, \\".SFNSText-Regular\\", \\"San Francisco\\", BlinkMacSystemFont, \\"Segoe UI\\", \\"Roboto\\", \\"Oxygen\\", \\"Ubuntu\\", \\"Cantarell\\", \\"Fira Sans\\", \\"Droid Sans\\", \\"Helvetica Neue\\", \\"Lucida Grande\\", \\"Arial\\", sans-serif",
              "fontSize": "15px",
              "fontWeight": 300,
              "lineHeight": 1.45,
              "marginBottom": "20px",
              "marginTop": "20px",
              "padding": "20px 40px 40px",
            }
          }
        >
          <div
            style={
              Object {
                "borderBottom": "1px solid #eee",
                "marginBottom": 10,
                "paddingTop": 10,
              }
            }
          >
            <h1
              style={
                Object {
                  "fontSize": "35px",
                  "margin": 0,
                  "padding": 0,
                }
              }
            >
              TestComponent
            </h1>
            <h2
              style={
                Object {
                  "fontSize": "22px",
                  "fontWeight": 400,
                  "margin": "0 0 10px 0",
                  "padding": 0,
                }
              }
            />
          </div>
        </div>
      </div>
      <div
        id="story-root"
        style={Object {}}
      >
        <div>
          It's a 
          Basic test
           story:
          <TestComponent
            array={
              Array [
                1,
                2,
                3,
              ]
            }
            bool={true}
            func={[Function]}
            number={7}
            obj={
              Object {
                "a": "a",
                "b": "b",
              }
            }
            string="seven"
          >
            <div>
              <h1>
                function func(x) {
        return x + 1;
      }
              </h1>
              <h2>
                [object Object]
              </h2>
              <h3>
                1,2,3
              </h3>
              <h4>
                7
              </h4>
              <h5>
                seven
              </h5>
              <h6>
                true
              </h6>
              <p>
                undefined
              </p>
              <a
                href="#"
              >
                test
              </a>
              <code>
                storiesOf
              </code>
              <ul>
                <li>
                  1
                </li>
                <li>
                  2
                </li>
              </ul>
            </div>
          </TestComponent>
        </div>
      </div>
      <div>
        <div
          style={
            Object {
              "WebkitFontSmoothing": "antialiased",
              "backgroundColor": "#fff",
              "border": "1px solid #eee",
              "borderRadius": "2px",
              "color": "#444",
              "fontFamily": "-apple-system, \\".SFNSText-Regular\\", \\"San Francisco\\", BlinkMacSystemFont, \\"Segoe UI\\", \\"Roboto\\", \\"Oxygen\\", \\"Ubuntu\\", \\"Cantarell\\", \\"Fira Sans\\", \\"Droid Sans\\", \\"Helvetica Neue\\", \\"Lucida Grande\\", \\"Arial\\", sans-serif",
              "fontSize": "15px",
              "fontWeight": 300,
              "lineHeight": 1.45,
              "marginBottom": "20px",
              "marginTop": "20px",
              "padding": "20px 40px 40px",
            }
          }
        >
          <div>
            <H1
              context={Object {}}
              id="awesome-test-component-description"
              key="0"
            >
              <h1
                id="awesome-test-component-description"
                style={
                  Object {
                    "WebkitFontSmoothing": "antialiased",
                    "borderBottom": "1px solid #eee",
                    "color": "#444",
                    "fontFamily": "-apple-system, \\".SFNSText-Regular\\", \\"San Francisco\\", BlinkMacSystemFont, \\"Segoe UI\\", \\"Roboto\\", \\"Oxygen\\", \\"Ubuntu\\", \\"Cantarell\\", \\"Fira Sans\\", \\"Droid Sans\\", \\"Helvetica Neue\\", \\"Lucida Grande\\", \\"Arial\\", sans-serif",
                    "fontSize": "40px",
                    "fontWeight": 600,
                    "margin": 0,
                    "padding": 0,
                  }
                }
              >
                Awesome test component description
              </h1>
            </H1>
            <H2
              context={Object {}}
              id="awesome-test-component-description-with-markdown-support"
              key="1"
            >
              <h2
                id="awesome-test-component-description-with-markdown-support"
                style={
                  Object {
                    "WebkitFontSmoothing": "antialiased",
                    "color": "#444",
                    "fontFamily": "-apple-system, \\".SFNSText-Regular\\", \\"San Francisco\\", BlinkMacSystemFont, \\"Segoe UI\\", \\"Roboto\\", \\"Oxygen\\", \\"Ubuntu\\", \\"Cantarell\\", \\"Fira Sans\\", \\"Droid Sans\\", \\"Helvetica Neue\\", \\"Lucida Grande\\", \\"Arial\\", sans-serif",
                    "fontSize": "30px",
                    "fontWeight": 600,
                    "margin": 0,
                    "padding": 0,
                  }
                }
              >
                with markdown support
              </h2>
            </H2>
            <P
              context={Object {}}
              key="4"
            >
              <div
                style={
                  Object {
                    "WebkitFontSmoothing": "antialiased",
                    "color": "#444",
                    "fontFamily": "-apple-system, \\".SFNSText-Regular\\", \\"San Francisco\\", BlinkMacSystemFont, \\"Segoe UI\\", \\"Roboto\\", \\"Oxygen\\", \\"Ubuntu\\", \\"Cantarell\\", \\"Fira Sans\\", \\"Droid Sans\\", \\"Helvetica Neue\\", \\"Lucida Grande\\", \\"Arial\\", sans-serif",
                    "fontSize": "15px",
                  }
                }
              >
                <strong
                  key="2"
                >
                  bold
                </strong>
                 
                <em
                  key="3"
                >
                  cursive
                </em>
                 
              </div>
            </P>
          </div>
          <div>
            <h1
              style={
                Object {
                  "borderBottom": "1px solid #EEE",
                  "fontSize": "25px",
                  "margin": "20px 0 0 0",
                  "padding": "0 0 5px 0",
                }
              }
            >
              Story Source
            </h1>
            <Copyable
              language="jsx"
            >
              <Wrapper>
                <div
                  className="emotion-12 emotion-13"
                >
                  <Scroller>
                    <div
                      className="emotion-4 emotion-5"
                    >
                      <SyntaxHighlighter
                        CodeTag={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "__emotion_base": "code",
                            "__emotion_forwardProp": undefined,
                            "__emotion_real": [Circular],
                            "__emotion_styles": Array [
                              "label:Code;",
                              Object {
                                "map": "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9zeW50YXhoaWdobGlnaHRlci9zeW50YXhoaWdobGlnaHRlci5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUEyRGEiLCJmaWxlIjoiLi4vLi4vc3JjL3N5bnRheGhpZ2hsaWdodGVyL3N5bnRheGhpZ2hsaWdodGVyLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0LCB7IFB1cmVDb21wb25lbnQgfSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgc3R5bGVkIGZyb20gJ0BlbW90aW9uL3N0eWxlZCc7XG5pbXBvcnQgeyBkb2N1bWVudCwgd2luZG93IH0gZnJvbSAnZ2xvYmFsJztcbmltcG9ydCBtZW1vaXplIGZyb20gJ21lbW9pemVyaWZpYyc7XG5cbmltcG9ydCBqc3ggZnJvbSAncmVhY3Qtc3ludGF4LWhpZ2hsaWdodGVyL2xhbmd1YWdlcy9wcmlzbS9qc3gnO1xuaW1wb3J0IGJhc2ggZnJvbSAncmVhY3Qtc3ludGF4LWhpZ2hsaWdodGVyL2xhbmd1YWdlcy9wcmlzbS9iYXNoJztcbmltcG9ydCBjc3MgZnJvbSAncmVhY3Qtc3ludGF4LWhpZ2hsaWdodGVyL2xhbmd1YWdlcy9wcmlzbS9jc3MnO1xuaW1wb3J0IGh0bWwgZnJvbSAncmVhY3Qtc3ludGF4LWhpZ2hsaWdodGVyL2xhbmd1YWdlcy9wcmlzbS9tYXJrdXAnO1xuXG5pbXBvcnQgU3ludGF4SGlnaGxpZ2h0ZXIsIHsgcmVnaXN0ZXJMYW5ndWFnZSB9IGZyb20gJ3JlYWN0LXN5bnRheC1oaWdobGlnaHRlci9wcmlzbS1saWdodCc7XG5pbXBvcnQgeyBqcyBhcyBiZWF1dGlmeSB9IGZyb20gJ2pzLWJlYXV0aWZ5JztcbmltcG9ydCB7IEFjdGlvbkJhciwgQWN0aW9uQnV0dG9uIH0gZnJvbSAnLi4vcGFuZWxfYWN0aW9uYmFyL3BhbmVsX2FjdGlvbmJhcic7XG5cbnJlZ2lzdGVyTGFuZ3VhZ2UoJ2pzeCcsIGpzeCk7XG5yZWdpc3Rlckxhbmd1YWdlKCdiYXNoJywgYmFzaCk7XG5yZWdpc3Rlckxhbmd1YWdlKCdjc3MnLCBjc3MpO1xucmVnaXN0ZXJMYW5ndWFnZSgnaHRtbCcsIGh0bWwpO1xuXG5jb25zdCB0aGVtZWRTeW50YXggPSBtZW1vaXplKDIpKHRoZW1lID0+XG4gIE9iamVjdC5lbnRyaWVzKHRoZW1lLmNvZGUgfHwge30pLnJlZHVjZSgoYWNjLCBba2V5LCB2YWxdKSA9PiAoeyAuLi5hY2MsIFtgKiAuJHtrZXl9YF06IHZhbCB9KSwge30pXG4pO1xuXG5jb25zdCBXcmFwcGVyID0gc3R5bGVkLmRpdihcbiAge1xuICAgIHBvc2l0aW9uOiAncmVsYXRpdmUnLFxuICAgIG92ZXJmbG93OiAnaGlkZGVuJyxcbiAgfSxcbiAgKHsgdGhlbWUsIGJvcmRlcmVkIH0pID0+XG4gICAgYm9yZGVyZWRcbiAgICAgID8ge1xuICAgICAgICAgIGJvcmRlcjogdGhlbWUubWFpbkJvcmRlcixcbiAgICAgICAgICBib3JkZXJSYWRpdXM6IHRoZW1lLm1haW5Cb3JkZXJSYWRpdXMsXG4gICAgICAgICAgYmFja2dyb3VuZDogdGhlbWUuYmFyRmlsbCxcbiAgICAgICAgfVxuICAgICAgOiB7fVxuKTtcblxuY29uc3QgU2Nyb2xsZXIgPSBzdHlsZWQuZGl2KFxuICB7XG4gICAgcG9zaXRpb246ICdyZWxhdGl2ZScsXG4gICAgb3ZlcmZsb3c6ICdhdXRvJyxcbiAgfSxcbiAgKHsgdGhlbWUgfSkgPT4gKHtcbiAgICAnJiBjb2RlJzoge1xuICAgICAgcGFkZGluZ1JpZ2h0OiB0aGVtZS5sYXlvdXRNYXJnaW4sXG4gICAgICBvcGFjaXR5OiAwLjcsXG4gICAgfSxcbiAgfSksXG4gICh7IHRoZW1lIH0pID0+IHRoZW1lZFN5bnRheCh0aGVtZSlcbik7XG5cbmNvbnN0IFByZSA9IHN0eWxlZC5wcmUoKHsgdGhlbWUsIHBhZGRlZCB9KSA9PiAoe1xuICBkaXNwbGF5OiAnZmxleCcsXG4gIGp1c3RpZnlDb250ZW50OiAnZmxleC1zdGFydCcsXG4gIG1hcmdpbjogMCxcbiAgcGFkZGluZzogcGFkZGVkID8gdGhlbWUubGF5b3V0TWFyZ2luIDogMCxcbn0pKTtcblxuY29uc3QgQ29kZSA9IHN0eWxlZC5jb2RlKHtcbiAgZmxleDogMSxcbiAgcGFkZGluZ1JpZ2h0OiAwLFxuICBvcGFjaXR5OiAxLFxufSk7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIENvcHlhYmxlIGV4dGVuZHMgUHVyZUNvbXBvbmVudCB7XG4gIHN0YXRlID0geyBjb3BpZWQ6IGZhbHNlIH07XG5cbiAgZm9ybWF0Q29kZSA9IG1lbW9pemUoMikoKGxhbmd1YWdlLCBjb2RlKSA9PiB7XG4gICAgbGV0IGZvcm1hdHRlZENvZGUgPSBjb2RlO1xuICAgIGlmIChsYW5ndWFnZSA9PT0gJ2pzeCcpIHtcbiAgICAgIHRyeSB7XG4gICAgICAgIGZvcm1hdHRlZENvZGUgPSBiZWF1dGlmeShjb2RlLCB7XG4gICAgICAgICAgaW5kZW50X3NpemU6IDIsXG4gICAgICAgICAgYnJhY2Vfc3R5bGU6ICdjb2xsYXBzZSxwcmVzZXJ2ZS1pbmxpbmUnLFxuICAgICAgICAgIGVuZF93aXRoX25ld2xpbmU6IHRydWUsXG4gICAgICAgICAgd3JhcF9saW5lX2xlbmd0aDogODAsXG4gICAgICAgICAgZTR4OiB0cnVlLFxuICAgICAgICB9KTtcbiAgICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICAgIGNvbnNvbGUud2FybihcIkNvdWxkbid0IGZvcm1hdCBjb2RlXCIsIGZvcm1hdHRlZENvZGUpOyAvLyBlc2xpbnQtZGlzYWJsZS1saW5lIG5vLWNvbnNvbGVcbiAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIGZvcm1hdHRlZENvZGU7XG4gIH0pO1xuXG4gIG9uQ2xpY2sgPSBlID0+IHtcbiAgICBjb25zdCB7IGNoaWxkcmVuIH0gPSB0aGlzLnByb3BzO1xuXG4gICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xuICAgIGNvbnN0IHRtcCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ1RFWFRBUkVBJyk7XG4gICAgY29uc3QgZm9jdXMgPSBkb2N1bWVudC5hY3RpdmVFbGVtZW50O1xuXG4gICAgdG1wLnZhbHVlID0gY2hpbGRyZW47XG5cbiAgICBkb2N1bWVudC5ib2R5LmFwcGVuZENoaWxkKHRtcCk7XG4gICAgdG1wLnNlbGVjdCgpO1xuICAgIGRvY3VtZW50LmV4ZWNDb21tYW5kKCdjb3B5Jyk7XG4gICAgZG9jdW1lbnQuYm9keS5yZW1vdmVDaGlsZCh0bXApO1xuICAgIGZvY3VzLmZvY3VzKCk7XG5cbiAgICB0aGlzLnNldFN0YXRlKHsgY29waWVkOiB0cnVlIH0sICgpID0+IHtcbiAgICAgIHdpbmRvdy5zZXRUaW1lb3V0KCgpID0+IHRoaXMuc2V0U3RhdGUoeyBjb3BpZWQ6IGZhbHNlIH0pLCAxNTAwKTtcbiAgICB9KTtcbiAgfTtcblxuICByZW5kZXIoKSB7XG4gICAgY29uc3QgeyBjaGlsZHJlbiwgbGFuZ3VhZ2UgPSAnanN4JywgY29weWFibGUgPSB0cnVlLCBib3JkZXJlZCwgcGFkZGVkLCAuLi5yZXN0IH0gPSB0aGlzLnByb3BzO1xuICAgIGNvbnN0IHsgY29waWVkIH0gPSB0aGlzLnN0YXRlO1xuXG4gICAgcmV0dXJuIGNoaWxkcmVuID8gKFxuICAgICAgPFdyYXBwZXIgYm9yZGVyZWQ9e2JvcmRlcmVkfSBwYWRkZWQ9e3BhZGRlZH0+XG4gICAgICAgIDxTY3JvbGxlcj5cbiAgICAgICAgICA8U3ludGF4SGlnaGxpZ2h0ZXJcbiAgICAgICAgICAgIHBhZGRlZD17cGFkZGVkIHx8IGJvcmRlcmVkfVxuICAgICAgICAgICAgbGFuZ3VhZ2U9e2xhbmd1YWdlfVxuICAgICAgICAgICAgdXNlSW5saW5lU3R5bGVzPXtmYWxzZX1cbiAgICAgICAgICAgIFByZVRhZz17UHJlfVxuICAgICAgICAgICAgQ29kZVRhZz17Q29kZX1cbiAgICAgICAgICAgIGxpbmVOdW1iZXJDb250YWluZXJTdHlsZT17e319XG4gICAgICAgICAgICB7Li4ucmVzdH1cbiAgICAgICAgICA+XG4gICAgICAgICAgICB7dGhpcy5mb3JtYXRDb2RlKGxhbmd1YWdlLCBjaGlsZHJlbi50cmltKCkpfVxuICAgICAgICAgIDwvU3ludGF4SGlnaGxpZ2h0ZXI+XG4gICAgICAgIDwvU2Nyb2xsZXI+XG4gICAgICAgIHtjb3B5YWJsZSA/IChcbiAgICAgICAgICA8QWN0aW9uQmFyPlxuICAgICAgICAgICAgPEFjdGlvbkJ1dHRvbiBvbkNsaWNrPXt0aGlzLm9uQ2xpY2t9Pntjb3BpZWQgPyAnY29waWVkJyA6ICdjb3B5J308L0FjdGlvbkJ1dHRvbj5cbiAgICAgICAgICA8L0FjdGlvbkJhcj5cbiAgICAgICAgKSA6IG51bGx9XG4gICAgICA8L1dyYXBwZXI+XG4gICAgKSA6IG51bGw7XG4gIH1cbn1cbiJdfQ== */",
                                "name": "1maezg8",
                                "styles": "flex:1;padding-right:0;opacity:1;",
                              },
                            ],
                            "defaultProps": undefined,
                            "displayName": "Code",
                            "render": [Function],
                            "withComponent": [Function],
                          }
                        }
                        PreTag={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "__emotion_base": "pre",
                            "__emotion_forwardProp": undefined,
                            "__emotion_real": [Circular],
                            "__emotion_styles": Array [
                              "label:Pre;",
                              [Function],
                              "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9zeW50YXhoaWdobGlnaHRlci9zeW50YXhoaWdobGlnaHRlci5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFvRFkiLCJmaWxlIjoiLi4vLi4vc3JjL3N5bnRheGhpZ2hsaWdodGVyL3N5bnRheGhpZ2hsaWdodGVyLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0LCB7IFB1cmVDb21wb25lbnQgfSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgc3R5bGVkIGZyb20gJ0BlbW90aW9uL3N0eWxlZCc7XG5pbXBvcnQgeyBkb2N1bWVudCwgd2luZG93IH0gZnJvbSAnZ2xvYmFsJztcbmltcG9ydCBtZW1vaXplIGZyb20gJ21lbW9pemVyaWZpYyc7XG5cbmltcG9ydCBqc3ggZnJvbSAncmVhY3Qtc3ludGF4LWhpZ2hsaWdodGVyL2xhbmd1YWdlcy9wcmlzbS9qc3gnO1xuaW1wb3J0IGJhc2ggZnJvbSAncmVhY3Qtc3ludGF4LWhpZ2hsaWdodGVyL2xhbmd1YWdlcy9wcmlzbS9iYXNoJztcbmltcG9ydCBjc3MgZnJvbSAncmVhY3Qtc3ludGF4LWhpZ2hsaWdodGVyL2xhbmd1YWdlcy9wcmlzbS9jc3MnO1xuaW1wb3J0IGh0bWwgZnJvbSAncmVhY3Qtc3ludGF4LWhpZ2hsaWdodGVyL2xhbmd1YWdlcy9wcmlzbS9tYXJrdXAnO1xuXG5pbXBvcnQgU3ludGF4SGlnaGxpZ2h0ZXIsIHsgcmVnaXN0ZXJMYW5ndWFnZSB9IGZyb20gJ3JlYWN0LXN5bnRheC1oaWdobGlnaHRlci9wcmlzbS1saWdodCc7XG5pbXBvcnQgeyBqcyBhcyBiZWF1dGlmeSB9IGZyb20gJ2pzLWJlYXV0aWZ5JztcbmltcG9ydCB7IEFjdGlvbkJhciwgQWN0aW9uQnV0dG9uIH0gZnJvbSAnLi4vcGFuZWxfYWN0aW9uYmFyL3BhbmVsX2FjdGlvbmJhcic7XG5cbnJlZ2lzdGVyTGFuZ3VhZ2UoJ2pzeCcsIGpzeCk7XG5yZWdpc3Rlckxhbmd1YWdlKCdiYXNoJywgYmFzaCk7XG5yZWdpc3Rlckxhbmd1YWdlKCdjc3MnLCBjc3MpO1xucmVnaXN0ZXJMYW5ndWFnZSgnaHRtbCcsIGh0bWwpO1xuXG5jb25zdCB0aGVtZWRTeW50YXggPSBtZW1vaXplKDIpKHRoZW1lID0+XG4gIE9iamVjdC5lbnRyaWVzKHRoZW1lLmNvZGUgfHwge30pLnJlZHVjZSgoYWNjLCBba2V5LCB2YWxdKSA9PiAoeyAuLi5hY2MsIFtgKiAuJHtrZXl9YF06IHZhbCB9KSwge30pXG4pO1xuXG5jb25zdCBXcmFwcGVyID0gc3R5bGVkLmRpdihcbiAge1xuICAgIHBvc2l0aW9uOiAncmVsYXRpdmUnLFxuICAgIG92ZXJmbG93OiAnaGlkZGVuJyxcbiAgfSxcbiAgKHsgdGhlbWUsIGJvcmRlcmVkIH0pID0+XG4gICAgYm9yZGVyZWRcbiAgICAgID8ge1xuICAgICAgICAgIGJvcmRlcjogdGhlbWUubWFpbkJvcmRlcixcbiAgICAgICAgICBib3JkZXJSYWRpdXM6IHRoZW1lLm1haW5Cb3JkZXJSYWRpdXMsXG4gICAgICAgICAgYmFja2dyb3VuZDogdGhlbWUuYmFyRmlsbCxcbiAgICAgICAgfVxuICAgICAgOiB7fVxuKTtcblxuY29uc3QgU2Nyb2xsZXIgPSBzdHlsZWQuZGl2KFxuICB7XG4gICAgcG9zaXRpb246ICdyZWxhdGl2ZScsXG4gICAgb3ZlcmZsb3c6ICdhdXRvJyxcbiAgfSxcbiAgKHsgdGhlbWUgfSkgPT4gKHtcbiAgICAnJiBjb2RlJzoge1xuICAgICAgcGFkZGluZ1JpZ2h0OiB0aGVtZS5sYXlvdXRNYXJnaW4sXG4gICAgICBvcGFjaXR5OiAwLjcsXG4gICAgfSxcbiAgfSksXG4gICh7IHRoZW1lIH0pID0+IHRoZW1lZFN5bnRheCh0aGVtZSlcbik7XG5cbmNvbnN0IFByZSA9IHN0eWxlZC5wcmUoKHsgdGhlbWUsIHBhZGRlZCB9KSA9PiAoe1xuICBkaXNwbGF5OiAnZmxleCcsXG4gIGp1c3RpZnlDb250ZW50OiAnZmxleC1zdGFydCcsXG4gIG1hcmdpbjogMCxcbiAgcGFkZGluZzogcGFkZGVkID8gdGhlbWUubGF5b3V0TWFyZ2luIDogMCxcbn0pKTtcblxuY29uc3QgQ29kZSA9IHN0eWxlZC5jb2RlKHtcbiAgZmxleDogMSxcbiAgcGFkZGluZ1JpZ2h0OiAwLFxuICBvcGFjaXR5OiAxLFxufSk7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIENvcHlhYmxlIGV4dGVuZHMgUHVyZUNvbXBvbmVudCB7XG4gIHN0YXRlID0geyBjb3BpZWQ6IGZhbHNlIH07XG5cbiAgZm9ybWF0Q29kZSA9IG1lbW9pemUoMikoKGxhbmd1YWdlLCBjb2RlKSA9PiB7XG4gICAgbGV0IGZvcm1hdHRlZENvZGUgPSBjb2RlO1xuICAgIGlmIChsYW5ndWFnZSA9PT0gJ2pzeCcpIHtcbiAgICAgIHRyeSB7XG4gICAgICAgIGZvcm1hdHRlZENvZGUgPSBiZWF1dGlmeShjb2RlLCB7XG4gICAgICAgICAgaW5kZW50X3NpemU6IDIsXG4gICAgICAgICAgYnJhY2Vfc3R5bGU6ICdjb2xsYXBzZSxwcmVzZXJ2ZS1pbmxpbmUnLFxuICAgICAgICAgIGVuZF93aXRoX25ld2xpbmU6IHRydWUsXG4gICAgICAgICAgd3JhcF9saW5lX2xlbmd0aDogODAsXG4gICAgICAgICAgZTR4OiB0cnVlLFxuICAgICAgICB9KTtcbiAgICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICAgIGNvbnNvbGUud2FybihcIkNvdWxkbid0IGZvcm1hdCBjb2RlXCIsIGZvcm1hdHRlZENvZGUpOyAvLyBlc2xpbnQtZGlzYWJsZS1saW5lIG5vLWNvbnNvbGVcbiAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIGZvcm1hdHRlZENvZGU7XG4gIH0pO1xuXG4gIG9uQ2xpY2sgPSBlID0+IHtcbiAgICBjb25zdCB7IGNoaWxkcmVuIH0gPSB0aGlzLnByb3BzO1xuXG4gICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xuICAgIGNvbnN0IHRtcCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ1RFWFRBUkVBJyk7XG4gICAgY29uc3QgZm9jdXMgPSBkb2N1bWVudC5hY3RpdmVFbGVtZW50O1xuXG4gICAgdG1wLnZhbHVlID0gY2hpbGRyZW47XG5cbiAgICBkb2N1bWVudC5ib2R5LmFwcGVuZENoaWxkKHRtcCk7XG4gICAgdG1wLnNlbGVjdCgpO1xuICAgIGRvY3VtZW50LmV4ZWNDb21tYW5kKCdjb3B5Jyk7XG4gICAgZG9jdW1lbnQuYm9keS5yZW1vdmVDaGlsZCh0bXApO1xuICAgIGZvY3VzLmZvY3VzKCk7XG5cbiAgICB0aGlzLnNldFN0YXRlKHsgY29waWVkOiB0cnVlIH0sICgpID0+IHtcbiAgICAgIHdpbmRvdy5zZXRUaW1lb3V0KCgpID0+IHRoaXMuc2V0U3RhdGUoeyBjb3BpZWQ6IGZhbHNlIH0pLCAxNTAwKTtcbiAgICB9KTtcbiAgfTtcblxuICByZW5kZXIoKSB7XG4gICAgY29uc3QgeyBjaGlsZHJlbiwgbGFuZ3VhZ2UgPSAnanN4JywgY29weWFibGUgPSB0cnVlLCBib3JkZXJlZCwgcGFkZGVkLCAuLi5yZXN0IH0gPSB0aGlzLnByb3BzO1xuICAgIGNvbnN0IHsgY29waWVkIH0gPSB0aGlzLnN0YXRlO1xuXG4gICAgcmV0dXJuIGNoaWxkcmVuID8gKFxuICAgICAgPFdyYXBwZXIgYm9yZGVyZWQ9e2JvcmRlcmVkfSBwYWRkZWQ9e3BhZGRlZH0+XG4gICAgICAgIDxTY3JvbGxlcj5cbiAgICAgICAgICA8U3ludGF4SGlnaGxpZ2h0ZXJcbiAgICAgICAgICAgIHBhZGRlZD17cGFkZGVkIHx8IGJvcmRlcmVkfVxuICAgICAgICAgICAgbGFuZ3VhZ2U9e2xhbmd1YWdlfVxuICAgICAgICAgICAgdXNlSW5saW5lU3R5bGVzPXtmYWxzZX1cbiAgICAgICAgICAgIFByZVRhZz17UHJlfVxuICAgICAgICAgICAgQ29kZVRhZz17Q29kZX1cbiAgICAgICAgICAgIGxpbmVOdW1iZXJDb250YWluZXJTdHlsZT17e319XG4gICAgICAgICAgICB7Li4ucmVzdH1cbiAgICAgICAgICA+XG4gICAgICAgICAgICB7dGhpcy5mb3JtYXRDb2RlKGxhbmd1YWdlLCBjaGlsZHJlbi50cmltKCkpfVxuICAgICAgICAgIDwvU3ludGF4SGlnaGxpZ2h0ZXI+XG4gICAgICAgIDwvU2Nyb2xsZXI+XG4gICAgICAgIHtjb3B5YWJsZSA/IChcbiAgICAgICAgICA8QWN0aW9uQmFyPlxuICAgICAgICAgICAgPEFjdGlvbkJ1dHRvbiBvbkNsaWNrPXt0aGlzLm9uQ2xpY2t9Pntjb3BpZWQgPyAnY29waWVkJyA6ICdjb3B5J308L0FjdGlvbkJ1dHRvbj5cbiAgICAgICAgICA8L0FjdGlvbkJhcj5cbiAgICAgICAgKSA6IG51bGx9XG4gICAgICA8L1dyYXBwZXI+XG4gICAgKSA6IG51bGw7XG4gIH1cbn1cbiJdfQ== */",
                            ],
                            "defaultProps": undefined,
                            "displayName": "Pre",
                            "render": [Function],
                            "withComponent": [Function],
                          }
                        }
                        language="jsx"
                        lineNumberContainerStyle={Object {}}
                        useInlineStyles={false}
                      >
                        <Pre
                          className="hljs"
                        >
                          <pre
                            className="hljs emotion-2 emotion-3"
                          >
                            <Code>
                              <code
                                className="emotion-0 emotion-1"
                              >
                                <span
                                  className="token tag"
                                  key="code-segement0"
                                >
                                  <span
                                    className="token tag"
                                    key="code-segment-1-0"
                                  >
                                    <span
                                      className="token punctuation"
                                      key="code-segment-1-0"
                                    >
                                      &lt;
                                    </span>
                                    div
                                  </span>
                                  <span
                                    className="token punctuation"
                                    key="code-segment-1-1"
                                  >
                                    &gt;
                                  </span>
                                </span>
                                <span
                                  className="token plain-text"
                                  key="code-segement1"
                                >
                                  
  It's a Basic test story:
  
                                </span>
                                <span
                                  className="token tag"
                                  key="code-segement2"
                                >
                                  <span
                                    className="token tag"
                                    key="code-segment-1-0"
                                  >
                                    <span
                                      className="token punctuation"
                                      key="code-segment-1-0"
                                    >
                                      &lt;
                                    </span>
                                    TestComponent
                                  </span>
                                  
    
                                  <span
                                    className="token attr-name"
                                    key="code-segment-1-2"
                                  >
                                    func
                                  </span>
                                  <span
                                    className="token script language-javascript"
                                    key="code-segment-1-3"
                                  >
                                    <span
                                      className="token script-punctuation punctuation"
                                      key="code-segment-1-0"
                                    >
                                      =
                                    </span>
                                    <span
                                      className="token punctuation"
                                      key="code-segment-1-1"
                                    >
                                      {
                                    </span>
                                    <span
                                      className="token keyword"
                                      key="code-segment-1-2"
                                    >
                                      function
                                    </span>
                                     
                                    <span
                                      className="token function"
                                      key="code-segment-1-4"
                                    >
                                      noRefCheck
                                    </span>
                                    <span
                                      className="token punctuation"
                                      key="code-segment-1-5"
                                    >
                                      (
                                    </span>
                                    <span
                                      className="token punctuation"
                                      key="code-segment-1-6"
                                    >
                                      )
                                    </span>
                                     
                                    <span
                                      className="token punctuation"
                                      key="code-segment-1-8"
                                    >
                                      {
                                    </span>
                                    <span
                                      className="token punctuation"
                                      key="code-segment-1-9"
                                    >
                                      }
                                    </span>
                                    <span
                                      className="token punctuation"
                                      key="code-segment-1-10"
                                    >
                                      }
                                    </span>
                                  </span>
                                  
    
                                  <span
                                    className="token attr-name"
                                    key="code-segment-1-5"
                                  >
                                    obj
                                  </span>
                                  <span
                                    className="token script language-javascript"
                                    key="code-segment-1-6"
                                  >
                                    <span
                                      className="token script-punctuation punctuation"
                                      key="code-segment-1-0"
                                    >
                                      =
                                    </span>
                                    <span
                                      className="token punctuation"
                                      key="code-segment-1-1"
                                    >
                                      {
                                    </span>
                                    <span
                                      className="token punctuation"
                                      key="code-segment-1-2"
                                    >
                                      {
                                    </span>
                                    
      a
                                    <span
                                      className="token punctuation"
                                      key="code-segment-1-4"
                                    >
                                      :
                                    </span>
                                     
                                    <span
                                      className="token string"
                                      key="code-segment-1-6"
                                    >
                                      'a'
                                    </span>
                                    <span
                                      className="token punctuation"
                                      key="code-segment-1-7"
                                    >
                                      ,
                                    </span>
                                    
      b
                                    <span
                                      className="token punctuation"
                                      key="code-segment-1-9"
                                    >
                                      :
                                    </span>
                                     
                                    <span
                                      className="token string"
                                      key="code-segment-1-11"
                                    >
                                      'b'
                                    </span>
                                    
    
                                    <span
                                      className="token punctuation"
                                      key="code-segment-1-13"
                                    >
                                      }
                                    </span>
                                    <span
                                      className="token punctuation"
                                      key="code-segment-1-14"
                                    >
                                      }
                                    </span>
                                  </span>
                                  
    
                                  <span
                                    className="token attr-name"
                                    key="code-segment-1-8"
                                  >
                                    array
                                  </span>
                                  <span
                                    className="token script language-javascript"
                                    key="code-segment-1-9"
                                  >
                                    <span
                                      className="token script-punctuation punctuation"
                                      key="code-segment-1-0"
                                    >
                                      =
                                    </span>
                                    <span
                                      className="token punctuation"
                                      key="code-segment-1-1"
                                    >
                                      {
                                    </span>
                                    <span
                                      className="token punctuation"
                                      key="code-segment-1-2"
                                    >
                                      [
                                    </span>
                                    
      
                                    <span
                                      className="token number"
                                      key="code-segment-1-4"
                                    >
                                      1
                                    </span>
                                    <span
                                      className="token punctuation"
                                      key="code-segment-1-5"
                                    >
                                      ,
                                    </span>
                                    
      
                                    <span
                                      className="token number"
                                      key="code-segment-1-7"
                                    >
                                      2
                                    </span>
                                    <span
                                      className="token punctuation"
                                      key="code-segment-1-8"
                                    >
                                      ,
                                    </span>
                                    
      
                                    <span
                                      className="token number"
                                      key="code-segment-1-10"
                                    >
                                      3
                                    </span>
                                    
    
                                    <span
                                      className="token punctuation"
                                      key="code-segment-1-12"
                                    >
                                      ]
                                    </span>
                                    <span
                                      className="token punctuation"
                                      key="code-segment-1-13"
                                    >
                                      }
                                    </span>
                                  </span>
                                  
    
                                  <span
                                    className="token attr-name"
                                    key="code-segment-1-11"
                                  >
                                    number
                                  </span>
                                  <span
                                    className="token script language-javascript"
                                    key="code-segment-1-12"
                                  >
                                    <span
                                      className="token script-punctuation punctuation"
                                      key="code-segment-1-0"
                                    >
                                      =
                                    </span>
                                    <span
                                      className="token punctuation"
                                      key="code-segment-1-1"
                                    >
                                      {
                                    </span>
                                    <span
                                      className="token number"
                                      key="code-segment-1-2"
                                    >
                                      7
                                    </span>
                                    <span
                                      className="token punctuation"
                                      key="code-segment-1-3"
                                    >
                                      }
                                    </span>
                                  </span>
                                  
    
                                  <span
                                    className="token attr-name"
                                    key="code-segment-1-14"
                                  >
                                    string
                                  </span>
                                  <span
                                    className="token attr-value"
                                    key="code-segment-1-15"
                                  >
                                    <span
                                      className="token punctuation"
                                      key="code-segment-1-0"
                                    >
                                      =
                                    </span>
                                    <span
                                      className="token punctuation"
                                      key="code-segment-1-1"
                                    >
                                      "
                                    </span>
                                    seven
                                    <span
                                      className="token punctuation"
                                      key="code-segment-1-3"
                                    >
                                      "
                                    </span>
                                  </span>
                                  
    
                                  <span
                                    className="token attr-name"
                                    key="code-segment-1-17"
                                  >
                                    bool
                                  </span>
                                  
  
                                  <span
                                    className="token punctuation"
                                    key="code-segment-1-19"
                                  >
                                    /&gt;
                                  </span>
                                </span>
                                <span
                                  className="token plain-text"
                                  key="code-segement3"
                                >
                                  

                                </span>
                                <span
                                  className="token tag"
                                  key="code-segement4"
                                >
                                  <span
                                    className="token tag"
                                    key="code-segment-1-0"
                                  >
                                    <span
                                      className="token punctuation"
                                      key="code-segment-1-0"
                                    >
                                      &lt;/
                                    </span>
                                    div
                                  </span>
                                  <span
                                    className="token punctuation"
                                    key="code-segment-1-1"
                                  >
                                    &gt;
                                  </span>
                                </span>
                                

                              </code>
                            </Code>
                          </pre>
                        </Pre>
                      </SyntaxHighlighter>
                    </div>
                  </Scroller>
                  <ActionBar>
                    <Container>
                      <ul
                        className="emotion-10 emotion-11"
                      >
                        <ActionItem
                          first={true}
                          key="0"
                        >
                          <li
                            className="emotion-8 emotion-9"
                          >
                            <ActionButton
                              key=".0"
                              onClick={[Function]}
                            >
                              <button
                                className="emotion-6 emotion-7"
                                onClick={[Function]}
                              >
                                copy
                              </button>
                            </ActionButton>
                          </li>
                        </ActionItem>
                      </ul>
                    </Container>
                  </ActionBar>
                </div>
              </Wrapper>
            </Copyable>
          </div>
        </div>
      </div>
    </div>
  </Story>
</Info>
`;
