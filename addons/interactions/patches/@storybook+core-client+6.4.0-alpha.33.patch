diff --git a/node_modules/@storybook/core-client/dist/cjs/preview/StoryRenderer.js b/node_modules/@storybook/core-client/dist/cjs/preview/StoryRenderer.js
index d061003..551987e 100644
--- a/node_modules/@storybook/core-client/dist/cjs/preview/StoryRenderer.js
+++ b/node_modules/@storybook/core-client/dist/cjs/preview/StoryRenderer.js
@@ -387,7 +387,7 @@ var StoryRenderer = /*#__PURE__*/function () {
     key: "renderStory",
     value: function () {
       var _renderStory = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(_ref7) {
-        var context, _ref7$context, id, getDecorated, applyLoaders, runPlayFunction, unboundStoryFn, forceRender, storyContext, storyFn;
+        var context, _ref7$context, id, getDecorated, applyLoaders, runPlayFunction, unboundStoryFn, forceRender, storyContext, storyFn, canvasId;
 
         return regeneratorRuntime.wrap(function _callee3$(_context3) {
           while (1) {
@@ -396,7 +396,7 @@ var StoryRenderer = /*#__PURE__*/function () {
                 context = _ref7.context, _ref7$context = _ref7.context, id = _ref7$context.id, getDecorated = _ref7$context.getDecorated;
 
                 if (!getDecorated) {
-                  _context3.next = 21;
+                  _context3.next = 22;
                   break;
                 }
 
@@ -420,37 +420,40 @@ var StoryRenderer = /*#__PURE__*/function () {
 
               case 10:
                 if (!(FEATURES.previewCsfV3 && !forceRender)) {
-                  _context3.next = 13;
+                  _context3.next = 14;
                   break;
                 }
 
-                _context3.next = 13;
-                return runPlayFunction();
+                canvasId = storyContext.viewMode === 'docs' ? "story--".concat(storyContext.storyId) : 'root';
+                _context3.next = 14;
+                return runPlayFunction(Object.assign({}, storyContext, {
+                  canvasId: canvasId
+                }));
 
-              case 13:
+              case 14:
                 this.channel.emit(_coreEvents.default.STORY_RENDERED, id);
-                _context3.next = 19;
+                _context3.next = 20;
                 break;
 
-              case 16:
-                _context3.prev = 16;
+              case 17:
+                _context3.prev = 17;
                 _context3.t0 = _context3["catch"](2);
                 this.renderException(_context3.t0);
 
-              case 19:
-                _context3.next = 23;
+              case 20:
+                _context3.next = 24;
                 break;
 
-              case 21:
+              case 22:
                 this.showNoPreview();
                 this.channel.emit(_coreEvents.default.STORY_MISSING, id);
 
-              case 23:
+              case 24:
               case "end":
                 return _context3.stop();
             }
           }
-        }, _callee3, this, [[2, 16]]);
+        }, _callee3, this, [[2, 17]]);
       }));
 
       function renderStory(_x3) {
@@ -499,6 +502,7 @@ var StoryRenderer = /*#__PURE__*/function () {
   }, {
     key: "renderException",
     value: function renderException(err) {
+      if (err === _coreEvents.default.IGNORED_EXCEPTION) return;
       this.channel.emit(_coreEvents.default.STORY_THREW_EXCEPTION, err);
       this.showErrorDisplay(err); // Log the stack to the console. So, user could check the source code.
 
diff --git a/node_modules/@storybook/core-client/dist/esm/preview/StoryRenderer.js b/node_modules/@storybook/core-client/dist/esm/preview/StoryRenderer.js
index 13fb770..83cf9b9 100644
--- a/node_modules/@storybook/core-client/dist/esm/preview/StoryRenderer.js
+++ b/node_modules/@storybook/core-client/dist/esm/preview/StoryRenderer.js
@@ -359,7 +359,7 @@ export var StoryRenderer = /*#__PURE__*/function () {
     key: "renderStory",
     value: function () {
       var _renderStory = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(_ref7) {
-        var context, _ref7$context, id, getDecorated, applyLoaders, runPlayFunction, unboundStoryFn, forceRender, storyContext, storyFn;
+        var context, _ref7$context, id, getDecorated, applyLoaders, runPlayFunction, unboundStoryFn, forceRender, storyContext, storyFn, canvasId;
 
         return regeneratorRuntime.wrap(function _callee3$(_context3) {
           while (1) {
@@ -368,7 +368,7 @@ export var StoryRenderer = /*#__PURE__*/function () {
                 context = _ref7.context, _ref7$context = _ref7.context, id = _ref7$context.id, getDecorated = _ref7$context.getDecorated;
 
                 if (!getDecorated) {
-                  _context3.next = 21;
+                  _context3.next = 22;
                   break;
                 }
 
@@ -392,37 +392,40 @@ export var StoryRenderer = /*#__PURE__*/function () {
 
               case 10:
                 if (!(FEATURES.previewCsfV3 && !forceRender)) {
-                  _context3.next = 13;
+                  _context3.next = 14;
                   break;
                 }
 
-                _context3.next = 13;
-                return runPlayFunction();
+                canvasId = storyContext.viewMode === 'docs' ? "story--".concat(storyContext.storyId) : 'root';
+                _context3.next = 14;
+                return runPlayFunction(Object.assign({}, storyContext, {
+                  canvasId: canvasId
+                }));
 
-              case 13:
+              case 14:
                 this.channel.emit(Events.STORY_RENDERED, id);
-                _context3.next = 19;
+                _context3.next = 20;
                 break;
 
-              case 16:
-                _context3.prev = 16;
+              case 17:
+                _context3.prev = 17;
                 _context3.t0 = _context3["catch"](2);
                 this.renderException(_context3.t0);
 
-              case 19:
-                _context3.next = 23;
+              case 20:
+                _context3.next = 24;
                 break;
 
-              case 21:
+              case 22:
                 this.showNoPreview();
                 this.channel.emit(Events.STORY_MISSING, id);
 
-              case 23:
+              case 24:
               case "end":
                 return _context3.stop();
             }
           }
-        }, _callee3, this, [[2, 16]]);
+        }, _callee3, this, [[2, 17]]);
       }));
 
       function renderStory(_x3) {
@@ -471,6 +474,7 @@ export var StoryRenderer = /*#__PURE__*/function () {
   }, {
     key: "renderException",
     value: function renderException(err) {
+      if (err === Events.IGNORED_EXCEPTION) return;
       this.channel.emit(Events.STORY_THREW_EXCEPTION, err);
       this.showErrorDisplay(err); // Log the stack to the console. So, user could check the source code.
 
diff --git a/node_modules/@storybook/core-client/dist/modern/preview/StoryRenderer.js b/node_modules/@storybook/core-client/dist/modern/preview/StoryRenderer.js
index c0e5a90..8c4c8e0 100644
--- a/node_modules/@storybook/core-client/dist/modern/preview/StoryRenderer.js
+++ b/node_modules/@storybook/core-client/dist/modern/preview/StoryRenderer.js
@@ -294,7 +294,9 @@ export class StoryRenderer {
         }));
 
         if (FEATURES.previewCsfV3 && !forceRender) {
-          await runPlayFunction();
+          const canvasId = storyContext.viewMode === 'docs' ? `story--${storyContext.storyId}` : 'root';
+          const canvasElement = document.getElementById(canvasId);
+          await runPlayFunction(Object.assign({}, storyContext, { canvasId, canvasElement }));
         }
 
         this.channel.emit(Events.STORY_RENDERED, id);
@@ -343,6 +345,8 @@ export class StoryRenderer {
 
   renderException(err) {
     this.channel.emit(Events.STORY_THREW_EXCEPTION, err);
+    if (err === Events.IGNORED_EXCEPTION) return;
+
     this.showErrorDisplay(err); // Log the stack to the console. So, user could check the source code.
 
     logger.error(err);
diff --git a/node_modules/@storybook/core-client/dist/ts3.4/preview/StoryRenderer.d.ts b/node_modules/@storybook/core-client/dist/ts3.4/preview/StoryRenderer.d.ts
index 36c5b4c..0252821 100644
--- a/node_modules/@storybook/core-client/dist/ts3.4/preview/StoryRenderer.d.ts
+++ b/node_modules/@storybook/core-client/dist/ts3.4/preview/StoryRenderer.d.ts
@@ -1,4 +1,5 @@
 import { StoryId, StoryKind, StoryFn, ViewMode, Channel } from '@storybook/addons';
+import Events from '@storybook/core-events';
 import { StoryStore } from '@storybook/client-api';
 import { RenderStoryFunction, RenderContextWithoutStoryContext } from './types';
 interface RenderMetadata {
@@ -54,7 +55,7 @@ export declare class StoryRenderer {
         context: RenderContextWithoutStoryContext;
         storyStore: StoryStore;
     }): void;
-    renderException(err: Error): void;
+    renderException(err: Error | typeof Events.IGNORED_EXCEPTION): void;
     renderError({ title, description }: {
         title: string;
         description: string;
diff --git a/node_modules/@storybook/core-client/dist/ts3.9/preview/StoryRenderer.d.ts b/node_modules/@storybook/core-client/dist/ts3.9/preview/StoryRenderer.d.ts
index 393558f..9c1eea3 100644
--- a/node_modules/@storybook/core-client/dist/ts3.9/preview/StoryRenderer.d.ts
+++ b/node_modules/@storybook/core-client/dist/ts3.9/preview/StoryRenderer.d.ts
@@ -1,4 +1,5 @@
 import { StoryId, StoryKind, StoryFn, ViewMode, Channel } from '@storybook/addons';
+import Events from '@storybook/core-events';
 import { StoryStore } from '@storybook/client-api';
 import { RenderStoryFunction, RenderContextWithoutStoryContext } from './types';
 interface RenderMetadata {
@@ -54,7 +55,7 @@ export declare class StoryRenderer {
         context: RenderContextWithoutStoryContext;
         storyStore: StoryStore;
     }): void;
-    renderException(err: Error): void;
+    renderException(err: Error | typeof Events.IGNORED_EXCEPTION): void;
     renderError({ title, description }: {
         title: string;
         description: string;
