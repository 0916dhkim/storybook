diff --git a/node_modules/@storybook/client-api/dist/cjs/story_store.js b/node_modules/@storybook/client-api/dist/cjs/story_store.js
index 9412142..1ce2d23 100644
--- a/node_modules/@storybook/client-api/dist/cjs/story_store.js
+++ b/node_modules/@storybook/client-api/dist/cjs/story_store.js
@@ -796,20 +796,21 @@ var StoryStore = /*#__PURE__*/function () {
         argTypeDefaultValueWarning();
       }
 
-      var initialArgsBeforeEnhancers = Object.assign({}, defaultArgs, passedArgs);
+      var originalArgs = Object.assign({}, defaultArgs, passedArgs);
 
       var initialArgs = this._argsEnhancers.reduce(function (accumulatedArgs, enhancer) {
         return Object.assign({}, accumulatedArgs, enhancer(Object.assign({}, identification, {
           parameters: combinedParameters,
-          args: initialArgsBeforeEnhancers,
+          args: accumulatedArgs,
           argTypes: argTypes,
           globals: {},
+          originalArgs: originalArgs,
           originalStoryFn: getOriginal()
         })));
-      }, initialArgsBeforeEnhancers);
+      }, originalArgs);
 
       var runPlayFunction = /*#__PURE__*/function () {
-        var _ref24 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {
+        var _ref24 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(context) {
           var _ref25, play;
 
           return regeneratorRuntime.wrap(function _callee2$(_context2) {
@@ -817,7 +818,7 @@ var StoryStore = /*#__PURE__*/function () {
               switch (_context2.prev = _context2.next) {
                 case 0:
                   _ref25 = combinedParameters, play = _ref25.play;
-                  return _context2.abrupt("return", play ? play() : undefined);
+                  return _context2.abrupt("return", play ? play(context) : undefined);
 
                 case 2:
                 case "end":
@@ -827,7 +828,7 @@ var StoryStore = /*#__PURE__*/function () {
           }, _callee2);
         }));
 
-        return function runPlayFunction() {
+        return function runPlayFunction(_x) {
           return _ref24.apply(this, arguments);
         };
       }();
diff --git a/node_modules/@storybook/client-api/dist/esm/story_store.js b/node_modules/@storybook/client-api/dist/esm/story_store.js
index f09439a..ac266f4 100644
--- a/node_modules/@storybook/client-api/dist/esm/story_store.js
+++ b/node_modules/@storybook/client-api/dist/esm/story_store.js
@@ -746,20 +746,21 @@ var StoryStore = /*#__PURE__*/function () {
         argTypeDefaultValueWarning();
       }
 
-      var initialArgsBeforeEnhancers = Object.assign({}, defaultArgs, passedArgs);
+      var originalArgs = Object.assign({}, defaultArgs, passedArgs);
 
       var initialArgs = this._argsEnhancers.reduce(function (accumulatedArgs, enhancer) {
         return Object.assign({}, accumulatedArgs, enhancer(Object.assign({}, identification, {
           parameters: combinedParameters,
-          args: initialArgsBeforeEnhancers,
+          args: accumulatedArgs,
           argTypes: argTypes,
           globals: {},
+          originalArgs: originalArgs,
           originalStoryFn: getOriginal()
         })));
-      }, initialArgsBeforeEnhancers);
+      }, originalArgs);
 
       var runPlayFunction = /*#__PURE__*/function () {
-        var _ref24 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {
+        var _ref24 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(context) {
           var _ref25, play;
 
           return regeneratorRuntime.wrap(function _callee2$(_context2) {
@@ -767,7 +768,7 @@ var StoryStore = /*#__PURE__*/function () {
               switch (_context2.prev = _context2.next) {
                 case 0:
                   _ref25 = combinedParameters, play = _ref25.play;
-                  return _context2.abrupt("return", play ? play() : undefined);
+                  return _context2.abrupt("return", play ? play(context) : undefined);
 
                 case 2:
                 case "end":
@@ -777,7 +778,7 @@ var StoryStore = /*#__PURE__*/function () {
           }, _callee2);
         }));
 
-        return function runPlayFunction() {
+        return function runPlayFunction(_x) {
           return _ref24.apply(this, arguments);
         };
       }();
diff --git a/node_modules/@storybook/client-api/dist/modern/story_store.js b/node_modules/@storybook/client-api/dist/modern/story_store.js
index d1e0e21..480a681 100644
--- a/node_modules/@storybook/client-api/dist/modern/story_store.js
+++ b/node_modules/@storybook/client-api/dist/modern/story_store.js
@@ -595,21 +595,22 @@ export default class StoryStore {
       argTypeDefaultValueWarning();
     }
 
-    const initialArgsBeforeEnhancers = Object.assign({}, defaultArgs, passedArgs);
+    const originalArgs = Object.assign({}, defaultArgs, passedArgs);
 
     const initialArgs = this._argsEnhancers.reduce((accumulatedArgs, enhancer) => Object.assign({}, accumulatedArgs, enhancer(Object.assign({}, identification, {
       parameters: combinedParameters,
-      args: initialArgsBeforeEnhancers,
+      args: accumulatedArgs,
       argTypes,
       globals: {},
+      originalArgs,
       originalStoryFn: getOriginal()
-    }))), initialArgsBeforeEnhancers);
+    }))), originalArgs);
 
-    const runPlayFunction = async () => {
+    const runPlayFunction = async context => {
       const {
         play
       } = combinedParameters;
-      return play ? play() : undefined;
+      return play ? play(context) : undefined;
     };
 
     _stories[id] = Object.assign({}, identification, {
diff --git a/node_modules/@storybook/client-api/dist/ts3.4/types.d.ts b/node_modules/@storybook/client-api/dist/ts3.4/types.d.ts
index 8d74463..373b725 100644
--- a/node_modules/@storybook/client-api/dist/ts3.4/types.d.ts
+++ b/node_modules/@storybook/client-api/dist/ts3.4/types.d.ts
@@ -33,12 +33,15 @@ export declare type AddStoryArgs = StoryIdentifier & {
     decorators?: DecoratorFunction[];
     loaders?: LoaderFunction[];
 };
+export declare type PlayContext = StoryContext & {
+    canvasId: string;
+};
 export declare type StoreItem = StoryIdentifier & {
     parameters: Parameters;
     getDecorated: () => StoryFn<any>;
     getOriginal: () => StoryFn<any>;
     applyLoaders: () => Promise<StoryContext>;
-    runPlayFunction: () => Promise<any>;
+    runPlayFunction: (context: PlayContext) => Promise<any>;
     storyFn: StoryFn<any>;
     unboundStoryFn: StoryFn<any>;
     hooks: HooksContext;
diff --git a/node_modules/@storybook/client-api/dist/ts3.9/types.d.ts b/node_modules/@storybook/client-api/dist/ts3.9/types.d.ts
index a0c0693..29c5d8d 100644
--- a/node_modules/@storybook/client-api/dist/ts3.9/types.d.ts
+++ b/node_modules/@storybook/client-api/dist/ts3.9/types.d.ts
@@ -33,12 +33,15 @@ export declare type AddStoryArgs = StoryIdentifier & {
     decorators?: DecoratorFunction[];
     loaders?: LoaderFunction[];
 };
+export declare type PlayContext = StoryContext & {
+    canvasId: string;
+};
 export declare type StoreItem = StoryIdentifier & {
     parameters: Parameters;
     getDecorated: () => StoryFn<any>;
     getOriginal: () => StoryFn<any>;
     applyLoaders: () => Promise<StoryContext>;
-    runPlayFunction: () => Promise<any>;
+    runPlayFunction: (context: PlayContext) => Promise<any>;
     storyFn: StoryFn<any>;
     unboundStoryFn: StoryFn<any>;
     hooks: HooksContext;
